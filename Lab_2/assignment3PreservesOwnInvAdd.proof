\settings {
"#Proof-Settings-Config-File
#Wed Feb 15 11:58:29 CET 2012
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[DecisionProcedure]showSMTResDialog=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[DecisionProcedure]ActiveRule=SIMPLIFY_PROVER
[DecisionProcedure]multprovers=Z3\\=true\\:Simplify\\=true\\:Yices\\=true\\:CVC3\\=true
[Choice]DefaultChoices=transactions-transactions\\:transactionsOff , throughout-throughout\\:toutOff , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOff , rtsj-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool , memory-memory\\:off , javacard-javacard\\:jcOff
[TacletTranslation]filename=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[View]HideIntermediateProofsteps=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[DecisionProcedure]WeakenSMTTranslation=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DecisionProcedure]savefile_path=
[General]StupidMode=true
[DecisionProcedure]SolverTimeout=60
[General]UseJML=true
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[DecisionProcedure]pd_mode=0
[DecisionProcedure]Exec=Z3\\=z3 -smt -m %f\\:Simplify\\=simplify.exe %f\\:Yices\\=yices -tc -e -smt %f\\:CVC3\\=cvc3 -lang smt +model %f
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[General]SoundNotification=false
[DecisionProcedure]cache_goals=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , assertions-assertions\\:on-assertions\\:off-assertions\\:safe , programRules-programRules\\:Java-programRules\\:ODL , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , rtsj-rtsj\\:on-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool-stringRules\\:withoutStringPool , memory-memory\\:off-memory\\:on , javacard-javacard\\:jcOff-javacard\\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[TacletTranslation]maxGeneric=3
"
}

\javaSource "C:\\Users\\dome\\UNI\\WS_11_12\\SEFM\\SEFM_Git\\Lab_2\\MazeLab";



\programVariables {
java.lang.Throwable exc;
maze.Highscore self;
maze.Record _rec;
maze.Record rec;
maze.Record result;
}

\functions {
\nonRigid[LocationNoHeap] maze.Record getAtPre_0(maze.Record[],int);
\nonRigid[LocationNoHeap] jint minAtPre_0(maze.Highscore);
\nonRigid[LocationNoHeap] maze.Record[] highscoresAtPre_0(maze.Highscore);
\nonRigid[LocationNoHeap] maze.Record recAtPre_0;
\nonRigid[LocationNoHeap] jint sizeAtPre_1(maze.Highscore);
\nonRigid[LocationNoHeap] jint sizeAtPre_0(maze.Highscore);
}

\predicates {
}

\problem {
     inReachableState
   & (  \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.capacity@(maze.Highscore)
                >  (jint)(0)
              &   m_0.capacity@(maze.Highscore)
                = m_0.highscores@(maze.Highscore).length)
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.size@(maze.Highscore)
                <= m_0.capacity@(maze.Highscore)
              & m_0.size@(maze.Highscore) >= (jint)(0))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->    m_0.highscores@(maze.Highscore).length
              <= m_0.capacity@(maze.Highscore))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> \forall jint i; 
                (     i >= (jint)(0)
                    & i <  m_0.size@(maze.Highscore)
                    & inInt(i)
                 -> !  m_0.highscores@(maze.Highscore)[i]
                     = null))
      & \forall maze.Highscore h; 
          (   !h = null
           ->   h = null
              | \forall maze.Highscore other; 
                  (       h.highscores@(maze.Highscore)
                        = other.highscores@(maze.Highscore)
                      & !other = null
                   -> h = other))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> !m_0.highscores@(maze.Highscore) = null)
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.min@(maze.Highscore)
                >= (jint)-((jint)(1))
              &    m_0.min@(maze.Highscore)
                <  m_0.size@(maze.Highscore)
              & (  (      m_0.min@(maze.Highscore)
                        = (jint)-((jint)(1))
                    <->   m_0.size@(maze.Highscore)
                        = (jint)(0))
                 & (    !  m_0.min@(maze.Highscore)
                         = (jint)-((jint)(1))
                    <-> !\exists jint i; 
                           (  !  i
                               = m_0.min@(maze.Highscore)
                            & (  i >= (jint)(0)
                               &    i
                                 <  m_0.size@(maze.Highscore))
                            & inInt(i)
                            &    m_0.highscores@(maze.Highscore)[i].score@(maze.Record)
                              <  m_0.highscores@(maze.Highscore)[m_0.min@(maze.Highscore)].score@(maze.Record))))))
   & (       self.size@(maze.Highscore)
          >= self.capacity@(maze.Highscore)
        &    rec.score@(maze.Record)
          >  self.highscores@(maze.Highscore)[self.min@(maze.Highscore)].score@(maze.Record)
        & !rec = null
      |    self.size@(maze.Highscore)
        >= self.capacity@(maze.Highscore)
      &    rec.score@(maze.Record)
        <= self.highscores@(maze.Highscore)[self.min@(maze.Highscore)].score@(maze.Record)
      & !rec = null
      |    self.size@(maze.Highscore)
        <  self.capacity@(maze.Highscore)
      & !rec = null)
   & (  self.<created>@(java.lang.Object) = TRUE
      & !self = null)
   & (  rec.<created>@(java.lang.Object) = TRUE
      | rec = null)
-> {_rec:=rec}
     \[{
         exc=null;try {
           result=self.add(_rec)@maze.Highscore;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\] (  \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 ->      m_0.capacity@(maze.Highscore)
                      >  (jint)(0)
                    &   m_0.capacity@(maze.Highscore)
                      = m_0.highscores@(maze.Highscore).length)
            & \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 ->      m_0.size@(maze.Highscore)
                      <= m_0.capacity@(maze.Highscore)
                    &    m_0.size@(maze.Highscore)
                      >= (jint)(0))
            & \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 ->    m_0.highscores@(maze.Highscore).length
                    <= m_0.capacity@(maze.Highscore))
            & \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 -> \forall jint i; 
                      (     i >= (jint)(0)
                          &    i
                            <  m_0.size@(maze.Highscore)
                          & inInt(i)
                       -> !  m_0.highscores@(maze.Highscore)[i]
                           = null))
            & \forall maze.Highscore h; 
                (   !h = null
                 ->   h = null
                    | \forall maze.Highscore other; 
                        (       h.highscores@(maze.Highscore)
                              = other.highscores@(maze.Highscore)
                            & !other = null
                         -> h = other))
            & \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 -> !  m_0.highscores@(maze.Highscore)
                     = null)
            & \forall maze.Highscore m_0; 
                (       m_0.<created>@(java.lang.Object)
                      = TRUE
                    & !m_0 = null
                 ->      m_0.min@(maze.Highscore)
                      >= (jint)-((jint)(1))
                    &    m_0.min@(maze.Highscore)
                      <  m_0.size@(maze.Highscore)
                    & (  (      m_0.min@(maze.Highscore)
                              = (jint)-((jint)(1))
                          <->   m_0.size@(maze.Highscore)
                              = (jint)(0))
                       & (    !  m_0.min@(maze.Highscore)
                               = (jint)-((jint)(1))
                          <-> !\exists jint i; 
                                 (  !  i
                                     = m_0.min@(maze.Highscore)
                                  & (  i >= (jint)(0)
                                     &    i
                                       <  m_0.size@(maze.Highscore))
                                  & inInt(i)
                                  &    m_0.highscores@(maze.Highscore)[i].score@(maze.Record)
                                    <  m_0.highscores@(maze.Highscore)[m_0.min@(maze.Highscore)].score@(maze.Record))))))

}

\proof {
(keyLog "0" (keyUser "dome" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "179260")

(branch "dummy ID"
(rule "inInt" (formula "1") (term "1,0,0,1,0,1,0,0,0,1,0,0,0,0"))
(rule "inInt" (formula "1") (term "1,0,0,0,1,1,1,1,0,1,1,0,0,0,0"))
(rule "inInt" (formula "1") (term "1,0,0,1,0,1,0,0,0,0,1,1"))
(rule "inInt" (formula "1") (term "1,0,0,0,1,1,1,1,0,1,0,1,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,0,1,0,0,0,1,0,0,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0,0,1,1,1,1,0,1,1,0,0,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,0,1,0,0,0,0,1,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,0,1,1,1,1,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "assignment_instance_field_of_this" (formula "13") (term "1"))
(builtin "Update Simplification" (formula "13"))
(rule "castDelInt" (formula "8") (term "1,0,1,0,0,0,1,1,1,1,0"))
(rule "castDelInt" (formula "8") (term "0,0,1,0,0,1,1,1,0"))
(rule "neg_literal" (formula "8") (term "0,1,0,0,1,1,1,0"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,0"))
(rule "castDelInt" (formula "8") (term "1,1,0,1,1,0"))
(rule "castDelInt" (formula "8") (term "0,0,1,0,0,1,1,0"))
(rule "neg_literal" (formula "8") (term "0,1,0,0,1,1,0"))
(rule "castDelInt" (formula "5") (term "1,0,0,0,1,0"))
(rule "castDelInt" (formula "2") (term "1,0,1,0"))
(rule "castDelInt" (formula "3") (term "1,1,1,0"))
(rule "castDelInt" (formula "13") (term "1,0,0,0,1,0,1,0,0,0,0,2"))
(rule "castDelInt" (formula "13") (term "1,0,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "0,0,1,0,0,1,1,1,0,1,0,2"))
(rule "neg_literal" (formula "13") (term "0,1,0,0,1,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "1,1,1,0,1,0,0,0,0,0,0,2"))
(rule "castDelInt" (formula "13") (term "1,1,0,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "0,0,1,0,0,1,1,0,1,0,2"))
(rule "neg_literal" (formula "13") (term "0,1,0,0,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "0,0,1,0,0,1,0,1,0,2"))
(rule "neg_literal" (formula "13") (term "0,1,0,0,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,0,2"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,1,1,0"))
(rule "castDelInt" (formula "8") (term "0,1,0,0,1,0"))
(rule "neg_literal" (formula "8") (term "1,0,0,1,0"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,1,0"))
(rule "castDelInt" (formula "13") (term "1,0,0,1,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "1,0,0,1,1,0,1,0,2"))
(rule "castDelInt" (formula "13") (term "1,0,0,1,0,1,0,2"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,0,1,1,1,1,0"))
(rule "eqSymm" (formula "6") (term "0,0,0,1,1,0"))
(rule "eqSymm" (formula "6") (term "1,0,1,1,0"))
(rule "eqSymm" (formula "2") (term "1,1,0"))
(rule "eqSymm" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,2"))
(rule "eqSymm" (formula "13") (term "1,0,1,1,0,1,0,0,0,2"))
(rule "eqSymm" (formula "13") (term "0,0,0,1,1,0,1,0,0,0,2"))
(rule "eqSymm" (formula "13") (term "0,0,0,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0,0,0,1,1,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,0,1,0,2"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_gtToGeq" (formula "2") (term "0,1,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
(rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
(rule "inEqSimp_gtToGeq" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,2"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,2"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,2"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0,1,0,2"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,1,0"))
(rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,1,0"))
(rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0,1,0,2"))
(rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
(rule "mul_literals" (formula "2") (term "1,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,2"))
(rule "mul_literals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,0,2"))
(rule "inEqSimp_sepNegMonomial1" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "0,1,1,0,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,0,1,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0,1,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0,1,0,2"))
(rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_imp2or" (formula "3") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "double_not" (formula "6") (term "0,0"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,0,2"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,2"))
(rule "nnf_imp2or" (formula "2") (term "0"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,2"))
(rule "double_not" (formula "13") (term "0,0,1,0,0,0,2"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,0,2"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "double_not" (formula "7") (term "1,0,0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "double_not" (formula "4") (term "1,0,0"))
(rule "nnf_notAnd" (formula "3") (term "0,0"))
(rule "double_not" (formula "3") (term "1,0,0"))
(rule "nnf_notAnd" (formula "2") (term "0,0"))
(rule "double_not" (formula "2") (term "1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "double_not" (formula "8") (term "1,0,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "double_not" (formula "5") (term "1,0,0"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,2"))
(rule "nnf_imp2or" (formula "5") (term "0,1,0"))
(rule "nnf_imp2or" (formula "6") (term "0,1,1,0"))
(rule "nnf_notEx" (formula "8") (term "1,1,1,1,0"))
(rule "nnf_imp2or" (formula "13") (term "0,0,0,0,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,0,0,2"))
(rule "nnf_notAnd" (formula "5") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,1,0"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,0,2"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,1,0"))
(rule "double_not" (formula "6") (term "1,0,0,1,1,0"))
(rule "nnf_notAnd" (formula "8") (term "0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,0,1,1,1,1,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,1,1,1,1,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,1,1,1,1,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,1,1,1,1,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,1,1,0"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,0,0,0,0,0,2"))
(rule "nnf_imp2or" (formula "13") (term "0,1,1,0,1,0,0,0,2"))
(rule "nnf_notEx" (formula "13") (term "1,1,1,1,0,1,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "8") (term "0,0,1,1,1,1,0"))
(rule "double_not" (formula "8") (term "0,0,0,1,1,1,1,0"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,0,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,2"))
(rule "nnf_imp2or" (formula "13") (term "0,1,0,1,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,1,0,0,1,1,1,1,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,0,1,1,1,1,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0,0,1,1,1,1,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,1,0,0,1,1,1,1,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "1,0,1,0,0,1,1,1,1,0"))
(rule "nnf_notAnd" (formula "13") (term "0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,1,1,1,0,1,0,2"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,1,1,1,0,1,0,2"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,1,1,0,1,0,2"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,1,1,0,1,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,1,0,0,0,2"))
(rule "double_not" (formula "13") (term "1,0,0,1,1,0,1,0,0,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,1,0,0,0,0,2"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,1,0,0,0,0,2"))
(rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,1,0,0,0,0,2"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,1,0,0,0,0,2"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,1,0,0,0,0,2"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,1,1,1,0,1,0,2"))
(rule "double_not" (formula "13") (term "0,0,0,1,1,1,1,0,1,0,2"))
(rule "nnf_notAnd" (formula "13") (term "1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "add_zero_left" (formula "13") (term "0,0,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "add_zero_right" (formula "13") (term "0,0,0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "mul_literals" (formula "13") (term "1,0,1,0,0,1,1,1,1,0,1,0,2"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "commute_or" (formula "3") (term "0,0"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "5") (term "0,0"))
(rule "commute_and" (formula "3") (term "1,0"))
(rule "commute_or" (formula "6") (term "0,0,1,1,0"))
(rule "orLeft" (formula "9"))
(branch "     self.size >= self.capacity
  & self.highscores[self.min].score <= -1 + rec.score
  & !rec = null
| self.size >= self.capacity
& self.highscores[self.min].score >= rec.score
& !rec = null"
   (rule "shift_paren_or" (formula "8") (term "0,0,1,1,1,1,0"))
   (rule "cnf_eqv" (formula "8") (term "0,1,1,0"))
   (rule "cut_direct" (formula "11") (term "1"))
   (branch " CUT: rec = null TRUE"
      (rule "concrete_or_3" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "11"))
      (rule "concrete_not_1" (formula "9") (term "1,0"))
      (rule "concrete_and_4" (formula "9") (term "0"))
      (rule "concrete_or_2" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "13") (ifseqformula "12"))
   )
   (branch " CUT: rec = null FALSE"
      (rule "concrete_or_4" (formula "11"))
      (rule "replace_known_right" (formula "9") (term "0,1,1") (ifseqformula "12"))
      (rule "concrete_not_2" (formula "9") (term "1,1"))
      (rule "concrete_and_3" (formula "9") (term "1"))
      (rule "replace_known_right" (formula "9") (term "0,1,0") (ifseqformula "12"))
      (rule "concrete_not_2" (formula "9") (term "1,0"))
      (rule "concrete_and_3" (formula "9") (term "0"))
      (rule "commute_or_2" (formula "6") (term "0,1,1,0"))
      (rule "commute_or" (formula "8") (term "0,0,0,1,1,1,1,0"))
      (rule "cnf_rightDist" (formula "2") (term "0"))
      (rule "distr_forallAnd" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "commute_or" (formula "3") (term "0"))
      (rule "cnf_rightDist" (formula "4") (term "0"))
      (rule "distr_forallAnd" (formula "4"))
      (rule "andLeft" (formula "4"))
      (rule "commute_or" (formula "5") (term "0"))
      (rule "orLeft" (formula "11"))
      (branch "   self.size >= self.capacity
& self.highscores[self.min].score <= -1 + rec.score"
         (rule "andLeft" (formula "11"))
         (rule "cnf_eqv" (formula "10") (term "1,1,1,0"))
         (rule "double_not" (formula "10") (term "0,1,1,1,1,0"))
         (rule "nnf_notAll" (formula "10") (term "1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,1,0,1,1,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,1,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,1,1,1,0"))
         (rule "all_pull_out3" (formula "7") (term "0"))
         (rule "shift_paren_or" (formula "7") (term "0,0"))
         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
         (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
         (rule "commute_or" (formula "7") (term "0,0,0,0,0"))
         (rule "all_pull_out3" (formula "8") (term "1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,1,0"))
         (rule "all_pull_out3" (formula "10") (term "1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,0,1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,0,0,1,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0,1,1,1,1,0"))
         (rule "ex_pull_out3" (formula "10") (term "0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0,0,1,1,1,0"))
         (rule "applyEq_or_gen2" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
         (rule "commute_and" (formula "10") (term "0,0,0,0,1,1,1,0"))
         (rule "ex_pull_out0" (formula "10") (term "1,1,1,0"))
         (rule "all_pull_out3" (formula "8") (term "0"))
         (rule "shift_paren_or" (formula "8") (term "0,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
         (rule "eq_or" (formula "8") (term "0,0,0,0,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,1,1,0"))
         (rule "ex_pull_out1" (formula "10") (term "1,1,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
         (rule "commute_and" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
         (rule "ex_pull_out1" (formula "10") (term "1,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
         (rule "ex_pull_out3" (formula "10") (term "0"))
         (rule "allLeft" (formula "6") (inst "t=self"))
         (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "17"))
         (rule "concrete_or_2" (formula "6") (term "0"))
         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "14"))
         (rule "concrete_not_1" (formula "6") (term "0"))
         (rule "concrete_or_2" (formula "6"))
         (rule "allLeft" (formula "10") (inst "t=self"))
         (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "15"))
         (rule "concrete_not_1" (formula "10") (term "1,0"))
         (rule "concrete_or_4" (formula "10") (term "0"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "18"))
         (rule "concrete_or_2" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "all_pull_out3" (formula "11") (term "0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
         (rule "distr_forallAnd" (formula "11") (term "0,0"))
         (rule "distr_existsAnd1" (formula "11") (term "0"))
         (rule "distr_forallAnd" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "commute_or_2" (formula "12") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0,0"))
         (rule "all_unused" (formula "11") (term "0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
         (rule "allLeft" (formula "4") (inst "t=self"))
         (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "16"))
         (rule "concrete_not_1" (formula "4") (term "1,0"))
         (rule "concrete_or_4" (formula "4") (term "0"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "20"))
         (rule "concrete_or_2" (formula "4"))
         (rule "allLeft" (formula "3") (inst "t=self"))
         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "3") (term "0"))
         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "17"))
         (rule "concrete_not_1" (formula "3") (term "0"))
         (rule "concrete_or_2" (formula "3"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "qeq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "allLeft" (formula "2") (inst "t=self"))
         (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "17"))
         (rule "concrete_not_1" (formula "2") (term "1,0"))
         (rule "concrete_or_4" (formula "2") (term "0"))
         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "2"))
         (rule "methodBodyExpand" (formula "22") (term "2"))
         (rule "allLeft" (formula "8") (inst "t=self"))
         (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "18"))
         (rule "concrete_not_1" (formula "8") (term "1,0"))
         (rule "concrete_or_4" (formula "8") (term "0"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "22"))
         (rule "concrete_or_2" (formula "8"))
         (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "8"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
         (rule "leq_literals" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "qeq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
         (rule "leq_literals" (formula "6") (term "0"))
         (rule "concrete_or_1" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "ifElseUnfold" (formula "21") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "b_4"))
         (rule "less_than_comparison_new" (formula "21") (term "2"))
         (builtin "Update Simplification" (formula "21"))
         (rule "assignment_instance_field_of_this" (formula "21") (term "2,2"))
         (builtin "Update Simplification" (formula "21"))
         (rule "assignment_instance_field_of_this" (formula "21") (term "2,1"))
         (builtin "Update Simplification" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "14"))
         (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0"))
         (rule "leq_literals" (formula "21") (term "0"))
         (rule "ifthenelse_false_for" (formula "21"))
         (rule "ifElse" (formula "21") (term "3"))
         (builtin "Update Simplification" (formula "21"))
         (rule "boolean_not_equal_2" (formula "21") (term "0"))
         (rule "ifthenelse_false_for" (formula "21"))
         (rule "elim_double_block_2" (formula "21") (term "2"))
         (rule "ifUnfold" (formula "21") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "b_5"))
         (rule "compound_greater_than_comparison_2" (formula "21") (term "2") (inst "#v1=j_1") (inst "#v0=j"))
         (rule "variableDeclarationAssign" (formula "21") (term "2"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "j_7"))
         (rule "methodCallWithAssignment" (formula "21") (term "2") (inst "#v0=j_8"))
         (branch " Normal Execution (_rec != null)"
            (builtin "Update Simplification" (formula "21"))
            (rule "variableDeclaration" (formula "21") (term "2") (newnames "j_8"))
            (rule "only_created_object_are_referenced_non_null" (formula "15") (term "0,0,0") (ifseqformula "16") (ifseqformula "1") (ifseqformula "18"))
            (rule "methodBodyExpand" (formula "22") (term "2"))
            (rule "methodCallReturn" (formula "22") (term "2"))
            (rule "assignment_instance_field_of_this" (formula "22") (term "2"))
            (builtin "Update Simplification" (formula "22"))
            (rule "methodCallEmpty" (formula "22") (term "3"))
            (rule "blockEmpty" (formula "22") (term "3"))
            (rule "assignment_instance_field_of_this" (formula "22") (term "3"))
            (builtin "Update Simplification" (formula "22"))
            (rule "variableDeclarationAssign" (formula "22") (term "3"))
            (rule "variableDeclaration" (formula "22") (term "3") (newnames "j_13"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "22") (term "3") (inst "#v0=v_Record"))
            (rule "variableDeclaration" (formula "22") (term "3") (newnames "v_Record_3"))
            (rule "assignment_array2" (formula "22") (term "3"))
            (branch " Normal Execution (highscores != null)"
               (builtin "Update Simplification" (formula "23"))
               (builtin "Update Simplification" (formula "22"))
               (rule "orRight" (formula "22"))
               (rule "orRight" (formula "22"))
               (rule "inEqSimp_ltRight" (formula "23"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "23"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
               (rule "times_zero_1" (formula "2") (term "0,0"))
               (rule "add_zero_left" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "methodCallWithAssignment" (formula "24") (term "4") (inst "#v0=j_14"))
               (branch " Normal Execution (v_Record_3 != null)"
                  (builtin "Update Simplification" (formula "24"))
                  (rule "variableDeclaration" (formula "25") (term "4") (newnames "j_14"))
                  (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "17") (ifseqformula "21"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "18") (term "0,0") (ifseqformula "17") (ifseqformula "3") (ifseqformula "24"))
                  (rule "methodBodyExpand" (formula "26") (term "4"))
                  (rule "methodCallReturn" (formula "26") (term "4"))
                  (rule "assignment_instance_field_of_this" (formula "26") (term "4"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "methodCallEmpty" (formula "26") (term "5"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "blockEmpty" (formula "26") (term "4"))
                  (rule "assignment" (formula "26") (term "4"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "greater_than_comparison_new" (formula "26") (term "4"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "assignment_instance_field_of_this" (formula "26") (term "2,2"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "assignment_instance_field_of_this" (formula "26") (term "2,1"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "inEqSimp_gtToGeq" (formula "26") (term "0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                  (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "19"))
                  (rule "ifthenelse_true_for" (formula "26"))
                  (rule "ifSplit" (formula "26"))
                  (branch " if b_5 true"
                     (builtin "Update Simplification" (formula "27"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_equal" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "26") (term "2"))
                     (rule "variableDeclaration" (formula "26") (term "2") (newnames "old"))
                     (rule "assignment_array2" (formula "26") (term "2"))
                     (branch " Normal Execution (highscores != null)"
                        (builtin "Update Simplification" (formula "27"))
                        (builtin "Update Simplification" (formula "26"))
                        (rule "orRight" (formula "26"))
                        (rule "orRight" (formula "26"))
                        (rule "inEqSimp_ltRight" (formula "27"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "assignment_to_reference_array_component_no_rtsj" (formula "26") (term "3"))
                        (branch " Normal Execution (highscores != null)"
                           (builtin "Update Simplification" (formula "27"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "array_store_static_analyse" (formula "1") (ifseqformula "23"))
                           (rule "true_left" (formula "1"))
                           (rule "methodCallWithAssignmentWithinClass" (formula "26") (term "6") (inst "#v0=j"))
                           (rule "variableDeclaration" (formula "26") (term "6") (newnames "j_15"))
                           (rule "methodBodyExpand" (formula "26") (term "6"))
                           (rule "variableDeclarationAssign" (formula "26") (term "6"))
                           (rule "variableDeclaration" (formula "26") (term "6") (newnames "minIdx"))
                           (rule "assignment" (formula "26") (term "6"))
                           (builtin "Update Simplification" (formula "26"))
                           (rule "variableDeclarationAssign" (formula "26") (term "7"))
                           (rule "variableDeclaration" (formula "26") (term "7") (newnames "idx"))
                           (rule "assignment" (formula "26") (term "7"))
                           (builtin "Update Simplification" (formula "26"))
                           (rule "whileInvBox" (formula "26") (newnames "minIdx_0,idx_0,minIdx_1,idx_1,anon_0") (inst "inv=  (idx >  (jint)(0) <-> minIdx >= (jint)(0))
& (  idx >= (jint)(0)
   & (  idx <= self.size@(maze.Highscore)
      & (  minIdx >= (jint)-((jint)(1))
         & (  minIdx <  idx
            & \\forall jint i; 
                (     i >= (jint)(0)
                    & i <  idx
                    & inInt(i)
                 ->    self.highscores@(maze.Highscore)[minIdx].score@(maze.Record)
                    <= self.highscores@(maze.Highscore)[i].score@(maze.Record))))))
& inReachableState") (inst "#v1=b") (inst "#modifies={minIdx,idx}"))
                           (branch " Invariant Initially Valid"
                              (builtin "Update Simplification" (formula "26"))
                              (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0"))
                              (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,0,0"))
                              (rule "castDelInt" (formula "26") (term "1,0,0,0"))
                              (rule "greater_literals" (formula "26") (term "0,0,0"))
                              (rule "concrete_eq_2" (formula "26") (term "0,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,1,0"))
                              (rule "castDelInt" (formula "26") (term "1,0,1,0"))
                              (rule "qeq_literals" (formula "26") (term "0,1,0"))
                              (rule "concrete_and_1" (formula "26") (term "1,0"))
                              (rule "castDelInt" (formula "26") (term "1,0,0,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0"))
                              (rule "concrete_not_2" (formula "26") (term "0,0"))
                              (rule "concrete_and_1" (formula "26") (term "0"))
                              (rule "castDelInt" (formula "26") (term "1,0,1,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,1,0"))
                              (rule "castDelInt" (formula "26") (term "1,1,0,0,1,1,1,0"))
                              (rule "castDelInt" (formula "26") (term "1,0,0,0,1,1,1,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,0"))
                              (rule "castDelInt" (formula "26") (term "1,0,1,1,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,1,1,0"))
                              (rule "less_literals" (formula "26") (term "0,1,1,0"))
                              (rule "concrete_and_1" (formula "26") (term "1,1,0"))
                              (rule "castDelInt" (formula "26") (term "0,1,0,1,0"))
                              (rule "neg_literal" (formula "26") (term "1,0,1,0"))
                              (rule "qeq_literals" (formula "26") (term "0,1,0"))
                              (rule "concrete_and_1" (formula "26") (term "1,0"))
                              (rule "castDelInt" (formula "26") (term "0,0,0,0,1,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "0,0,0,1,0,1,0"))
                              (rule "castDelInt" (formula "26") (term "1,2,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0"))
                              (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "16"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_contradEq7" (formula "26") (term "0,0,1,1,0,1,0") (ifseqformula "2"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1,0,1,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,1,0"))
                              (rule "leq_literals" (formula "26") (term "0,0,0,1,1,0,1,0"))
                              (rule "concrete_and_2" (formula "26") (term "0,0,1,1,0,1,0"))
                              (rule "ifthenelse_false" (formula "26") (term "0,1,1,0,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "26") (term "0,0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "26") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "26") (term "0,0"))
                              (rule "concrete_and_1" (formula "26") (term "0"))
                              (rule "nnf_imp2or" (formula "26") (term "0,0"))
                              (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,1,0,0,0"))
                              (rule "neq_or_2" (formula "26") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "26") (term "0,0"))
                              (rule "all_unused" (formula "26") (term "0"))
                              (rule "concrete_and_1" (formula "26"))
                              (rule "inReachableStateRewrite" (formula "26") (ifseqformula "3"))
                              (builtin "Update Simplification" (formula "26"))
                              (rule "eq_imp" (formula "26") (term "0,0,1"))
                              (rule "orRight" (formula "26"))
                              (rule "elim_forall12" (formula "27") (term "0,1"))
                              (rule "eqClose" (formula "27") (term "1,0,0,0,0,1,0,1,0,1"))
                              (rule "eqClose" (formula "27") (term "1,0,0,1,1,0,1,0,1"))
                              (rule "eqClose" (formula "27") (term "1,0,1,1,1,0,1"))
                              (rule "concrete_and_3" (formula "27") (term "0,0,0,0,1,0,1,0,1"))
                              (rule "concrete_and_3" (formula "27") (term "0,0,1,1,0,1,0,1"))
                              (rule "concrete_and_3" (formula "27") (term "0,1,1,1,0,1"))
                              (rule "elim_forall8" (formula "27") (term "1"))
                              (rule "eqClose" (formula "27") (term "0,0,0,0,1,0,1"))
                              (rule "eqClose" (formula "27") (term "0,0,1,1,0,1"))
                              (rule "eqClose" (formula "27") (term "0,1,1,1"))
                              (rule "ifthenelse_true" (formula "27") (term "0,0,0,1,0,1"))
                              (rule "ifthenelse_true" (formula "27") (term "0,1,1,0,1"))
                              (rule "ifthenelse_true" (formula "27") (term "1,1,1"))
                              (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "17"))
                              (rule "concrete_impl_1" (formula "27") (term "0,1"))
                              (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "21"))
                              (rule "concrete_or_1" (formula "27") (term "0,1"))
                              (rule "concrete_and_1" (formula "27") (term "1"))
                              (rule "array_store_static_analyse" (formula "27") (term "1") (ifseqformula "22"))
                              (rule "concrete_and_3" (formula "27"))
                              (rule "allRight" (formula "27") (inst "sk=o_0"))
                              (rule "closeTrue" (formula "27"))
                           )
                           (branch " Body Preserves Invariant"
                              (builtin "Update Simplification" (formula "26"))
                              (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,1,1,1,0,8,1,1,1"))
                              (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,1,0,1"))
                              (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,1,1,1,0,8,1,1,1"))
                              (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,1,0,1"))
                              (rule "concrete_impl_1" (formula "26"))
                              (rule "impRight" (formula "26"))
                              (rule "impRight" (formula "27"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "4"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "7"))
                              (rule "variableDeclarationAssign" (formula "35") (term "8"))
                              (rule "variableDeclarationAssign" (formula "1") (term "4"))
                              (rule "variableDeclaration" (formula "35") (term "8") (newnames "exc_1"))
                              (rule "variableDeclaration" (formula "1") (term "4") (newnames "b_10"))
                              (rule "assignment_instance_field_of_this" (formula "35") (term "8"))
                              (builtin "Update Simplification" (formula "35"))
                              (rule "variableDeclaration" (formula "35") (term "9") (newnames "thrownExc"))
                              (rule "blockThrow" (formula "35") (term "1,0,0,9"))
                              (rule "methodCallParamThrow" (formula "35") (term "1,0,0,9"))
                              (rule "blockThrow" (formula "35") (term "1,0,0,9"))
                              (rule "blockThrow" (formula "35") (term "1,0,0,9"))
                              (builtin "Update Simplification" (formula "35"))
                              (rule "methodCallParamThrow" (formula "35") (term "1,0,0,8"))
                              (builtin "Update Simplification" (formula "35"))
                              (rule "castDelInt" (formula "3") (term "1,1"))
                              (rule "castDelInt" (formula "3") (term "1,0"))
                              (rule "castDelInt" (formula "4") (term "1"))
                              (rule "castDelInt" (formula "6") (term "0,0,1"))
                              (rule "neg_literal" (formula "6") (term "0,1"))
                              (rule "castDelInt" (formula "8") (term "1,0,0,0"))
                              (rule "castDelInt" (formula "35") (term "1,0,1,1,1,0,1,1,1,0,7"))
                              (rule "castDelInt" (formula "35") (term "1,0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "castDelInt" (formula "35") (term "1,0,1,0,1,1,1,0,7"))
                              (rule "castDelInt" (formula "35") (term "1,1,0,0,1,1,1,0,7"))
                              (rule "castDelInt" (formula "35") (term "1,0,0,0,1,1,1,0,7"))
                              (rule "castDelInt" (formula "6") (term "1"))
                              (rule "castDelInt" (formula "35") (term "0,1,0,1,1,1,0,1,1,1,0,7"))
                              (rule "neg_literal" (formula "35") (term "1,0,1,1,1,0,1,1,1,0,7"))
                              (rule "eqSymm" (formula "8") (term "0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_gtToGeq" (formula "3") (term "0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,0,1,1,1,0,7"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1,1,1,0,7"))
                              (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,1,1,1,0,7"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "25"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,1,1,0,7"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,1,0,7"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                              (rule "mul_literals" (formula "6") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "nnf_imp2or" (formula "8") (term "0"))
                              (rule "nnf_notAnd" (formula "8") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                              (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "35") (term "0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "nnf_notAnd" (formula "35") (term "0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,1,1,1,0,1,1,1,0,7"))
                              (rule "inReachableStateExpand" (formula "9"))
                              (builtin "Update Simplification" (formula "9"))
                              (rule "eq_imp" (formula "9") (term "0,0,1"))
                              (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "12"))
                              (rule "concrete_impl_1" (formula "9"))
                              (rule "andLeft" (formula "9"))
                              (rule "elim_forall12" (formula "10") (term "0"))
                              (rule "eqClose" (formula "10") (term "1,0,0,0,0,1,0,1,0"))
                              (rule "eqClose" (formula "10") (term "1,0,0,1,1,0,1,0"))
                              (rule "eqClose" (formula "10") (term "1,0,1,1,1,0"))
                              (rule "concrete_and_3" (formula "10") (term "0,0,0,0,1,0,1,0"))
                              (rule "concrete_and_3" (formula "10") (term "0,0,1,1,0,1,0"))
                              (rule "concrete_and_3" (formula "10") (term "0,1,1,1,0"))
                              (rule "elim_forall8" (formula "10"))
                              (rule "eqClose" (formula "10") (term "0,0,1,1,0"))
                              (rule "eqClose" (formula "10") (term "0,0,0,0,1,0"))
                              (rule "eqClose" (formula "10") (term "0,1,1"))
                              (rule "ifthenelse_true" (formula "10") (term "0,1,1,0"))
                              (rule "ifthenelse_true" (formula "10") (term "0,0,0,1,0"))
                              (rule "ifthenelse_true" (formula "10") (term "1,1"))
                              (rule "andLeft" (formula "10"))
                              (rule "replace_known_right" (formula "10") (term "1,1") (ifseqformula "34"))
                              (rule "concrete_or_4" (formula "10") (term "1"))
                              (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "32"))
                              (rule "concrete_impl_4" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "array_store_static_analyse" (formula "10") (ifseqformula "32"))
                              (rule "true_left" (formula "10"))
                              (rule "all_unused" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "less_than_comparison_new" (formula "1") (term "4"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "assignment_instance_field_of_this" (formula "1") (term "3,2"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "methodCallEmpty" (formula "1") (term "4,2"))
                              (rule "assignment_instance_field_of_this" (formula "1") (term "3,1"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "methodCallEmpty" (formula "1") (term "4,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "ifthenelse_split" (formula "8") (term "0,1,1,0"))
                              (branch " self.min = minIdx_0 TRUE"
                                 (rule "applyEq" (formula "35") (term "5") (ifseqformula "8"))
                                 (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "10"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "2") (term "3") (ifseqformula "8"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "8"))
                                 (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "11"))
                                 (rule "concrete_eq_3" (formula "3"))
                                 (rule "applyEq" (formula "9") (term "1,0,0,0,1,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "1") (term "2,1") (ifseqformula "8"))
                                 (rule "applyEq" (formula "1") (term "2,2") (ifseqformula "8"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_1" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "9") (term "0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "ifUnfold" (formula "33") (term "7") (inst "#boolv=b"))
                                 (rule "variableDeclaration" (formula "33") (term "7") (newnames "b_17"))
                                 (rule "less_than_comparison_new" (formula "33") (term "7"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "assignment_instance_field_of_this" (formula "33") (term "7,2"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "assignment_instance_field_of_this" (formula "33") (term "7,1"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "23"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                 (rule "ifthenelse_split_for" (formula "1"))
                                 (branch " self.capacity >= 1 + idx_0 TRUE"
                                    (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                    (rule "ifthenelse_true_for" (formula "34"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "emptyModality" (formula "2") (term "4"))
                                    (builtin "Update Simplification" (formula "2"))
                                    (rule "boolean_equal" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "allLeft" (formula "6") (inst "t=minIdx_0"))
                                    (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                    (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                                    (rule "add_literals" (formula "6") (term "1,0,1"))
                                    (rule "times_zero_1" (formula "6") (term "0,1"))
                                    (rule "leq_literals" (formula "6") (term "1"))
                                    (rule "concrete_or_3" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "ifSplit" (formula "32"))
                                    (branch " if b_17 true"
                                       (builtin "Update Simplification" (formula "33"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_equal" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifUnfold" (formula "32") (term "7") (inst "#boolv=b"))
                                       (rule "variableDeclaration" (formula "32") (term "7") (newnames "b_18"))
                                       (rule "evaluate_lazy_or" (formula "32") (term "7"))
                                       (rule "ifElseUnfold" (formula "32") (term "7") (inst "#boolv=b_19"))
                                       (rule "variableDeclaration" (formula "32") (term "7") (newnames "b_19"))
                                       (rule "equality_comparison_new" (formula "32") (term "7"))
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "assignment_instance_field_of_this" (formula "32") (term "7,2"))
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "assignment_instance_field_of_this" (formula "32") (term "7,1"))
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "32") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "32") (term "0,0"))
                                       (rule "concrete_not_2" (formula "32") (term "0"))
                                       (rule "ifthenelse_true_for" (formula "32"))
                                       (rule "ifElse" (formula "32") (term "8"))
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "boolean_not_equal_2" (formula "32") (term "0"))
                                       (rule "ifthenelse_false_for" (formula "32"))
                                       (rule "elim_double_block_2" (formula "32") (term "7"))
                                       (rule "compound_less_than_comparison_2" (formula "32") (term "7") (inst "#v1=j_1") (inst "#v0=j"))
                                       (rule "variableDeclarationAssign" (formula "32") (term "7"))
                                       (rule "variableDeclaration" (formula "32") (term "7") (newnames "j_27"))
                                       (rule "methodCallWithAssignmentUnfoldTarget" (formula "32") (term "7") (inst "#v0=v_Record"))
                                       (rule "variableDeclaration" (formula "32") (term "7") (newnames "v_Record_7"))
                                       (rule "assignment_array2" (formula "32") (term "7"))
                                       (branch " Normal Execution (highscores != null)"
                                          (builtin "Update Simplification" (formula "33"))
                                          (builtin "Update Simplification" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "orRight" (formula "32"))
                                          (rule "eqSymm" (formula "34") (term "0,4"))
                                          (rule "inEqSimp_ltRight" (formula "33"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "33") (term "0,4") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,4"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,4"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,0,4"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,0,4"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,4"))
                                          (rule "qeq_literals" (formula "33") (term "0,0,4"))
                                          (rule "concrete_and_2" (formula "33") (term "0,4"))
                                          (rule "ifthenelse_false" (formula "33") (term "4"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (rule "concrete_or_1" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "methodCallWithAssignment" (formula "32") (term "8") (inst "#v0=j_28"))
                                          (branch " Normal Execution (v_Record_7 != null)"
                                             (builtin "Update Simplification" (formula "32"))
                                             (rule "variableDeclaration" (formula "33") (term "8") (newnames "j_28"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "24") (term "0,0") (ifseqformula "23") (ifseqformula "9") (ifseqformula "31"))
                                             (rule "methodBodyExpand" (formula "33") (term "8"))
                                             (rule "methodCallReturn" (formula "33") (term "8"))
                                             (rule "assignment_instance_field_of_this" (formula "33") (term "8"))
                                             (builtin "Update Simplification" (formula "33"))
                                             (rule "methodCallEmpty" (formula "33") (term "9"))
                                             (builtin "Update Simplification" (formula "33"))
                                             (rule "blockEmpty" (formula "33") (term "8"))
                                             (rule "assignment_instance_field_of_this" (formula "33") (term "8"))
                                             (builtin "Update Simplification" (formula "33"))
                                             (rule "variableDeclarationAssign" (formula "33") (term "8"))
                                             (rule "variableDeclaration" (formula "33") (term "8") (newnames "j_29"))
                                             (rule "methodCallWithAssignmentUnfoldTarget" (formula "33") (term "8") (inst "#v0=v_Record"))
                                             (rule "variableDeclaration" (formula "33") (term "8") (newnames "v_Record_8"))
                                             (rule "assignment_array2" (formula "33") (term "8"))
                                             (branch " Normal Execution (highscores != null)"
                                                (builtin "Update Simplification" (formula "34"))
                                                (builtin "Update Simplification" (formula "33"))
                                                (rule "orRight" (formula "33"))
                                                (rule "orRight" (formula "33"))
                                                (rule "inEqSimp_ltRight" (formula "34"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "methodCallWithAssignment" (formula "33") (term "9") (inst "#v0=j_30"))
                                                (branch " Normal Execution (v_Record_8 != null)"
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "variableDeclaration" (formula "33") (term "9") (newnames "j_30"))
                                                   (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "32") (term "0") (ifseqformula "23") (ifseqformula "9") (ifseqformula "32"))
                                                   (rule "methodBodyExpand" (formula "34") (term "9"))
                                                   (rule "methodCallReturn" (formula "34") (term "9"))
                                                   (rule "assignment_instance_field_of_this" (formula "34") (term "9"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "methodCallEmpty" (formula "34") (term "10"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "blockEmpty" (formula "34") (term "9"))
                                                   (rule "assignment_instance_field_of_this" (formula "34") (term "9"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "less_than_comparison_new" (formula "34") (term "9"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "assignment_instance_field_of_this" (formula "34") (term "7,1"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "blockEmpty" (formula "34") (term "8,1"))
                                                   (rule "assignment_instance_field_of_this" (formula "34") (term "7,2"))
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (rule "blockEmpty" (formula "34") (term "8,2"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0"))
                                                   (rule "ifthenelse_split_for" (formula "34"))
                                                   (branch " self.highscores[idx_0].score <= -1 + rec.score TRUE"
                                                      (rule "if" (formula "35") (term "8"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "boolean_equal" (formula "35") (term "0"))
                                                      (rule "ifthenelse_true_for" (formula "35"))
                                                      (rule "assignment_instance_field_of_this" (formula "35") (term "7"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "blockEmpty" (formula "35") (term "7"))
                                                      (rule "postincrement" (formula "35") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "35") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "35") (term "7"))
                                                      (rule "variableDeclaration" (formula "35") (term "7") (newnames "j_31"))
                                                      (rule "remove_parentheses_right" (formula "35") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "35") (term "7"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "3"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "3"))
                                                      (rule "widening_identity_cast_5" (formula "35") (term "8"))
                                                      (rule "assignment" (formula "35") (term "8"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "tryEmpty" (formula "35") (term "7"))
                                                      (rule "methodCallEmpty" (formula "35") (term "7"))
                                                      (rule "castDelInt" (formula "35") (term "2"))
                                                      (rule "emptyModality" (formula "35") (term "7"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "boolean_not_equal_2" (formula "35") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "35") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "35") (term "0"))
                                                      (rule "concrete_not_2" (formula "35") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "35"))
                                                      (rule "concrete_impl_1" (formula "35"))
                                                      (rule "castDelInt" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "1,1,0,1,1,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "0,0,0,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "1,0,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "0,0,1,0,1"))
                                                      (rule "eqSymm" (formula "35") (term "0,0,1,1,0,1,1,1,1,1,0,1"))
                                                      (rule "replace_known_left" (formula "35") (term "5,0") (ifseqformula "4"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "concrete_and_1" (formula "35"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "0,1,0,1,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "35") (term "1,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "35") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1,1,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,0,0,1,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "0,0,1,1,1,1,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0,1,1,1,1,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,1,1,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,1,0") (ifseqformula "24"))
                                                      (rule "replace_known_left" (formula "35") (term "0,1,1,0") (ifseqformula "3"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,1,0"))
                                                      (rule "inEqSimp_invertInEq0" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0"))
                                                      (rule "eq_eq" (formula "35") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "35") (term "0,0,1,1,0,1,1,0") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0,0,1,1,0,1,1,0"))
                                                      (rule "concrete_and_2" (formula "35") (term "0,0,1,1,0,1,1,0"))
                                                      (rule "ifthenelse_false" (formula "35") (term "0,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "35") (term "0,0,1,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,1,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "0"))
                                                      (rule "inReachableStateRewrite" (formula "35") (term "1") (ifseqformula "11"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "eq_imp" (formula "35") (term "0,0,1,1"))
                                                      (rule "elim_forall12" (formula "35") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,1,1,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,1,1,1,0,1,1,1"))
                                                      (rule "elim_forall8" (formula "35") (term "1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,0,1,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,1,1,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "0,1,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "1,1,1,1,1"))
                                                      (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "25"))
                                                      (rule "concrete_impl_1" (formula "35") (term "0,1,1,1"))
                                                      (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "29"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,1,1,1"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,1"))
                                                      (rule "array_store_static_analyse" (formula "35") (term "1,1,1") (ifseqformula "30"))
                                                      (rule "concrete_and_3" (formula "35") (term "1,1"))
                                                      (rule "all_unused" (formula "35") (term "1,1"))
                                                      (rule "concrete_or_3" (formula "35") (term "1"))
                                                      (rule "concrete_and_3" (formula "35"))
                                                      (rule "allRight" (formula "35") (inst "sk=i_108"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "eqSymm" (formula "37") (term "0,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "36"))
                                                      (rule "inEqSimp_geqRight" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                      (branch " minIdx_0 = i_108 TRUE"
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEqRigid" (formula "8") (term "3") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                         (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "8") (term "1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "12") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "5"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " minIdx_0 = i_108 FALSE"
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "allLeft" (formula "23") (inst "t=self"))
                                                         (rule "replace_known_right" (formula "23") (term "1,0,0,0,0") (ifseqformula "38"))
                                                         (rule "concrete_or_4" (formula "23") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "33"))
                                                         (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                                         (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "29"))
                                                         (rule "allLeft" (formula "12") (inst "t=i_108"))
                                                         (rule "eqSymm" (formula "12") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "12") (term "0,0,0,1") (ifseqformula "36"))
                                                         (rule "ifthenelse_false" (formula "12") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "12") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "12") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "12") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "12") (term "1"))
                                                         (rule "concrete_or_4" (formula "12"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "12"))
                                                         (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12"))
                                                         (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                         (rule "add_literals" (formula "12") (term "1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "0"))
                                                         (rule "qeq_literals" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch " self.highscores[idx_0].score <= -1 + rec.score FALSE"
                                                      (rule "inEqSimp_leqRight" (formula "34"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "if" (formula "35") (term "8"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "boolean_not_equal_2" (formula "35") (term "0"))
                                                      (rule "ifthenelse_false_for" (formula "35"))
                                                      (rule "postincrement" (formula "35") (term "7"))
                                                      (rule "compound_int_cast_expression" (formula "35") (term "7") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "35") (term "7"))
                                                      (rule "variableDeclaration" (formula "35") (term "7") (newnames "j_32"))
                                                      (rule "remove_parentheses_right" (formula "35") (term "7"))
                                                      (rule "assignmentAdditionInt" (formula "35") (term "7"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "translateJavaAddInt" (formula "35") (term "3"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "3"))
                                                      (rule "widening_identity_cast_5" (formula "35") (term "8"))
                                                      (rule "assignment_instance_field_of_this" (formula "35") (term "8"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "tryEmpty" (formula "35") (term "7"))
                                                      (rule "methodCallEmpty" (formula "35") (term "7"))
                                                      (rule "castDelInt" (formula "35") (term "2"))
                                                      (rule "emptyModality" (formula "35") (term "7"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "boolean_not_equal_2" (formula "35") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "35") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "35") (term "0"))
                                                      (rule "concrete_not_2" (formula "35") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "35"))
                                                      (rule "concrete_impl_1" (formula "35"))
                                                      (rule "castDelInt" (formula "35") (term "0,0,0,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "1,1,0,1,1,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "1,0,1,1,0,1"))
                                                      (rule "castDelInt" (formula "35") (term "0,0,1,0,1"))
                                                      (rule "replace_known_left" (formula "35") (term "1,0,0,1") (ifseqformula "10"))
                                                      (rule "concrete_eq_3" (formula "35") (term "0,0,1"))
                                                      (rule "replace_known_left" (formula "35") (term "5,0") (ifseqformula "4"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "concrete_and_1" (formula "35"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,1,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "0,1,0,1,1,1,1,0"))
                                                      (rule "add_zero_left" (formula "35") (term "1,0,1,1,1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                                      (rule "applyEq" (formula "35") (term "0,0,1,1,0") (ifseqformula "24"))
                                                      (rule "replace_known_left" (formula "35") (term "0,1,1,0") (ifseqformula "3"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,1,0"))
                                                      (rule "inEqSimp_invertInEq0" (formula "35") (term "0,0"))
                                                      (rule "times_zero_2" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,1,0") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "35") (term "0,0,1,1,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,1,1,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "35") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0,0,1,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,1,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "35") (term "0"))
                                                      (rule "inReachableStateRewrite" (formula "35") (term "1") (ifseqformula "11"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "eq_imp" (formula "35") (term "0,0,1,1"))
                                                      (rule "elim_forall12" (formula "35") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "1,0,1,1,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "35") (term "0,1,1,1,0,1,1,1"))
                                                      (rule "elim_forall8" (formula "35") (term "1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,1,1,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,0,1,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "1,1,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "0,1,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "35") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "25"))
                                                      (rule "concrete_impl_1" (formula "35") (term "0,1,1,1"))
                                                      (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "29"))
                                                      (rule "concrete_or_1" (formula "35") (term "0,1,1,1"))
                                                      (rule "concrete_and_1" (formula "35") (term "1,1,1"))
                                                      (rule "array_store_static_analyse" (formula "35") (term "1,1,1") (ifseqformula "30"))
                                                      (rule "concrete_and_3" (formula "35") (term "1,1"))
                                                      (rule "all_unused" (formula "35") (term "1,1"))
                                                      (rule "concrete_or_3" (formula "35") (term "1"))
                                                      (rule "concrete_and_3" (formula "35"))
                                                      (rule "allRight" (formula "35") (inst "sk=i_109"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "eqSymm" (formula "37") (term "0,0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "36"))
                                                      (rule "inEqSimp_leqRight" (formula "36"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                      (branch " minIdx_0 = i_109 TRUE"
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " minIdx_0 = i_109 FALSE"
                                                         (rule "allLeft" (formula "22") (inst "t=self"))
                                                         (rule "replace_known_left" (formula "22") (term "0,1,0,0,0") (ifseqformula "32"))
                                                         (rule "concrete_not_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "37"))
                                                         (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                                         (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "28"))
                                                         (rule "allLeft" (formula "11") (inst "t=i_109"))
                                                         (rule "eqSymm" (formula "11") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "11") (term "0,0,0,1") (ifseqformula "35"))
                                                         (rule "ifthenelse_false" (formula "11") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "11") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "11") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "11") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "11") (term "1"))
                                                         (rule "concrete_or_4" (formula "11"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "11"))
                                                         (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11"))
                                                         (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "0"))
                                                         (rule "qeq_literals" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_contradEq3" (formula "34") (ifseqformula "9"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                         (rule "concrete_and_2" (formula "34"))
                                                         (rule "false_right" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch " Null Reference (v_Record_8 = null)"
                                                   (builtin "Update Simplification" (formula "34"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "close" (formula "30") (ifseqformula "1"))
                                                )
                                             )
                                             (branch " Null Reference (highscores = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "29") (ifseqformula "1"))
                                             )
                                             (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "blockThrow" (formula "34") (term "8"))
                                                (builtin "Update Simplification" (formula "34"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (rule "concrete_and_2" (formula "1") (term "1"))
                                                (rule "concrete_or_4" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " Null Reference (v_Record_7 = null)"
                                             (builtin "Update Simplification" (formula "33"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "blockThrow" (formula "33") (term "7"))
                                             (rule "allLeft" (formula "18") (inst "t=self"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "28"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0,0") (ifseqformula "32"))
                                             (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "24"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "33") (term "0") (ifseqformula "25") (ifseqformula "10") (ifseqformula "33"))
                                             (rule "allLeft" (formula "18") (inst "t=idx_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "18") (term "1"))
                                             (rule "concrete_or_4" (formula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                             (rule "concrete_and_2" (formula "18") (term "1"))
                                             (rule "concrete_or_4" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0"))
                                             (rule "concrete_and_2" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                       )
                                       (branch " Null Reference (highscores = null)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "29") (ifseqformula "1"))
                                       )
                                       (branch " Index Out of Bounds (highscores != null, but idx Out of Bounds!)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "blockThrow" (formula "33") (term "7"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (rule "concrete_and_2" (formula "1") (term "1"))
                                          (rule "concrete_or_4" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch " if b_17 false"
                                       (rule "false_to_not_true" (formula "1") (term "8"))
                                       (builtin "Update Simplification" (formula "33"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_equal" (formula "1") (term "0"))
                                       (rule "concrete_not_1" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " self.capacity >= 1 + idx_0 FALSE"
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "29"))
                                    (rule "ifthenelse_false_for" (formula "34"))
                                    (rule "inEqSimp_geqRight" (formula "29"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "10"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,0"))
                                    (rule "times_zero_1" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "12") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "22") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "emptyModality" (formula "1") (term "4"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "boolean_not_equal_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " self.min = minIdx_0 FALSE"
                                 (rule "equiv_left" (formula "3"))
                                 (branch " Case 1"
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (rule "concrete_or_1" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "ifUnfold" (formula "34") (term "7") (inst "#boolv=b"))
                                    (rule "variableDeclaration" (formula "34") (term "7") (newnames "b_14"))
                                    (rule "less_than_comparison_new" (formula "34") (term "7"))
                                    (builtin "Update Simplification" (formula "34"))
                                    (rule "assignment_instance_field_of_this" (formula "34") (term "7,1"))
                                    (builtin "Update Simplification" (formula "34"))
                                    (rule "assignment_instance_field_of_this" (formula "34") (term "7,2"))
                                    (builtin "Update Simplification" (formula "34"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                    (rule "applyEq" (formula "34") (term "0,1,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                                    (rule "ifthenelse_split_for" (formula "1"))
                                    (branch " self.capacity >= 1 + idx_0 TRUE"
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                       (rule "ifthenelse_true_for" (formula "35"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (rule "concrete_or_1" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "emptyModality" (formula "2") (term "4"))
                                       (builtin "Update Simplification" (formula "2"))
                                       (rule "boolean_equal" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "allLeft" (formula "6") (inst "t=minIdx_0"))
                                       (rule "eqSymm" (formula "6") (term "0,0,0,1"))
                                       (rule "replace_known_right" (formula "6") (term "0,0,0,1") (ifseqformula "29"))
                                       (rule "ifthenelse_false" (formula "6") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                                       (rule "add_literals" (formula "6") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "6") (term "0,1"))
                                       (rule "leq_literals" (formula "6") (term "1"))
                                       (rule "concrete_or_3" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "ifSplit" (formula "33"))
                                       (branch " if b_14 true"
                                          (builtin "Update Simplification" (formula "34"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "boolean_equal" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifUnfold" (formula "33") (term "7") (inst "#boolv=b"))
                                          (rule "variableDeclaration" (formula "33") (term "7") (newnames "b_15"))
                                          (rule "evaluate_lazy_or" (formula "33") (term "7"))
                                          (rule "ifElseUnfold" (formula "33") (term "7") (inst "#boolv=b_16"))
                                          (rule "variableDeclaration" (formula "33") (term "7") (newnames "b_16"))
                                          (rule "equality_comparison_new" (formula "33") (term "7"))
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "assignment_instance_field_of_this" (formula "33") (term "7,1"))
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "assignment_instance_field_of_this" (formula "33") (term "7,2"))
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "0,0") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "33") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "33") (term "0,0"))
                                          (rule "concrete_not_2" (formula "33") (term "0"))
                                          (rule "ifthenelse_true_for" (formula "33"))
                                          (rule "ifElse" (formula "33") (term "8"))
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "boolean_not_equal_2" (formula "33") (term "0"))
                                          (rule "ifthenelse_false_for" (formula "33"))
                                          (rule "elim_double_block_2" (formula "33") (term "7"))
                                          (rule "compound_less_than_comparison_2" (formula "33") (term "7") (inst "#v1=j_1") (inst "#v0=j"))
                                          (rule "variableDeclarationAssign" (formula "33") (term "7"))
                                          (rule "variableDeclaration" (formula "33") (term "7") (newnames "j_16"))
                                          (rule "methodCallWithAssignmentUnfoldTarget" (formula "33") (term "7") (inst "#v0=v_Record"))
                                          (rule "variableDeclaration" (formula "33") (term "7") (newnames "v_Record_4"))
                                          (rule "assignment_array2" (formula "33") (term "7"))
                                          (branch " Normal Execution (highscores != null)"
                                             (builtin "Update Simplification" (formula "34"))
                                             (builtin "Update Simplification" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "orRight" (formula "33"))
                                             (rule "eqSymm" (formula "35") (term "0,4"))
                                             (rule "inEqSimp_ltRight" (formula "34"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                             (rule "concrete_or_1" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "methodCallWithAssignment" (formula "33") (term "8") (inst "#v0=j_17"))
                                             (branch " Normal Execution (v_Record_4 != null)"
                                                (builtin "Update Simplification" (formula "33"))
                                                (rule "variableDeclaration" (formula "34") (term "8") (newnames "j_17"))
                                                (rule "ifthenelse_split" (formula "34") (term "4"))
                                                (branch " self.min = idx_0 TRUE"
                                                   (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "34") (term "0"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "34") (term "6") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "3") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                   (rule "concrete_and_2" (formula "28"))
                                                   (rule "false_right" (formula "28"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (rule "concrete_or_1" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "7") (inst "t=minIdx_0"))
                                                   (rule "inEqSimp_contradEq3" (formula "7") (term "0,0,0,1") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0,0,1"))
                                                   (rule "concrete_and_2" (formula "7") (term "0,0,0,1"))
                                                   (rule "ifthenelse_false" (formula "7") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1"))
                                                   (rule "add_literals" (formula "7") (term "1,0,1"))
                                                   (rule "times_zero_1" (formula "7") (term "0,1"))
                                                   (rule "leq_literals" (formula "7") (term "1"))
                                                   (rule "concrete_or_3" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "methodBodyExpand" (formula "31") (term "8"))
                                                   (rule "methodCallReturn" (formula "31") (term "8"))
                                                   (rule "assignment" (formula "31") (term "8"))
                                                   (builtin "Update Simplification" (formula "31"))
                                                   (rule "methodCallEmpty" (formula "31") (term "9"))
                                                   (builtin "Update Simplification" (formula "31"))
                                                   (rule "blockEmpty" (formula "31") (term "8"))
                                                   (rule "assignment" (formula "31") (term "8"))
                                                   (builtin "Update Simplification" (formula "31"))
                                                   (rule "variableDeclarationAssign" (formula "31") (term "8"))
                                                   (rule "variableDeclaration" (formula "31") (term "8") (newnames "j_18"))
                                                   (rule "methodCallWithAssignmentUnfoldTarget" (formula "31") (term "8") (inst "#v0=v_Record"))
                                                   (rule "variableDeclaration" (formula "31") (term "8") (newnames "v_Record_5"))
                                                   (rule "assignment_array2" (formula "31") (term "8"))
                                                   (branch " Normal Execution (highscores != null)"
                                                      (builtin "Update Simplification" (formula "32"))
                                                      (builtin "Update Simplification" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "inEqSimp_ltRight" (formula "32"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "32") (term "0,5") (ifseqformula "7"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,5"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,5"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,0,5"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,0,5"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,5"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0,5"))
                                                      (rule "concrete_and_2" (formula "32") (term "0,5"))
                                                      (rule "ifthenelse_false" (formula "32") (term "5"))
                                                      (rule "methodCallWithAssignment" (formula "32") (term "9") (inst "#v0=j_19"))
                                                      (branch " Normal Execution (v_Record_5 != null)"
                                                         (builtin "Update Simplification" (formula "32"))
                                                         (rule "variableDeclaration" (formula "33") (term "9") (newnames "j_22"))
                                                         (rule "methodBodyExpand" (formula "33") (term "9"))
                                                         (rule "methodCallReturn" (formula "33") (term "9"))
                                                         (rule "assignment_instance_field_of_this" (formula "33") (term "9"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "methodCallEmpty" (formula "33") (term "10"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "blockEmpty" (formula "33") (term "9"))
                                                         (rule "assignment_instance_field_of_this" (formula "33") (term "9"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "less_than_comparison_new" (formula "33") (term "9"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "assignment_instance_field_of_this" (formula "33") (term "7,2"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "blockEmpty" (formula "33") (term "8,2"))
                                                         (rule "assignment_instance_field_of_this" (formula "33") (term "7,1"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "blockEmpty" (formula "33") (term "8,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                                         (rule "ifthenelse_split_for" (formula "33"))
                                                         (branch " self.highscores[minIdx_0].score >= 1 + rec.score TRUE"
                                                            (rule "if" (formula "34") (term "8"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "boolean_equal" (formula "34") (term "0"))
                                                            (rule "ifthenelse_true_for" (formula "34"))
                                                            (rule "assignment_instance_field_of_this" (formula "34") (term "7"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "blockEmpty" (formula "34") (term "7"))
                                                            (rule "postincrement" (formula "34") (term "7"))
                                                            (rule "compound_int_cast_expression" (formula "34") (term "7") (inst "#v=j"))
                                                            (rule "variableDeclarationAssign" (formula "34") (term "7"))
                                                            (rule "variableDeclaration" (formula "34") (term "7") (newnames "j_23"))
                                                            (rule "remove_parentheses_right" (formula "34") (term "7"))
                                                            (rule "assignmentAdditionInt" (formula "34") (term "7"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "translateJavaAddInt" (formula "34") (term "3"))
                                                            (rule "polySimp_addComm0" (formula "34") (term "3"))
                                                            (rule "widening_identity_cast_5" (formula "34") (term "8"))
                                                            (rule "assignment_instance_field_of_this" (formula "34") (term "8"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "tryEmpty" (formula "34") (term "7"))
                                                            (rule "methodCallEmpty" (formula "34") (term "7"))
                                                            (rule "castDelInt" (formula "34") (term "2"))
                                                            (rule "emptyModality" (formula "34") (term "7"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "boolean_not_equal_2" (formula "34") (term "0,0"))
                                                            (rule "boolean_not_equal_2" (formula "34") (term "0,0,1"))
                                                            (rule "concrete_impl_2" (formula "34") (term "0"))
                                                            (rule "concrete_not_2" (formula "34") (term "0,1"))
                                                            (rule "concrete_and_1" (formula "34"))
                                                            (rule "concrete_impl_1" (formula "34"))
                                                            (rule "castDelInt" (formula "34") (term "1,1,0,1,1,1,1,0,1"))
                                                            (rule "castDelInt" (formula "34") (term "1,0,1,1,0,1"))
                                                            (rule "castDelInt" (formula "34") (term "0,0,0,0,1"))
                                                            (rule "castDelInt" (formula "34") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                            (rule "castDelInt" (formula "34") (term "0,0,1,0,1"))
                                                            (rule "replace_known_left" (formula "34") (term "5,0") (ifseqformula "5"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "concrete_and_1" (formula "34"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "34") (term "0,1,0,1,1,1,1,0"))
                                                            (rule "add_zero_left" (formula "34") (term "1,0,1,1,1,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "34") (term "1,0,0,1,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0,1,1,1,1,0"))
                                                            (rule "qeq_literals" (formula "34") (term "0,1,1,1,1,0"))
                                                            (rule "concrete_and_1" (formula "34") (term "1,1,1,1,0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "23"))
                                                            (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                            (rule "concrete_and_1" (formula "34") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,1,0"))
                                                            (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0,0"))
                                                            (rule "times_zero_2" (formula "34") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                                            (rule "eq_eq" (formula "34") (term "0,0"))
                                                            (rule "concrete_and_1" (formula "34") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "34") (term "0,1,0") (ifseqformula "6"))
                                                            (rule "leq_literals" (formula "34") (term "0,0,1,0"))
                                                            (rule "concrete_or_1" (formula "34") (term "0,1,0"))
                                                            (rule "concrete_and_1" (formula "34") (term "1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                            (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                            (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                            (rule "concrete_and_1" (formula "34") (term "0"))
                                                            (rule "inReachableStateRewrite" (formula "34") (term "1") (ifseqformula "10"))
                                                            (builtin "Update Simplification" (formula "34"))
                                                            (rule "eq_imp" (formula "34") (term "0,0,1,1"))
                                                            (rule "elim_forall12" (formula "34") (term "0,1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "1,0,1,1,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "34") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "34") (term "0,0,1,1,0,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "34") (term "0,1,1,1,0,1,1,1"))
                                                            (rule "elim_forall8" (formula "34") (term "1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "0,0,0,0,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "0,0,1,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "34") (term "0,1,1,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "34") (term "0,0,0,1,0,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "34") (term "0,1,1,0,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "34") (term "1,1,1,1,1"))
                                                            (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "24"))
                                                            (rule "concrete_impl_1" (formula "34") (term "0,1,1,1"))
                                                            (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "28"))
                                                            (rule "concrete_or_1" (formula "34") (term "0,1,1,1"))
                                                            (rule "concrete_and_1" (formula "34") (term "1,1,1"))
                                                            (rule "array_store_static_analyse" (formula "34") (term "1,1,1") (ifseqformula "29"))
                                                            (rule "concrete_and_3" (formula "34") (term "1,1"))
                                                            (rule "all_unused" (formula "34") (term "1,1"))
                                                            (rule "concrete_or_3" (formula "34") (term "1"))
                                                            (rule "concrete_and_3" (formula "34"))
                                                            (rule "allRight" (formula "34") (inst "sk=i_103"))
                                                            (rule "orRight" (formula "34"))
                                                            (rule "orRight" (formula "34"))
                                                            (rule "eqSymm" (formula "36") (term "0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "34"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "35"))
                                                            (rule "inEqSimp_geqRight" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "28") (term "0,0") (ifseqformula "27") (ifseqformula "13") (ifseqformula "35"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "12") (term "0,1,1,0") (ifseqformula "27") (ifseqformula "13") (ifseqformula "36"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                            (branch " idx_0 = i_103 TRUE"
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_literals" (formula "2") (term "0"))
                                                               (rule "qeq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch " idx_0 = i_103 FALSE"
                                                               (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "33"))
                                                               (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                               (rule "add_literals" (formula "33") (term "0,0"))
                                                               (rule "leq_literals" (formula "33") (term "0"))
                                                               (rule "concrete_and_2" (formula "33"))
                                                               (rule "false_right" (formula "33"))
                                                               (rule "allLeft" (formula "13") (inst "t=i_103"))
                                                               (rule "eqSymm" (formula "13") (term "0,0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "inEqSimp_contradEq7" (formula "13") (term "0,0,0,1") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,1"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
                                                               (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                                               (rule "leq_literals" (formula "13") (term "0,0,0,0,1"))
                                                               (rule "concrete_and_2" (formula "13") (term "0,0,0,1"))
                                                               (rule "ifthenelse_false" (formula "13") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "13") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "13") (term "0,0"))
                                                               (rule "concrete_and_2" (formula "13") (term "0"))
                                                               (rule "concrete_or_2" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch " self.highscores[minIdx_0].score >= 1 + rec.score FALSE"
                                                            (rule "inEqSimp_geqRight" (formula "33"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "ifSplit" (formula "34"))
                                                            (branch " if b_15 true"
                                                               (builtin "Update Simplification" (formula "35"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "boolean_not_equal_2" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch " if b_15 false"
                                                               (rule "false_to_not_true" (formula "1") (term "8"))
                                                               (builtin "Update Simplification" (formula "35"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "boolean_not_equal_2" (formula "1") (term "0"))
                                                               (rule "concrete_not_2" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "postincrement" (formula "34") (term "7"))
                                                               (rule "compound_int_cast_expression" (formula "34") (term "7") (inst "#v=j"))
                                                               (rule "variableDeclarationAssign" (formula "34") (term "7"))
                                                               (rule "variableDeclaration" (formula "34") (term "7") (newnames "j_24"))
                                                               (rule "remove_parentheses_right" (formula "34") (term "7"))
                                                               (rule "assignmentAdditionInt" (formula "34") (term "7"))
                                                               (builtin "Update Simplification" (formula "34"))
                                                               (rule "translateJavaAddInt" (formula "34") (term "3"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "3"))
                                                               (rule "widening_identity_cast_5" (formula "34") (term "8"))
                                                               (rule "assignment_instance_field_of_this" (formula "34") (term "8"))
                                                               (builtin "Update Simplification" (formula "34"))
                                                               (rule "tryEmpty" (formula "34") (term "7"))
                                                               (rule "methodCallEmpty" (formula "34") (term "7"))
                                                               (rule "castDelInt" (formula "34") (term "2"))
                                                               (rule "emptyModality" (formula "34") (term "7"))
                                                               (builtin "Update Simplification" (formula "34"))
                                                               (rule "boolean_not_equal_2" (formula "34") (term "0,0"))
                                                               (rule "boolean_not_equal_2" (formula "34") (term "0,0,1"))
                                                               (rule "concrete_impl_2" (formula "34") (term "0"))
                                                               (rule "concrete_not_2" (formula "34") (term "0,1"))
                                                               (rule "concrete_and_1" (formula "34"))
                                                               (rule "concrete_impl_1" (formula "34"))
                                                               (rule "castDelInt" (formula "34") (term "0,0,1,0,1"))
                                                               (rule "castDelInt" (formula "34") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                               (rule "castDelInt" (formula "34") (term "0,0,0,0,1"))
                                                               (rule "castDelInt" (formula "34") (term "1,1,0,1,1,1,1,0,1"))
                                                               (rule "castDelInt" (formula "34") (term "1,0,1,1,0,1"))
                                                               (rule "replace_known_left" (formula "34") (term "5,0") (ifseqformula "5"))
                                                               (builtin "Update Simplification" (formula "34"))
                                                               (rule "concrete_and_1" (formula "34"))
                                                               (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "7"))
                                                               (rule "concrete_eq_3" (formula "34") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "34") (term "0,1,0,1,1,1,1,0"))
                                                               (rule "add_zero_left" (formula "34") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                                               (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "23"))
                                                               (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                               (rule "concrete_and_1" (formula "34") (term "1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "34") (term "1,0,1,0"))
                                                               (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                               (rule "times_zero_2" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                               (rule "inEqSimp_contradEq3" (formula "34") (term "0,0,1,1,0,1,1,1,1,0") (ifseqformula "8"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "qeq_literals" (formula "34") (term "0,0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "concrete_and_2" (formula "34") (term "0,0,1,1,0,1,1,1,1,0"))
                                                               (rule "ifthenelse_false" (formula "34") (term "0,1,1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (term "0,1,1,0") (ifseqformula "7"))
                                                               (rule "leq_literals" (formula "34") (term "0,0,1,1,0"))
                                                               (rule "concrete_or_1" (formula "34") (term "0,1,1,0"))
                                                               (rule "concrete_and_1" (formula "34") (term "1,1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "34") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "34") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "34") (term "0,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "34") (term "0"))
                                                               (rule "inReachableStateRewrite" (formula "34") (term "1") (ifseqformula "10"))
                                                               (builtin "Update Simplification" (formula "34"))
                                                               (rule "eq_imp" (formula "34") (term "0,0,1,1"))
                                                               (rule "elim_forall12" (formula "34") (term "0,1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "1,0,1,1,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "34") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "34") (term "0,0,1,1,0,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "34") (term "0,1,1,1,0,1,1,1"))
                                                               (rule "elim_forall8" (formula "34") (term "1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "0,1,1,1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "0,0,1,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "34") (term "0,0,0,0,1,0,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "34") (term "1,1,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "34") (term "0,1,1,0,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "34") (term "0,0,0,1,0,1,1,1"))
                                                               (rule "replace_known_left" (formula "34") (term "0,1,0,1,1,1") (ifseqformula "28"))
                                                               (rule "concrete_or_1" (formula "34") (term "1,0,1,1,1"))
                                                               (rule "concrete_impl_4" (formula "34") (term "0,1,1,1"))
                                                               (rule "concrete_and_1" (formula "34") (term "1,1,1"))
                                                               (rule "array_store_static_analyse" (formula "34") (term "1,1,1") (ifseqformula "29"))
                                                               (rule "concrete_and_3" (formula "34") (term "1,1"))
                                                               (rule "all_unused" (formula "34") (term "1,1"))
                                                               (rule "concrete_or_3" (formula "34") (term "1"))
                                                               (rule "concrete_and_3" (formula "34"))
                                                               (rule "allRight" (formula "34") (inst "sk=i_104"))
                                                               (rule "orRight" (formula "34"))
                                                               (rule "orRight" (formula "34"))
                                                               (rule "eqSymm" (formula "36") (term "0,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "34"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "35"))
                                                               (rule "inEqSimp_geqRight" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "28") (term "0,0") (ifseqformula "27") (ifseqformula "13") (ifseqformula "35"))
                                                               (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "12") (term "0,1,1,0") (ifseqformula "27") (ifseqformula "13") (ifseqformula "36"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                               (branch " idx_0 = i_104 TRUE"
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "9") (term "3") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "30") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                  (rule "add_literals" (formula "4") (term "0"))
                                                                  (rule "leq_literals" (formula "4"))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch " idx_0 = i_104 FALSE"
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "33"))
                                                                  (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "33") (term "0,0"))
                                                                  (rule "leq_literals" (formula "33") (term "0"))
                                                                  (rule "concrete_and_2" (formula "33"))
                                                                  (rule "false_right" (formula "33"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "allLeft" (formula "14") (inst "t=i_104"))
                                                                  (rule "eqSymm" (formula "14") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "14") (term "0,0,0,1") (ifseqformula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,1"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,1"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0,0,0,1"))
                                                                  (rule "concrete_and_2" (formula "14") (term "0,0,0,1"))
                                                                  (rule "ifthenelse_false" (formula "14") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "14") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "14") (term "1"))
                                                                  (rule "concrete_or_4" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "14") (term "0"))
                                                                  (rule "concrete_or_2" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "14"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                  (rule "add_literals" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch " Null Reference (v_Record_5 = null)"
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "blockThrow" (formula "33") (term "8"))
                                                         (builtin "Update Simplification" (formula "33"))
                                                         (rule "applyEq" (formula "9") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "allLeft" (formula "18") (inst "t=self"))
                                                         (rule "replace_known_right" (formula "18") (term "1,0,0,0,0") (ifseqformula "32"))
                                                         (rule "concrete_or_4" (formula "18") (term "0,0,0,0"))
                                                         (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "28"))
                                                         (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                                         (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "24"))
                                                         (rule "allLeft" (formula "9") (inst "t=minIdx_0"))
                                                         (rule "applyEq" (formula "9") (term "2,0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "9") (term "0,0,0,1") (ifseqformula "8"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1"))
                                                         (rule "qeq_literals" (formula "9") (term "0,0,0,0,1"))
                                                         (rule "concrete_and_2" (formula "9") (term "0,0,0,1"))
                                                         (rule "ifthenelse_false" (formula "9") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1"))
                                                         (rule "add_literals" (formula "9") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "9") (term "0,1"))
                                                         (rule "leq_literals" (formula "9") (term "1"))
                                                         (rule "concrete_or_3" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "allLeft" (formula "18") (inst "t=minIdx_0"))
                                                         (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "18") (term "1"))
                                                         (rule "concrete_or_4" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "18") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "18") (term "0"))
                                                         (rule "concrete_or_2" (formula "18"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch " Null Reference (highscores = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "close" (formula "28") (ifseqformula "1"))
                                                   )
                                                   (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "blockThrow" (formula "32") (term "8"))
                                                      (builtin "Update Simplification" (formula "32"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "1") (term "1"))
                                                      (rule "concrete_or_4" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                                      (rule "leq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_1" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_literals" (formula "7") (term "0"))
                                                      (rule "leq_literals" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                )
                                                (branch " self.min = idx_0 FALSE"
                                                   (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "34"))
                                                   (rule "ifthenelse_false" (formula "33") (term "0"))
                                                   (rule "methodBodyExpand" (formula "35") (term "8"))
                                                   (rule "methodCallReturn" (formula "35") (term "8"))
                                                   (rule "assignment" (formula "35") (term "8"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "methodCallEmpty" (formula "35") (term "9"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "blockEmpty" (formula "35") (term "8"))
                                                   (rule "assignment" (formula "35") (term "8"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "variableDeclarationAssign" (formula "35") (term "8"))
                                                   (rule "variableDeclaration" (formula "35") (term "8") (newnames "j_19"))
                                                   (rule "methodCallWithAssignmentUnfoldTarget" (formula "35") (term "8") (inst "#v0=v_Record"))
                                                   (rule "variableDeclaration" (formula "35") (term "8") (newnames "v_Record_6"))
                                                   (rule "assignment_array2" (formula "35") (term "8"))
                                                   (branch " Normal Execution (highscores != null)"
                                                      (builtin "Update Simplification" (formula "36"))
                                                      (builtin "Update Simplification" (formula "35"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "orRight" (formula "35"))
                                                      (rule "eqSymm" (formula "37") (term "0,5"))
                                                      (rule "replace_known_right" (formula "37") (term "0,5") (ifseqformula "28"))
                                                      (rule "ifthenelse_false" (formula "37") (term "5"))
                                                      (rule "inEqSimp_ltRight" (formula "36"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "methodCallWithAssignment" (formula "36") (term "9") (inst "#v0=j_20"))
                                                      (branch " Normal Execution (v_Record_6 != null)"
                                                         (builtin "Update Simplification" (formula "36"))
                                                         (rule "variableDeclaration" (formula "37") (term "9") (newnames "j_20"))
                                                         (rule "methodBodyExpand" (formula "37") (term "9"))
                                                         (rule "methodCallReturn" (formula "37") (term "9"))
                                                         (rule "assignment_instance_field_of_this" (formula "37") (term "9"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "methodCallEmpty" (formula "37") (term "10"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "blockEmpty" (formula "37") (term "9"))
                                                         (rule "assignment_instance_field_of_this" (formula "37") (term "9"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "less_than_comparison_new" (formula "37") (term "9"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "assignment_instance_field_of_this" (formula "37") (term "7,2"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "blockEmpty" (formula "37") (term "8,2"))
                                                         (rule "assignment_instance_field_of_this" (formula "37") (term "7,1"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "blockEmpty" (formula "37") (term "8,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                         (rule "ifthenelse_split_for" (formula "37"))
                                                         (branch "    self.highscores[minIdx_0].score
>= 1
 + self.highscores[idx_0].score TRUE"
                                                            (rule "if" (formula "38") (term "8"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "boolean_equal" (formula "38") (term "0"))
                                                            (rule "ifthenelse_true_for" (formula "38"))
                                                            (rule "assignment_instance_field_of_this" (formula "38") (term "7"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "blockEmpty" (formula "38") (term "7"))
                                                            (rule "postincrement" (formula "38") (term "7"))
                                                            (rule "compound_int_cast_expression" (formula "38") (term "7") (inst "#v=j"))
                                                            (rule "variableDeclarationAssign" (formula "38") (term "7"))
                                                            (rule "variableDeclaration" (formula "38") (term "7") (newnames "j_25"))
                                                            (rule "remove_parentheses_right" (formula "38") (term "7"))
                                                            (rule "assignmentAdditionInt" (formula "38") (term "7"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "translateJavaAddInt" (formula "38") (term "3"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "3"))
                                                            (rule "widening_identity_cast_5" (formula "38") (term "8"))
                                                            (rule "assignment_instance_field_of_this" (formula "38") (term "8"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "tryEmpty" (formula "38") (term "7"))
                                                            (rule "methodCallEmpty" (formula "38") (term "7"))
                                                            (rule "castDelInt" (formula "38") (term "2"))
                                                            (rule "emptyModality" (formula "38") (term "7"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "boolean_not_equal_2" (formula "38") (term "0,0"))
                                                            (rule "boolean_not_equal_2" (formula "38") (term "0,0,1"))
                                                            (rule "concrete_impl_2" (formula "38") (term "0"))
                                                            (rule "concrete_not_2" (formula "38") (term "0,1"))
                                                            (rule "concrete_and_1" (formula "38"))
                                                            (rule "concrete_impl_1" (formula "38"))
                                                            (rule "castDelInt" (formula "38") (term "0,0,1,0,1"))
                                                            (rule "castDelInt" (formula "38") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                            (rule "castDelInt" (formula "38") (term "1,0,1,1,0,1"))
                                                            (rule "castDelInt" (formula "38") (term "1,1,0,1,1,1,1,0,1"))
                                                            (rule "castDelInt" (formula "38") (term "0,0,0,0,1"))
                                                            (rule "eqSymm" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,1"))
                                                            (rule "replace_known_left" (formula "38") (term "5,0") (ifseqformula "4"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "concrete_and_1" (formula "38"))
                                                            (rule "replace_known_right" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0") (ifseqformula "36"))
                                                            (rule "ifthenelse_false" (formula "38") (term "0,1,1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,1,0,1,1,1,1,0"))
                                                            (rule "add_zero_left" (formula "38") (term "1,0,1,1,1,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "38") (term "0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "38") (term "0,0,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "38") (term "1,0,0,1,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "38") (term "0,0,1,1,1,1,0"))
                                                            (rule "qeq_literals" (formula "38") (term "0,1,1,1,1,0"))
                                                            (rule "concrete_and_1" (formula "38") (term "1,1,1,1,0"))
                                                            (rule "applyEq" (formula "38") (term "0,0,1,1,0") (ifseqformula "24"))
                                                            (rule "replace_known_left" (formula "38") (term "0,1,1,0") (ifseqformula "3"))
                                                            (rule "concrete_and_1" (formula "38") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                                            (rule "inEqSimp_invertInEq0" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                                                            (rule "times_zero_2" (formula "38") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "0,0,0,0"))
                                                            (rule "eq_eq" (formula "38") (term "0,0"))
                                                            (rule "concrete_and_1" (formula "38") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "38") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "leq_literals" (formula "38") (term "0,0,1,0"))
                                                            (rule "concrete_or_1" (formula "38") (term "0,1,0"))
                                                            (rule "concrete_and_1" (formula "38") (term "1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                            (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                            (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                            (rule "concrete_and_1" (formula "38") (term "0"))
                                                            (rule "inReachableStateRewrite" (formula "38") (term "1") (ifseqformula "11"))
                                                            (builtin "Update Simplification" (formula "38"))
                                                            (rule "eq_imp" (formula "38") (term "0,0,1,1"))
                                                            (rule "elim_forall12" (formula "38") (term "0,1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "1,0,1,1,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "38") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "38") (term "0,0,1,1,0,1,0,1,1,1"))
                                                            (rule "concrete_and_3" (formula "38") (term "0,1,1,1,0,1,1,1"))
                                                            (rule "elim_forall8" (formula "38") (term "1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "0,1,1,1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "0,0,1,1,0,1,1,1"))
                                                            (rule "eqClose" (formula "38") (term "0,0,0,0,1,0,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "38") (term "1,1,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "38") (term "0,1,1,0,1,1,1"))
                                                            (rule "ifthenelse_true" (formula "38") (term "0,0,0,1,0,1,1,1"))
                                                            (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "25"))
                                                            (rule "concrete_impl_1" (formula "38") (term "0,1,1,1"))
                                                            (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "29"))
                                                            (rule "concrete_or_1" (formula "38") (term "0,1,1,1"))
                                                            (rule "concrete_and_1" (formula "38") (term "1,1,1"))
                                                            (rule "array_store_static_analyse" (formula "38") (term "1,1,1") (ifseqformula "31"))
                                                            (rule "concrete_and_3" (formula "38") (term "1,1"))
                                                            (rule "all_unused" (formula "38") (term "1,1"))
                                                            (rule "concrete_or_3" (formula "38") (term "1"))
                                                            (rule "concrete_and_3" (formula "38"))
                                                            (rule "allRight" (formula "38") (inst "sk=i_105"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "orRight" (formula "38"))
                                                            (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "38"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "39"))
                                                            (rule "inEqSimp_geqRight" (formula "40"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "38") (term "0") (ifseqformula "28") (ifseqformula "14") (ifseqformula "38"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "12") (term "0,1,1,0") (ifseqformula "29") (ifseqformula "15") (ifseqformula "41"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                            (branch " self.min = i_105 TRUE"
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "15"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                               (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "41") (term "0") (ifseqformula "2"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "9") (term "3") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "applyEq" (formula "14") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                               (rule "mul_literals" (formula "15") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                               (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "41"))
                                                               (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "4"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0"))
                                                               (rule "concrete_and_2" (formula "41"))
                                                               (rule "false_right" (formula "41"))
                                                               (rule "allLeft" (formula "14") (inst "t=minIdx_0"))
                                                               (rule "replace_known_right" (formula "14") (term "0,0,0,1") (ifseqformula "36"))
                                                               (rule "ifthenelse_false" (formula "14") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1"))
                                                               (rule "add_literals" (formula "14") (term "1,0,1"))
                                                               (rule "times_zero_1" (formula "14") (term "0,1"))
                                                               (rule "leq_literals" (formula "14") (term "1"))
                                                               (rule "concrete_or_3" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "allLeft" (formula "14") (inst "t=i_105"))
                                                               (rule "eqClose" (formula "14") (term "0,0,0,1"))
                                                               (rule "ifthenelse_true" (formula "14") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                               (rule "concrete_and_2" (formula "14") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "14") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "14") (term "0,0"))
                                                               (rule "concrete_and_2" (formula "14") (term "0"))
                                                               (rule "concrete_or_2" (formula "14"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_literals" (formula "6") (term "0"))
                                                               (rule "leq_literals" (formula "6"))
                                                               (rule "closeFalse" (formula "6"))
                                                            )
                                                            (branch " self.min = i_105 FALSE"
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "allLeft" (formula "24") (inst "t=self"))
                                                               (rule "replace_known_right" (formula "24") (term "1,0,0,0,0") (ifseqformula "40"))
                                                               (rule "concrete_or_4" (formula "24") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "24") (term "0,1,0,0,0") (ifseqformula "34"))
                                                               (rule "concrete_not_1" (formula "24") (term "1,0,0,0"))
                                                               (rule "concrete_or_4" (formula "24") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                               (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "30"))
                                                               (rule "allLeft" (formula "13") (inst "t=i_105"))
                                                               (rule "eqSymm" (formula "13") (term "0,0,0,1"))
                                                               (rule "replace_known_right" (formula "13") (term "0,0,0,1") (ifseqformula "37"))
                                                               (rule "ifthenelse_false" (formula "13") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "13") (term "0"))
                                                               (rule "cut_direct" (formula "13") (term "0"))
                                                               (branch " CUT: idx_0 <= i_105 TRUE"
                                                                  (rule "concrete_or_1" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "13"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "6") (term "1,0,1,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "0"))
                                                                  (rule "leq_literals" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "0"))
                                                                  (rule "qeq_literals" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                               (branch " CUT: idx_0 <= i_105 FALSE"
                                                                  (rule "concrete_or_2" (formula "13"))
                                                                  (rule "inEqSimp_leqRight" (formula "37"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "4") (term "0"))
                                                                  (rule "concrete_or_1" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                         )
                                                         (branch "    self.highscores[minIdx_0].score
>= 1
 + self.highscores[idx_0].score FALSE"
                                                            (rule "inEqSimp_geqRight" (formula "37"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "ifSplit" (formula "38"))
                                                            (branch " if b_15 true"
                                                               (builtin "Update Simplification" (formula "39"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "boolean_not_equal_2" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch " if b_15 false"
                                                               (rule "false_to_not_true" (formula "1") (term "8"))
                                                               (builtin "Update Simplification" (formula "39"))
                                                               (builtin "Update Simplification" (formula "1"))
                                                               (rule "boolean_not_equal_2" (formula "1") (term "0"))
                                                               (rule "concrete_not_2" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "postincrement" (formula "38") (term "7"))
                                                               (rule "compound_int_cast_expression" (formula "38") (term "7") (inst "#v=j"))
                                                               (rule "variableDeclarationAssign" (formula "38") (term "7"))
                                                               (rule "variableDeclaration" (formula "38") (term "7") (newnames "j_26"))
                                                               (rule "remove_parentheses_right" (formula "38") (term "7"))
                                                               (rule "assignmentAdditionInt" (formula "38") (term "7"))
                                                               (builtin "Update Simplification" (formula "38"))
                                                               (rule "translateJavaAddInt" (formula "38") (term "3"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "3"))
                                                               (rule "widening_identity_cast_5" (formula "38") (term "8"))
                                                               (rule "assignment" (formula "38") (term "8"))
                                                               (builtin "Update Simplification" (formula "38"))
                                                               (rule "tryEmpty" (formula "38") (term "7"))
                                                               (rule "methodCallEmpty" (formula "38") (term "7"))
                                                               (rule "castDelInt" (formula "38") (term "2"))
                                                               (rule "emptyModality" (formula "38") (term "7"))
                                                               (builtin "Update Simplification" (formula "38"))
                                                               (rule "boolean_not_equal_2" (formula "38") (term "0,0"))
                                                               (rule "boolean_not_equal_2" (formula "38") (term "0,0,1"))
                                                               (rule "concrete_impl_2" (formula "38") (term "0"))
                                                               (rule "concrete_not_2" (formula "38") (term "0,1"))
                                                               (rule "concrete_and_1" (formula "38"))
                                                               (rule "concrete_impl_1" (formula "38"))
                                                               (rule "castDelInt" (formula "38") (term "1,1,0,0,1,1,1,1,1,0,1"))
                                                               (rule "castDelInt" (formula "38") (term "1,0,1,1,0,1"))
                                                               (rule "castDelInt" (formula "38") (term "0,0,1,0,1"))
                                                               (rule "castDelInt" (formula "38") (term "0,0,0,0,1"))
                                                               (rule "castDelInt" (formula "38") (term "1,1,0,1,1,1,1,0,1"))
                                                               (rule "eqSymm" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,1"))
                                                               (rule "replace_known_right" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,1") (ifseqformula "30"))
                                                               (rule "ifthenelse_false" (formula "38") (term "0,1,1,0,1,1,1,1,1,0,1"))
                                                               (rule "replace_known_left" (formula "38") (term "1,0,0,1") (ifseqformula "6"))
                                                               (rule "concrete_eq_3" (formula "38") (term "0,0,1"))
                                                               (rule "replace_known_left" (formula "38") (term "5,0") (ifseqformula "4"))
                                                               (builtin "Update Simplification" (formula "38"))
                                                               (rule "concrete_and_1" (formula "38"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,1,1,1,0"))
                                                               (rule "add_literals" (formula "38") (term "0,1,0,1,1,1,1,0"))
                                                               (rule "add_zero_left" (formula "38") (term "1,0,1,1,1,1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "38") (term "0,0,0"))
                                                               (rule "applyEq" (formula "38") (term "0,0,1,1,0") (ifseqformula "24"))
                                                               (rule "replace_known_left" (formula "38") (term "0,1,1,0") (ifseqformula "3"))
                                                               (rule "concrete_and_1" (formula "38") (term "1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                                               (rule "inEqSimp_invertInEq0" (formula "38") (term "0,0"))
                                                               (rule "times_zero_2" (formula "38") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "38") (term "0,1,1,0") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "concrete_or_1" (formula "38") (term "0,1,1,0"))
                                                               (rule "concrete_and_1" (formula "38") (term "1,1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                               (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "38") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                               (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "38") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "38") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                               (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                               (rule "concrete_and_1" (formula "38") (term "0"))
                                                               (rule "inReachableStateRewrite" (formula "38") (term "1") (ifseqformula "11"))
                                                               (builtin "Update Simplification" (formula "38"))
                                                               (rule "eq_imp" (formula "38") (term "0,0,1,1"))
                                                               (rule "elim_forall12" (formula "38") (term "0,1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "1,0,1,1,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "38") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "38") (term "0,0,1,1,0,1,0,1,1,1"))
                                                               (rule "concrete_and_3" (formula "38") (term "0,1,1,1,0,1,1,1"))
                                                               (rule "elim_forall8" (formula "38") (term "1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "0,1,1,1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "0,0,1,1,0,1,1,1"))
                                                               (rule "eqClose" (formula "38") (term "0,0,0,0,1,0,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "38") (term "1,1,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "38") (term "0,1,1,0,1,1,1"))
                                                               (rule "ifthenelse_true" (formula "38") (term "0,0,0,1,0,1,1,1"))
                                                               (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "25"))
                                                               (rule "concrete_impl_1" (formula "38") (term "0,1,1,1"))
                                                               (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "29"))
                                                               (rule "concrete_or_1" (formula "38") (term "0,1,1,1"))
                                                               (rule "concrete_and_1" (formula "38") (term "1,1,1"))
                                                               (rule "array_store_static_analyse" (formula "38") (term "1,1,1") (ifseqformula "31"))
                                                               (rule "concrete_and_3" (formula "38") (term "1,1"))
                                                               (rule "all_unused" (formula "38") (term "1,1"))
                                                               (rule "concrete_or_3" (formula "38") (term "1"))
                                                               (rule "concrete_and_3" (formula "38"))
                                                               (rule "allRight" (formula "38") (inst "sk=i_110"))
                                                               (rule "orRight" (formula "38"))
                                                               (rule "orRight" (formula "38"))
                                                               (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "38"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "39"))
                                                               (rule "inEqSimp_geqRight" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "38") (term "0") (ifseqformula "28") (ifseqformula "14") (ifseqformula "38"))
                                                               (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "12") (term "0,1,1,0") (ifseqformula "29") (ifseqformula "15") (ifseqformula "41"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                               (branch " self.min = i_110 TRUE"
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "36"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                  (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "41"))
                                                                  (rule "applyEq" (formula "9") (term "3") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                  (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "41"))
                                                                  (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0"))
                                                                  (rule "concrete_and_2" (formula "41"))
                                                                  (rule "false_right" (formula "41"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "allLeft" (formula "15") (inst "t=minIdx_0"))
                                                                  (rule "replace_known_right" (formula "15") (term "0,0,0,1") (ifseqformula "37"))
                                                                  (rule "ifthenelse_false" (formula "15") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,1"))
                                                                  (rule "leq_literals" (formula "15") (term "1"))
                                                                  (rule "concrete_or_3" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "allLeft" (formula "15") (inst "t=i_110"))
                                                                  (rule "eqClose" (formula "15") (term "0,0,0,1"))
                                                                  (rule "ifthenelse_true" (formula "15") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "15") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "15") (term "1"))
                                                                  (rule "concrete_or_4" (formula "15"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "15") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "15") (term "1"))
                                                                  (rule "concrete_or_4" (formula "15"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "15"))
                                                                  (rule "qeq_literals" (formula "6") (term "0"))
                                                                  (rule "concrete_and_2" (formula "6"))
                                                                  (rule "closeFalse" (formula "6"))
                                                               )
                                                               (branch " self.min = i_110 FALSE"
                                                                  (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "allLeft" (formula "14") (inst "t=self.min@(maze.Highscore)"))
                                                                  (rule "eqClose" (formula "14") (term "0,0,0,1"))
                                                                  (rule "ifthenelse_true" (formula "14") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "17"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                                  (rule "concrete_and_2" (formula "14") (term "0,0"))
                                                                  (rule "concrete_or_2" (formula "14") (term "0"))
                                                                  (rule "cut_direct" (formula "14") (term "0"))
                                                                  (branch " CUT: self.min >= idx_0 TRUE"
                                                                     (rule "concrete_or_1" (formula "15"))
                                                                     (rule "true_left" (formula "15"))
                                                                     (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "44"))
                                                                     (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "14"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "44") (term "0,0"))
                                                                     (rule "leq_literals" (formula "44") (term "0"))
                                                                     (rule "concrete_and_2" (formula "44"))
                                                                     (rule "false_right" (formula "44"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                     (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                     (rule "mul_literals" (formula "14") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "14"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "8") (term "0"))
                                                                     (rule "concrete_or_1" (formula "8"))
                                                                     (rule "true_left" (formula "8"))
                                                                     (rule "allLeft" (formula "15") (inst "t=i_110"))
                                                                     (rule "eqSymm" (formula "15") (term "0,0,0,1"))
                                                                     (rule "replace_known_right" (formula "15") (term "0,0,0,1") (ifseqformula "38"))
                                                                     (rule "ifthenelse_false" (formula "15") (term "0,0,1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "15") (term "0,1"))
                                                                     (rule "concrete_and_2" (formula "15") (term "1"))
                                                                     (rule "concrete_or_4" (formula "15"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "15") (term "0,0"))
                                                                     (rule "concrete_and_2" (formula "15") (term "0"))
                                                                     (rule "concrete_or_2" (formula "15"))
                                                                     (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "15"))
                                                                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "45") (term "1,0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "7") (term "1,0,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "0"))
                                                                     (rule "leq_literals" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                     (rule "add_literals" (formula "15") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "0"))
                                                                     (rule "qeq_literals" (formula "15"))
                                                                     (rule "true_left" (formula "15"))
                                                                     (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                     (rule "add_literals" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch " CUT: self.min >= idx_0 FALSE"
                                                                     (rule "concrete_or_2" (formula "14"))
                                                                     (rule "inEqSimp_geqRight" (formula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                     (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "45") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "45") (term "0"))
                                                                     (rule "concrete_and_2" (formula "45"))
                                                                     (rule "false_right" (formula "45"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                                     (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "19") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "1"))
                                                                     (rule "allLeft" (formula "17") (inst "t=i_110"))
                                                                     (rule "eqSymm" (formula "17") (term "0,0,0,1"))
                                                                     (rule "replace_known_right" (formula "17") (term "0,0,0,1") (ifseqformula "40"))
                                                                     (rule "ifthenelse_false" (formula "17") (term "0,0,1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "7"))
                                                                     (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                                     (rule "concrete_and_2" (formula "17") (term "0,0"))
                                                                     (rule "concrete_or_2" (formula "17") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "17") (term "0,1"))
                                                                     (rule "concrete_and_2" (formula "17") (term "1"))
                                                                     (rule "concrete_or_4" (formula "17"))
                                                                     (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "18"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                                     (rule "add_literals" (formula "18") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "0"))
                                                                     (rule "qeq_literals" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                                     (rule "add_literals" (formula "7") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "7") (term "0"))
                                                                     (rule "leq_literals" (formula "7"))
                                                                     (rule "true_left" (formula "7"))
                                                                     (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "6"))
                                                                     (rule "applyEqRigid" (formula "8") (term "1,0,1") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "6"))
                                                                     (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "6"))
                                                                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "6"))
                                                                     (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                     (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                     (rule "add_literals" (formula "3") (term "0"))
                                                                     (rule "leq_literals" (formula "3"))
                                                                     (rule "closeFalse" (formula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch " Null Reference (v_Record_6 = null)"
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "blockThrow" (formula "37") (term "8"))
                                                         (builtin "Update Simplification" (formula "37"))
                                                         (rule "applyEq" (formula "8") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "allLeft" (formula "19") (inst "t=self"))
                                                         (rule "replace_known_left" (formula "19") (term "0,1,0,0,0") (ifseqformula "29"))
                                                         (rule "concrete_not_1" (formula "19") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "19") (term "1,0,0,0") (ifseqformula "34"))
                                                         (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                                         (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "25"))
                                                         (rule "allLeft" (formula "8") (inst "t=minIdx_0"))
                                                         (rule "eqSymm" (formula "8") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "8") (term "0,0,0,1") (ifseqformula "32"))
                                                         (rule "ifthenelse_false" (formula "8") (term "0,0,1"))
                                                         (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1"))
                                                         (rule "add_literals" (formula "8") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "8") (term "0,1"))
                                                         (rule "leq_literals" (formula "8") (term "1"))
                                                         (rule "concrete_or_3" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "allLeft" (formula "19") (inst "t=minIdx_0"))
                                                         (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "19") (term "1"))
                                                         (rule "concrete_or_4" (formula "19"))
                                                         (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "19") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "19") (term "1"))
                                                         (rule "concrete_or_4" (formula "19"))
                                                         (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "19"))
                                                         (rule "qeq_literals" (formula "6") (term "0"))
                                                         (rule "concrete_and_2" (formula "6"))
                                                         (rule "closeFalse" (formula "6"))
                                                      )
                                                   )
                                                   (branch " Null Reference (highscores = null)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "close" (formula "30") (ifseqformula "1"))
                                                   )
                                                   (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                                      (builtin "Update Simplification" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "blockThrow" (formula "36") (term "8"))
                                                      (builtin "Update Simplification" (formula "36"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "1") (term "1"))
                                                      (rule "concrete_or_4" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                      (rule "concrete_or_1" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "6"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                             (branch " Null Reference (v_Record_4 = null)"
                                                (builtin "Update Simplification" (formula "34"))
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "blockThrow" (formula "34") (term "7"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " self.min = idx_0 TRUE"
                                                   (rule "close" (formula "32") (ifseqformula "2"))
                                                )
                                                (branch " self.min = idx_0 FALSE"
                                                   (rule "allLeft" (formula "18") (inst "t=self"))
                                                   (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "28"))
                                                   (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "18") (term "1,0,0,0") (ifseqformula "34"))
                                                   (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "24"))
                                                   (rule "allLeft" (formula "18") (inst "t=idx_0"))
                                                   (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "18") (term "1"))
                                                   (rule "concrete_or_4" (formula "18"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "18") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "18") (term "0"))
                                                   (rule "concrete_or_2" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0"))
                                                   (rule "add_literals" (formula "18") (term "0"))
                                                   (rule "leq_literals" (formula "18"))
                                                   (rule "closeFalse" (formula "18"))
                                                )
                                             )
                                          )
                                          (branch " Null Reference (highscores = null)"
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "close" (formula "30") (ifseqformula "1"))
                                          )
                                          (branch " Index Out of Bounds (highscores != null, but idx Out of Bounds!)"
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "blockThrow" (formula "34") (term "7"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (rule "concrete_and_2" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " if b_14 false"
                                          (rule "false_to_not_true" (formula "1") (term "8"))
                                          (builtin "Update Simplification" (formula "34"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "boolean_equal" (formula "1") (term "0"))
                                          (rule "concrete_not_1" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch " self.capacity >= 1 + idx_0 FALSE"
                                       (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "29"))
                                       (rule "ifthenelse_false_for" (formula "35"))
                                       (rule "inEqSimp_geqRight" (formula "29"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,0"))
                                       (rule "times_zero_1" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "12") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "22") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                                       (rule "times_zero_1" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "emptyModality" (formula "1") (term "4"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_not_equal_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "inEqSimp_geqRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "30"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "2"))
                                    (rule "applyEq" (formula "37") (term "2") (ifseqformula "5"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "4"))
                                    (rule "add_zero_right" (formula "2") (term "1,0"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "12"))
                                    (rule "ifthenelse_true_for" (formula "2"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "8") (term "1,1,0,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "4"))
                                    (rule "add_zero_right" (formula "7") (term "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "34") (term "0,0,1,1,0,7") (ifseqformula "4"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "3") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "34") (term "1,0,1,1,0,7") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEqRigid" (formula "5") (term "1,0,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                    (rule "concrete_and_2" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "5") (term "0,0"))
                                    (rule "add_zero_right" (formula "5") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                    (rule "concrete_or_3" (formula "5") (term "0,0"))
                                    (rule "concrete_or_1" (formula "5") (term "0"))
                                    (rule "all_unused" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "emptyModality" (formula "1") (term "4"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "boolean_equal" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "ifUnfold" (formula "29") (term "7") (inst "#boolv=b"))
                                    (rule "variableDeclaration" (formula "29") (term "7") (newnames "b_20"))
                                    (rule "less_than_comparison_new" (formula "29") (term "7"))
                                    (builtin "Update Simplification" (formula "29"))
                                    (rule "assignment_instance_field_of_this" (formula "29") (term "7,1"))
                                    (builtin "Update Simplification" (formula "29"))
                                    (rule "assignment_instance_field_of_this" (formula "29") (term "7,2"))
                                    (builtin "Update Simplification" (formula "29"))
                                    (rule "castDelInt" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "19"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                                    (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "7"))
                                    (rule "ifthenelse_true_for" (formula "29"))
                                    (rule "ifSplit" (formula "29"))
                                    (branch " if b_20 true"
                                       (builtin "Update Simplification" (formula "30"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_equal" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifUnfold" (formula "29") (term "7") (inst "#boolv=b"))
                                       (rule "variableDeclaration" (formula "29") (term "7") (newnames "b_21"))
                                       (rule "evaluate_lazy_or" (formula "29") (term "7"))
                                       (rule "ifElseUnfold" (formula "29") (term "7") (inst "#boolv=b_22"))
                                       (rule "variableDeclaration" (formula "29") (term "7") (newnames "b_22"))
                                       (rule "equality_comparison_new" (formula "29") (term "7"))
                                       (builtin "Update Simplification" (formula "29"))
                                       (rule "assignment_instance_field_of_this" (formula "29") (term "7,1"))
                                       (builtin "Update Simplification" (formula "29"))
                                       (rule "assignment_instance_field_of_this" (formula "29") (term "7,2"))
                                       (builtin "Update Simplification" (formula "29"))
                                       (rule "castDelInt" (formula "29") (term "0,0,0"))
                                       (rule "eqClose" (formula "29") (term "0,0"))
                                       (rule "concrete_not_1" (formula "29") (term "0"))
                                       (rule "ifthenelse_false_for" (formula "29"))
                                       (rule "ifElse" (formula "29") (term "8"))
                                       (builtin "Update Simplification" (formula "29"))
                                       (rule "boolean_equal" (formula "29") (term "0"))
                                       (rule "ifthenelse_true_for" (formula "29"))
                                       (rule "assignment_instance_field_of_this" (formula "29") (term "7"))
                                       (builtin "Update Simplification" (formula "29"))
                                       (rule "blockEmpty" (formula "29") (term "8"))
                                       (rule "ifSplit" (formula "29"))
                                       (branch " if b_21 true"
                                          (builtin "Update Simplification" (formula "30"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "boolean_equal" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment_instance_field_of_this" (formula "29") (term "7"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "blockEmpty" (formula "29") (term "7"))
                                          (rule "castDelInt" (formula "29") (term "3"))
                                          (rule "postincrement" (formula "29") (term "7"))
                                          (rule "compound_int_cast_expression" (formula "29") (term "7") (inst "#v=j"))
                                          (rule "variableDeclarationAssign" (formula "29") (term "7"))
                                          (rule "variableDeclaration" (formula "29") (term "7") (newnames "j_21"))
                                          (rule "remove_parentheses_right" (formula "29") (term "7"))
                                          (rule "assignmentAdditionInt" (formula "29") (term "7"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "castDelInt" (formula "29") (term "0,3"))
                                          (rule "translateJavaAddInt" (formula "29") (term "3"))
                                          (rule "add_zero_left" (formula "29") (term "3"))
                                          (rule "widening_identity_cast_5" (formula "29") (term "8"))
                                          (rule "assignment_instance_field_of_this" (formula "29") (term "8"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "tryEmpty" (formula "29") (term "7"))
                                          (rule "methodCallEmpty" (formula "29") (term "7"))
                                          (rule "castDelInt" (formula "29") (term "2"))
                                          (rule "emptyModality" (formula "29") (term "7"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "boolean_not_equal_2" (formula "29") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "29") (term "0,0,1"))
                                          (rule "concrete_impl_2" (formula "29") (term "0"))
                                          (rule "concrete_not_2" (formula "29") (term "0,1"))
                                          (rule "concrete_and_1" (formula "29"))
                                          (rule "concrete_impl_1" (formula "29"))
                                          (rule "castDelInt" (formula "29") (term "1,1,0,1,1,1,1,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,0,1,1,1,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,0,1,1,1,1,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1,1,1,1,0,1"))
                                          (rule "concrete_and_1" (formula "29") (term "1,1,1,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,0,1,0,1"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,0,1"))
                                          (rule "concrete_and_1" (formula "29") (term "1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "29") (term "1,0,0,1"))
                                          (rule "concrete_eq_3" (formula "29") (term "0,0,1"))
                                          (rule "castDelInt" (formula "29") (term "1,1,0,0,1,1,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,0,0,1,1,0,1,1,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,0,1,1,0,1"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,1,0,1"))
                                          (rule "concrete_and_1" (formula "29") (term "1,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "1,0,1,0,1"))
                                          (rule "castDelInt" (formula "29") (term "0,0,0,1"))
                                          (rule "qeq_literals" (formula "29") (term "0,0,1"))
                                          (rule "concrete_and_1" (formula "29") (term "0,1"))
                                          (rule "eqSymm" (formula "29") (term "0,0,1,1,0,1,0,1"))
                                          (rule "replace_known_left" (formula "29") (term "5,0") (ifseqformula "1"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "concrete_and_1" (formula "29"))
                                          (rule "castDelInt" (formula "29") (term "1,2,0,1,1,0,1,0"))
                                          (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "19"))
                                          (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "7"))
                                          (rule "concrete_and_1" (formula "29") (term "0"))
                                          (rule "inEqSimp_or_antiSymm0" (formula "29") (term "0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                          (rule "eqClose" (formula "29") (term "0,0,0,0"))
                                          (rule "ifthenelse_true_for" (formula "29") (term "0,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,0,0"))
                                          (rule "inReachableStateRewrite" (formula "29") (term "1") (ifseqformula "6"))
                                          (builtin "Update Simplification" (formula "29"))
                                          (rule "eq_imp" (formula "29") (term "0,0,1,1"))
                                          (rule "elim_forall12" (formula "29") (term "0,1,1,1"))
                                          (rule "eqClose" (formula "29") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                          (rule "eqClose" (formula "29") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                          (rule "eqClose" (formula "29") (term "1,0,1,1,1,0,1,1,1"))
                                          (rule "concrete_and_3" (formula "29") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                          (rule "concrete_and_3" (formula "29") (term "0,0,1,1,0,1,0,1,1,1"))
                                          (rule "concrete_and_3" (formula "29") (term "0,1,1,1,0,1,1,1"))
                                          (rule "elim_forall8" (formula "29") (term "1,1,1"))
                                          (rule "eqClose" (formula "29") (term "0,0,0,0,1,0,1,1,1"))
                                          (rule "eqClose" (formula "29") (term "0,0,1,1,0,1,1,1"))
                                          (rule "eqClose" (formula "29") (term "0,1,1,1,1,1"))
                                          (rule "ifthenelse_true" (formula "29") (term "0,0,0,1,0,1,1,1"))
                                          (rule "ifthenelse_true" (formula "29") (term "0,1,1,0,1,1,1"))
                                          (rule "ifthenelse_true" (formula "29") (term "1,1,1,1,1"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,1,1,1") (ifseqformula "20"))
                                          (rule "concrete_impl_1" (formula "29") (term "0,1,1,1"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,1,1,1") (ifseqformula "24"))
                                          (rule "concrete_or_1" (formula "29") (term "0,1,1,1"))
                                          (rule "concrete_and_1" (formula "29") (term "1,1,1"))
                                          (rule "array_store_static_analyse" (formula "29") (term "1,1,1") (ifseqformula "25"))
                                          (rule "concrete_and_3" (formula "29") (term "1,1"))
                                          (rule "all_unused" (formula "29") (term "1,1"))
                                          (rule "concrete_or_3" (formula "29") (term "1"))
                                          (rule "concrete_and_3" (formula "29"))
                                          (rule "allRight" (formula "29") (inst "sk=i_102"))
                                          (rule "orRight" (formula "29"))
                                          (rule "notRight" (formula "29"))
                                          (rule "eqSymm" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_geqRight" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0,0,1,0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "1") (term "1,2,0,1,0") (ifseqformula "2"))
                                          (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch " if b_21 false"
                                          (rule "false_to_not_true" (formula "1") (term "8"))
                                          (builtin "Update Simplification" (formula "30"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "boolean_equal" (formula "1") (term "0"))
                                          (rule "concrete_not_1" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch " if b_20 false"
                                       (rule "false_to_not_true" (formula "1") (term "8"))
                                       (builtin "Update Simplification" (formula "30"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "boolean_equal" (formula "1") (term "0"))
                                       (rule "concrete_not_1" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch " Use Case"
                              (rule "false_to_not_true" (formula "26") (term "0,0,1,2,8"))
                              (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,0,2,8"))
                              (builtin "Update Simplification" (formula "26"))
                              (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,0"))
                              (rule "impRight" (formula "26"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "4"))
                              (rule "andLeft" (formula "5"))
                              (rule "variableDeclarationAssign" (formula "33") (term "8"))
                              (rule "variableDeclaration" (formula "33") (term "8") (newnames "b_11"))
                              (rule "methodCallReturn" (formula "33") (term "1,0,8"))
                              (rule "assignment" (formula "33") (term "1,0,8"))
                              (rule "methodCallEmpty" (formula "33") (term "1,1,0,8"))
                              (rule "blockEmpty" (formula "33") (term "1,1,0,8"))
                              (rule "assignment_instance_field_of_this" (formula "33") (term "1,1,0,8"))
                              (builtin "Update Simplification" (formula "33"))
                              (rule "blockReturn" (formula "33") (term "2,1,0,8"))
                              (rule "methodCallReturn" (formula "33") (term "2,1,0,8"))
                              (builtin "Update Simplification" (formula "33"))
                              (rule "assignment" (formula "33") (term "2,1,0,7"))
                              (builtin "Update Simplification" (formula "33"))
                              (builtin "Update Simplification" (formula "33"))
                              (rule "methodCallEmpty" (formula "33") (term "2,1,0,6"))
                              (rule "tryEmpty" (formula "33") (term "2,1,0,6"))
                              (builtin "Update Simplification" (formula "33"))
                              (rule "castDelInt" (formula "1") (term "1,1"))
                              (rule "castDelInt" (formula "1") (term "1,0"))
                              (rule "castDelInt" (formula "2") (term "1"))
                              (rule "castDelInt" (formula "4") (term "1"))
                              (rule "castDelInt" (formula "6") (term "1,0,0,0"))
                              (rule "castDelInt" (formula "4") (term "0,1"))
                              (rule "neg_literal" (formula "4") (term "1"))
                              (rule "eqSymm" (formula "6") (term "0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "1") (term "0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                              (rule "mul_literals" (formula "1") (term "1,0"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "nnf_imp2or" (formula "6") (term "0"))
                              (rule "nnf_notAnd" (formula "6") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                              (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                              (rule "inReachableStateExpand" (formula "7"))
                              (builtin "Update Simplification" (formula "7"))
                              (rule "eq_imp" (formula "7") (term "0,0,1"))
                              (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "10"))
                              (rule "concrete_impl_1" (formula "7"))
                              (rule "andLeft" (formula "7"))
                              (rule "elim_forall12" (formula "8") (term "0"))
                              (rule "eqClose" (formula "8") (term "1,0,0,0,0,1,0,1,0"))
                              (rule "eqClose" (formula "8") (term "1,0,0,1,1,0,1,0"))
                              (rule "eqClose" (formula "8") (term "1,0,1,1,1,0"))
                              (rule "concrete_and_3" (formula "8") (term "0,0,0,0,1,0,1,0"))
                              (rule "concrete_and_3" (formula "8") (term "0,0,1,1,0,1,0"))
                              (rule "concrete_and_3" (formula "8") (term "0,1,1,1,0"))
                              (rule "elim_forall8" (formula "8"))
                              (rule "eqClose" (formula "8") (term "0,0,0,0,1,0"))
                              (rule "eqClose" (formula "8") (term "0,0,1,1,0"))
                              (rule "eqClose" (formula "8") (term "0,1,1"))
                              (rule "ifthenelse_true" (formula "8") (term "0,0,0,1,0"))
                              (rule "ifthenelse_true" (formula "8") (term "0,1,1,0"))
                              (rule "ifthenelse_true" (formula "8") (term "1,1"))
                              (rule "andLeft" (formula "8"))
                              (rule "replace_known_right" (formula "8") (term "1,1") (ifseqformula "32"))
                              (rule "concrete_or_4" (formula "8") (term "1"))
                              (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "30"))
                              (rule "concrete_impl_4" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "array_store_static_analyse" (formula "8") (ifseqformula "30"))
                              (rule "true_left" (formula "8"))
                              (rule "all_unused" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "less_than_comparison_new" (formula "32") (term "5"))
                              (builtin "Update Simplification" (formula "32"))
                              (rule "assignment_instance_field_of_this" (formula "32") (term "4,2"))
                              (builtin "Update Simplification" (formula "32"))
                              (rule "assignment_instance_field_of_this" (formula "32") (term "4,1"))
                              (builtin "Update Simplification" (formula "32"))
                              (rule "methodCallEmpty" (formula "32") (term "5,2"))
                              (rule "methodCallEmpty" (formula "32") (term "5,1"))
                              (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "22"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                              (rule "ifthenelse_split" (formula "6") (term "0,1,1,0"))
                              (branch " self.min = minIdx_1 TRUE"
                                 (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "6"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "9"))
                                 (rule "concrete_eq_3" (formula "1"))
                                 (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "7") (term "1,0,0,0,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "33") (term "3,2") (ifseqformula "6"))
                                 (rule "applyEq" (formula "33") (term "3,1") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_1" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "ifthenelse_split_for" (formula "31"))
                                 (branch " self.capacity >= 1 + idx_1 TRUE"
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "emptyModality" (formula "31") (term "5"))
                                    (builtin "Update Simplification" (formula "31"))
                                    (rule "boolean_equal" (formula "31") (term "0,0"))
                                    (rule "concrete_not_1" (formula "31") (term "0"))
                                    (rule "concrete_impl_2" (formula "31"))
                                    (rule "closeTrue" (formula "31"))
                                 )
                                 (branch " self.capacity >= 1 + idx_1 FALSE"
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "10") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "emptyModality" (formula "29") (term "5"))
                                    (builtin "Update Simplification" (formula "29"))
                                    (rule "boolean_not_equal_2" (formula "29") (term "0,0"))
                                    (rule "concrete_not_2" (formula "29") (term "0"))
                                    (rule "concrete_impl_1" (formula "29"))
                                    (rule "emptyModality" (formula "29") (term "5"))
                                    (builtin "Update Simplification" (formula "29"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,1,0,1"))
                                    (rule "andRight" (formula "29"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "29"))
                                       (branch " Case 1"
                                          (rule "andRight" (formula "29"))
                                          (branch " Case 1"
                                             (rule "andRight" (formula "29"))
                                             (branch " Case 1"
                                                (rule "andRight" (formula "29"))
                                                (branch " Case 1"
                                                   (rule "andRight" (formula "29"))
                                                   (branch " Case 1"
                                                      (rule "allRight" (formula "29") (inst "sk=m_0_66"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "notRight" (formula "29"))
                                                      (rule "allLeft" (formula "6") (inst "t=minIdx_1"))
                                                      (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                                      (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                                                      (rule "add_literals" (formula "6") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "6") (term "0,1"))
                                                      (rule "leq_literals" (formula "6") (term "1"))
                                                      (rule "concrete_or_3" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "allLeft" (formula "13") (inst "t=m_0_66"))
                                                      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "31"))
                                                      (rule "concrete_or_2" (formula "13") (term "0"))
                                                      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "13") (term "0"))
                                                      (rule "concrete_or_2" (formula "13"))
                                                      (rule "allLeft" (formula "9") (inst "t=m_0_66"))
                                                      (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "32"))
                                                      (rule "concrete_or_2" (formula "9") (term "0"))
                                                      (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "9") (term "0"))
                                                      (rule "concrete_or_2" (formula "9"))
                                                      (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "9"))
                                                      (rule "concrete_and_1" (formula "33"))
                                                      (rule "allLeft" (formula "19") (inst "t=m_0_66"))
                                                      (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "33"))
                                                      (rule "concrete_or_2" (formula "19") (term "0"))
                                                      (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "19") (term "0"))
                                                      (rule "concrete_or_2" (formula "19"))
                                                      (rule "notLeft" (formula "19"))
                                                      (rule "allLeft" (formula "16") (inst "t=m_0_66"))
                                                      (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "34"))
                                                      (rule "concrete_or_2" (formula "16") (term "0"))
                                                      (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "16") (term "0"))
                                                      (rule "concrete_or_2" (formula "16"))
                                                      (rule "inEqSimp_strengthen0" (formula "16") (ifseqformula "35"))
                                                      (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "16"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0"))
                                                      (rule "qeq_literals" (formula "35") (term "0"))
                                                      (rule "concrete_and_2" (formula "35"))
                                                      (rule "false_right" (formula "35"))
                                                      (rule "allLeft" (formula "12") (inst "t=m_0_66"))
                                                      (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "12") (term "0"))
                                                      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "35"))
                                                      (rule "concrete_or_2" (formula "12"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0"))
                                                      (rule "add_literals" (formula "17") (term "0"))
                                                      (rule "qeq_literals" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch " Case 2"
                                                      (rule "allRight" (formula "29") (inst "sk=m_0_67"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "notRight" (formula "29"))
                                                      (rule "allLeft" (formula "6") (inst "t=minIdx_1"))
                                                      (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                                      (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                                                      (rule "add_literals" (formula "6") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "6") (term "0,1"))
                                                      (rule "leq_literals" (formula "6") (term "1"))
                                                      (rule "concrete_or_3" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "allLeft" (formula "13") (inst "t=m_0_67"))
                                                      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "31"))
                                                      (rule "concrete_or_2" (formula "13") (term "0"))
                                                      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "13") (term "0"))
                                                      (rule "concrete_or_2" (formula "13"))
                                                      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "13"))
                                                      (rule "concrete_and_1" (formula "32"))
                                                      (rule "inEqSimp_geqRight" (formula "32"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "13") (inst "t=m_0_67"))
                                                      (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "13") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "13") (term "0"))
                                                      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "33"))
                                                      (rule "concrete_or_2" (formula "13"))
                                                      (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                      (rule "concrete_and_2" (formula "13"))
                                                      (rule "closeFalse" (formula "13"))
                                                   )
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "29") (inst "sk=m_0_68"))
                                                   (rule "orRight" (formula "29"))
                                                   (rule "orRight" (formula "29"))
                                                   (rule "notRight" (formula "29"))
                                                   (rule "inEqSimp_leqRight" (formula "31"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "15") (inst "t=m_0_68"))
                                                   (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "32"))
                                                   (rule "concrete_or_2" (formula "15") (term "0"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "15") (term "0"))
                                                   (rule "concrete_or_2" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0"))
                                                   (rule "leq_literals" (formula "15"))
                                                   (rule "closeFalse" (formula "15"))
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "allRight" (formula "29") (inst "sk=m_0_69"))
                                                (rule "orRight" (formula "29"))
                                                (rule "orRight" (formula "29"))
                                                (rule "notRight" (formula "29"))
                                                (rule "allRight" (formula "31") (inst "sk=i_84"))
                                                (rule "orRight" (formula "31"))
                                                (rule "orRight" (formula "31"))
                                                (rule "notRight" (formula "33"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "32"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "commute_and" (formula "3") (term "0,0"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_69"))
                                                (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                (rule "concrete_or_4" (formula "16") (term "0"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_69"))
                                                (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                (rule "concrete_or_4" (formula "16") (term "0"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "times_zero_1" (formula "16") (term "0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0"))
                                                (rule "allLeft" (formula "24") (inst "t=m_0_69"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "24") (term "1,0"))
                                                (rule "concrete_or_4" (formula "24") (term "0"))
                                                (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "allLeft" (formula "22") (inst "t=m_0_69"))
                                                (rule "replace_known_right" (formula "22") (term "1,0,0,0,0") (ifseqformula "39"))
                                                (rule "concrete_or_4" (formula "22") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "22") (term "0,1,0,0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "22") (term "1,0,0,0"))
                                                (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                                (rule "allLeft" (formula "10") (inst "t=minIdx_1"))
                                                (rule "eqClose" (formula "10") (term "0,0,0,1"))
                                                (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1"))
                                                (rule "add_literals" (formula "10") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "0,1"))
                                                (rule "leq_literals" (formula "10") (term "1"))
                                                (rule "concrete_or_3" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "allLeft" (formula "15") (inst "t=m_0_69"))
                                                (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "15") (term "1,0"))
                                                (rule "concrete_or_4" (formula "15") (term "0"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "40"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "allLeft" (formula "22") (inst "t=m_0_69"))
                                                (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "22") (term "1,0"))
                                                (rule "concrete_or_4" (formula "22") (term "0"))
                                                (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "41"))
                                                (rule "concrete_or_2" (formula "22"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,0"))
                                                (rule "times_zero_1" (formula "22") (term "0"))
                                                (rule "qeq_literals" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch " minIdx_1 = i_84 & self.highscores = m_0_69.highscores TRUE"
                                                   (rule "close" (formula "38") (ifseqformula "5"))
                                                )
                                                (branch " minIdx_1 = i_84 & self.highscores = m_0_69.highscores FALSE"
                                                   (rule "allLeft" (formula "23") (inst "t=i_84"))
                                                   (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "4"))
                                                   (rule "concrete_not_1" (formula "23") (term "1"))
                                                   (rule "concrete_or_4" (formula "23"))
                                                   (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "23") (term "0"))
                                                   (rule "concrete_or_2" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "allRight" (formula "29") (inst "sk=h_11"))
                                             (rule "orRight" (formula "29"))
                                             (rule "orRight" (formula "30"))
                                             (rule "allRight" (formula "30") (inst "sk=other_11"))
                                             (rule "orRight" (formula "30"))
                                             (rule "orRight" (formula "30"))
                                             (rule "notRight" (formula "30"))
                                             (rule "allLeft" (formula "16") (inst "t=h_11"))
                                             (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "16") (term "0,0,0"))
                                             (rule "allLeft" (formula "16") (inst "t=other_11"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "16") (term "0"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "close" (formula "27") (ifseqformula "1"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "29") (inst "sk=m_0_70"))
                                          (rule "orRight" (formula "29"))
                                          (rule "orRight" (formula "29"))
                                          (rule "notRight" (formula "31"))
                                          (rule "notRight" (formula "30"))
                                          (rule "allLeft" (formula "18") (inst "t=m_0_70"))
                                          (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "18") (term "1,0"))
                                          (rule "concrete_or_4" (formula "18") (term "0"))
                                          (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "32"))
                                          (rule "concrete_or_2" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "close" (formula "27") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "29") (inst "sk=m_0_71"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,1,1,0,1,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,0"))
                                       (rule "eqSymm" (formula "31") (term "0,0,1,0"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,0,1,0,1,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,0,0,1,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,0,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,0,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,1,0,0,0,1,0,1,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,0,0,1,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,1,1,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,1,1,1"))
                                       (rule "eqSymm" (formula "31") (term "0,1,2,0,1,1,0,1,1,1"))
                                       (rule "ifthenelse_split" (formula "31") (term "0,0,0"))
                                       (branch " self = m_0_71 TRUE"
                                          (rule "replace_known_left" (formula "32") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "0,1,0,0,1,1,0,1,1,1"))
                                          (rule "eqClose" (formula "32") (term "1,0,0,1,1,0,1,1,1"))
                                          (rule "concrete_and_3" (formula "32") (term "0,0,1,1,0,1,1,1"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,0,0,1") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "0,0,0,1"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,0,0,1,1") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "32") (term "0,1,0,0,0,1,1,1") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "1,0,0,0,1,1,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "32") (term "0,1,2,0,1,1,0,1,1,1") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "32") (term "1,2,0,1,1,0,1,1,1"))
                                          (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "0,0,0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                          (rule "eqClose" (formula "32") (term "0,0,0,0,1,0,1,1,1"))
                                          (rule "concrete_and_1" (formula "32") (term "0,0,0,1,0,1,1,1"))
                                          (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "30") (term "0,0,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                                          (rule "eqClose" (formula "30") (term "0,0,1,1,0,1,1,1"))
                                          (rule "ifthenelse_true" (formula "30") (term "0,1,1,0,1,1,1"))
                                          (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "30") (term "1,1,1,0,0,1,1,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "21"))
                                          (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "21"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                          (rule "applyEq" (formula "7") (term "0,0,2,0,0,1,0") (ifseqformula "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "5"))
                                          (rule "concrete_and_3" (formula "30") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,1") (ifseqformula "3"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,1,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,1"))
                                          (rule "concrete_and_2" (formula "30") (term "1,0,1"))
                                          (rule "concrete_eq_4" (formula "30") (term "0,1"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,1,1") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "30") (term "0,0,0,1,1"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0,1,1"))
                                          (rule "concrete_not_2" (formula "30") (term "0,1,1"))
                                          (rule "concrete_eq_1" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0,0,1") (ifseqformula "8"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0,1"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,0,0,1"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0,1"))
                                          (rule "concrete_not_2" (formula "30") (term "0,1"))
                                          (rule "concrete_and_1" (formula "30") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "30") (term "0") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "30") (term "0,0"))
                                          (rule "concrete_or_1" (formula "30") (term "0"))
                                          (rule "concrete_and_1" (formula "30"))
                                          (rule "allRight" (formula "30") (inst "sk=i_92"))
                                          (rule "orRight" (formula "30"))
                                          (rule "orRight" (formula "30"))
                                          (rule "orRight" (formula "31"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "30"))
                                          (rule "ifthenelse_false" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_geqRight" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_71"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "17") (term "0"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "applyEq" (formula "17") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "qeq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_71"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "16") (term "0"))
                                          (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "16") (term "0"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "6"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                          (rule "concrete_or_1" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "allLeft" (formula "10") (inst "t=i_92"))
                                          (rule "eqSymm" (formula "10") (term "0,0,0,1"))
                                          (rule "replace_known_right" (formula "10") (term "0,0,0,1") (ifseqformula "34"))
                                          (rule "ifthenelse_false" (formula "10") (term "0,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "10") (term "0,0"))
                                          (rule "concrete_or_2" (formula "10") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                          (rule "leq_literals" (formula "10") (term "0,1"))
                                          (rule "concrete_and_2" (formula "10") (term "1"))
                                          (rule "concrete_or_4" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
                                          (rule "andLeft" (formula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0"))
                                          (rule "leq_literals" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                       (branch " self = m_0_71 FALSE"
                                          (rule "replace_known_right" (formula "32") (term "0,1,0,0,0,1,1,1") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "1,0,0,0,1,1,1"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,1,0") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "0,1,0"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "0,1,0,0,1,1,0,1,1,1"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0,0,1,1") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "0,0,0,1,1"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0,0,1") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "0,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,2,0,1,1,0,1,1,1") (ifseqformula "31"))
                                          (rule "ifthenelse_false" (formula "32") (term "1,2,0,1,1,0,1,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                          (rule "allLeft" (formula "6") (inst "t=minIdx_1"))
                                          (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                          (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                                          (rule "add_literals" (formula "6") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "0,1"))
                                          (rule "leq_literals" (formula "6") (term "1"))
                                          (rule "concrete_or_3" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "allLeft" (formula "13") (inst "t=m_0_71"))
                                          (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
                                          (rule "concrete_or_2" (formula "13"))
                                          (rule "allLeft" (formula "12") (inst "t=m_0_71"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "12") (term "1,0"))
                                          (rule "concrete_or_4" (formula "12") (term "0"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "32"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "12") (term "0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0"))
                                          (rule "cut_direct" (formula "35") (term "0,0"))
                                          (branch " CUT: m_0_71.min >= -1 TRUE"
                                             (rule "concrete_and_1" (formula "36") (term "0"))
                                             (rule "ifthenelse_split" (formula "36") (term "0,1,1,0,1,1,1"))
                                             (branch "   self.highscores = m_0_71.highscores
& m_0_71.min = minIdx_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "38") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "38") (term "0,0,0,1,0,1,1,1"))
                                                (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "0,0,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "38") (term "0,0,0,1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "38") (term "1,0,0,0,1,1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "9") (term "0,2,0,0,1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_contradEq7" (formula "38") (term "0,0,1") (ifseqformula "10"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,0,1"))
                                                (rule "mul_literals" (formula "38") (term "0,0,0,0,1"))
                                                (rule "leq_literals" (formula "38") (term "0,0,0,1"))
                                                (rule "concrete_and_2" (formula "38") (term "0,0,1"))
                                                (rule "concrete_eq_2" (formula "38") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "38") (term "0,0,1,1") (ifseqformula "10"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,0,0,1,1"))
                                                (rule "leq_literals" (formula "38") (term "0,0,0,1,1"))
                                                (rule "concrete_and_2" (formula "38") (term "0,0,1,1"))
                                                (rule "concrete_not_2" (formula "38") (term "0,1,1"))
                                                (rule "concrete_eq_1" (formula "38") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "allLeft" (formula "21") (inst "t=m_0_71"))
                                                (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                                (rule "allLeft" (formula "19") (inst "t=m_0_71"))
                                                (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "19") (term "1,0"))
                                                (rule "concrete_or_4" (formula "19") (term "0"))
                                                (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "37"))
                                                (rule "concrete_or_2" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "allLeft" (formula "13") (inst "t=m_0_71"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "13"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "1,0"))
                                                (rule "times_zero_1" (formula "20") (term "0"))
                                                (rule "leq_literals" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_1" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "15") (term "0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_1" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "11") (inst "t=m_0_71"))
                                                (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "11") (term "1,0"))
                                                (rule "concrete_or_4" (formula "11") (term "0"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "37"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
                                                (rule "cut_direct" (formula "38") (term "0"))
                                                (branch " CUT: m_0_71.size >= 1 + minIdx_1 TRUE"
                                                   (rule "concrete_and_1" (formula "39"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "22") (inst "t=self"))
                                                   (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "22") (term "1"))
                                                   (rule "concrete_or_4" (formula "22"))
                                                   (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "36"))
                                                   (rule "concrete_or_2" (formula "22"))
                                                   (rule "close" (formula "39") (ifseqformula "22"))
                                                )
                                                (branch " CUT: m_0_71.size >= 1 + minIdx_1 FALSE"
                                                   (rule "concrete_and_2" (formula "39"))
                                                   (rule "false_right" (formula "39"))
                                                   (rule "inEqSimp_geqRight" (formula "38"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "allLeft" (formula "22") (inst "t=self"))
                                                   (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "22") (term "1"))
                                                   (rule "concrete_or_4" (formula "22"))
                                                   (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "36"))
                                                   (rule "concrete_or_2" (formula "22"))
                                                   (rule "close" (formula "39") (ifseqformula "22"))
                                                )
                                             )
                                             (branch "   self.highscores = m_0_71.highscores
& m_0_71.min = minIdx_1 FALSE"
                                                (rule "allLeft" (formula "18") (inst "t=m_0_71"))
                                                (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "35"))
                                                (rule "concrete_or_2" (formula "18") (term "0"))
                                                (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "18") (term "0"))
                                                (rule "concrete_or_2" (formula "18"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_71"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "12") (term "0"))
                                                (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "10") (inst "t=m_0_71"))
                                                (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "10") (term "1,0"))
                                                (rule "concrete_or_4" (formula "10") (term "0"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "10"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_1" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "21") (inst "t=m_0_71"))
                                                (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                                (rule "cut_direct" (formula "39") (term "0"))
                                                (branch " CUT: m_0_71.size >= 1 + m_0_71.min TRUE"
                                                   (rule "concrete_and_1" (formula "40"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "andRight" (formula "41"))
                                                   (branch " Case 1"
                                                      (rule "equiv_right" (formula "41"))
                                                      (branch " Case 1"
                                                         (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "41") (term "1"))
                                                         (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                         (rule "add_literals" (formula "3") (term "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_contradEq7" (formula "39") (term "1") (ifseqformula "9"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1"))
                                                         (rule "mul_literals" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "39") (term "1"))
                                                         (rule "concrete_and_4" (formula "39"))
                                                         (rule "false_right" (formula "39"))
                                                         (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "39"))
                                                         (rule "add_literals" (formula "16") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "16"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0"))
                                                         (rule "concrete_and_2" (formula "39"))
                                                         (rule "false_right" (formula "39"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1"))
                                                         (rule "allLeft" (formula "23") (inst "t=m_0_71"))
                                                         (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "23") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "23") (term "0"))
                                                         (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "37"))
                                                         (rule "concrete_or_2" (formula "23"))
                                                         (rule "notLeft" (formula "23"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "28") (term "0,0") (ifseqformula "27") (ifseqformula "9") (ifseqformula "36"))
                                                         (rule "allLeft" (formula "21") (inst "t=self"))
                                                         (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "39"))
                                                         (rule "concrete_or_4" (formula "21") (term "0"))
                                                         (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "36"))
                                                         (rule "concrete_or_2" (formula "21"))
                                                         (rule "notLeft" (formula "21"))
                                                         (rule "allLeft" (formula "22") (inst "t=self"))
                                                         (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "37"))
                                                         (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                                         (rule "only_created_object_are_referenced_non_null" (formula "34") (term "0") (ifseqformula "2") (ifseqformula "9") (ifseqformula "34"))
                                                         (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "10") (ifseqformula "1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                         (rule "concrete_or_1" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "allLeft" (formula "26") (inst "t=self"))
                                                         (rule "exLeft" (formula "26") (inst "sk=i_91"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "27") (term "0"))
                                                         (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "27") (term "0"))
                                                         (rule "concrete_or_2" (formula "27"))
                                                         (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "26") (term "0"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "26") (term "0"))
                                                         (rule "concrete_or_2" (formula "26"))
                                                         (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                                         (rule "concrete_or_4" (formula "33") (term "0,0"))
                                                         (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "33") (term "0"))
                                                         (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                         (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "32") (term "0"))
                                                         (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                         (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                         (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "30") (term "0,0"))
                                                         (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "29") (term "0"))
                                                         (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "28") (term "0"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_1" (formula "30") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "30") (term "0"))
                                                         (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                         (rule "concrete_or_2" (formula "31") (term "0"))
                                                         (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "46"))
                                                         (rule "concrete_or_4" (formula "29") (term "0"))
                                                         (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "46"))
                                                         (rule "concrete_or_4" (formula "28") (term "0"))
                                                         (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "33") (term "1,0,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "30") (term "1") (ifseqformula "4"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "30") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "30") (term "1"))
                                                         (rule "concrete_or_4" (formula "30"))
                                                         (rule "notLeft" (formula "30"))
                                                         (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_2" (formula "30") (term "0"))
                                                         (rule "concrete_or_1" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "39"))
                                                         (rule "concrete_not_2" (formula "28") (term "1"))
                                                         (rule "concrete_or_3" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "38"))
                                                         (rule "concrete_or_2" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "38"))
                                                         (rule "concrete_not_2" (formula "28") (term "0"))
                                                         (rule "concrete_or_1" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "4"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0"))
                                                         (rule "concrete_and_2" (formula "36"))
                                                         (rule "false_right" (formula "36"))
                                                         (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "9"))
                                                         (rule "mul_literals" (formula "36") (term "1,0,0"))
                                                         (rule "add_zero_left" (formula "36") (term "0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0"))
                                                         (rule "concrete_and_2" (formula "36"))
                                                         (rule "false_right" (formula "36"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "26") (term "0"))
                                                         (rule "concrete_or_1" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "cut_direct" (formula "26") (term "0,1"))
                                                         (branch " CUT: minIdx_1 = i_91 TRUE"
                                                            (rule "concrete_not_1" (formula "27") (term "1"))
                                                            (rule "concrete_or_4" (formula "27"))
                                                            (rule "notLeft" (formula "27"))
                                                            (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "26"))
                                                            (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "26"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "26"))
                                                            (rule "applyEqRigid" (formula "8") (term "1,0,0,0,1,0") (ifseqformula "26"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "9"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0"))
                                                            (rule "leq_literals" (formula "35") (term "0"))
                                                            (rule "concrete_and_2" (formula "35"))
                                                            (rule "false_right" (formula "35"))
                                                            (rule "allLeft" (formula "27") (inst "t=m_0_71"))
                                                            (rule "exLeft" (formula "27") (inst "sk=i_98"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "28") (term "0"))
                                                            (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "28"))
                                                            (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "27") (term "0"))
                                                            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "27"))
                                                            (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "34") (term "0"))
                                                            (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "34") (term "0"))
                                                            (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "34") (term "0"))
                                                            (rule "concrete_or_2" (formula "34"))
                                                            (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "32") (term "0"))
                                                            (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "33") (term "0"))
                                                            (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "33") (term "0"))
                                                            (rule "concrete_or_2" (formula "33"))
                                                            (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                            (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "2"))
                                                            (rule "concrete_or_3" (formula "31") (term "0"))
                                                            (rule "concrete_or_1" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "30") (term "0"))
                                                            (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "30") (term "1"))
                                                            (rule "concrete_or_4" (formula "30"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "29") (term "0"))
                                                            (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "30"))
                                                            (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_2" (formula "31") (term "0"))
                                                            (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "31") (term "0"))
                                                            (rule "concrete_or_2" (formula "31"))
                                                            (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32"))
                                                            (rule "times_zero_2" (formula "32") (term "1,0"))
                                                            (rule "add_zero_right" (formula "32") (term "0"))
                                                            (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                            (rule "add_literals" (formula "28") (term "1"))
                                                            (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "30"))
                                                            (rule "qeq_literals" (formula "16"))
                                                            (rule "closeFalse" (formula "16"))
                                                         )
                                                         (branch " CUT: minIdx_1 = i_91 FALSE"
                                                            (rule "concrete_not_2" (formula "26") (term "1"))
                                                            (rule "concrete_or_3" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "allLeft" (formula "26") (inst "t=m_0_71"))
                                                            (rule "exLeft" (formula "26") (inst "sk=i_99"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "27") (term "0"))
                                                            (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "27") (term "0"))
                                                            (rule "concrete_or_2" (formula "27"))
                                                            (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "26") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "26") (term "0"))
                                                            (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "26"))
                                                            (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "32") (term "0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "32") (term "0"))
                                                            (rule "concrete_or_2" (formula "32"))
                                                            (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                            (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "31") (term "0"))
                                                            (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "31"))
                                                            (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "2"))
                                                            (rule "concrete_or_3" (formula "30") (term "0"))
                                                            (rule "concrete_or_1" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "29") (term "0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "29") (term "1"))
                                                            (rule "concrete_or_4" (formula "29"))
                                                            (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                            (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "28") (term "0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "32") (term "0"))
                                                            (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_2" (formula "32") (term "0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "32") (term "0"))
                                                            (rule "concrete_or_2" (formula "32"))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_homoInEq1" (formula "31"))
                                                            (rule "times_zero_2" (formula "31") (term "1,0"))
                                                            (rule "add_zero_right" (formula "31") (term "0"))
                                                            (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "30"))
                                                            (rule "qeq_literals" (formula "16"))
                                                            (rule "closeFalse" (formula "16"))
                                                         )
                                                      )
                                                      (branch " Case 2"
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "41"))
                                                         (rule "add_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "3"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0"))
                                                         (rule "qeq_literals" (formula "41") (term "0"))
                                                         (rule "concrete_and_2" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                         (rule "concrete_and_2" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                   (branch " Case 2"
                                                      (rule "equiv_right" (formula "41"))
                                                      (branch " Case 1"
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "allRight" (formula "42") (inst "sk=i_85"))
                                                         (rule "orRight" (formula "42"))
                                                         (rule "orRight" (formula "42"))
                                                         (rule "orRight" (formula "43"))
                                                         (rule "eqSymm" (formula "45") (term "1,0,0,0"))
                                                         (rule "eqSymm" (formula "42"))
                                                         (rule "inEqSimp_leqRight" (formula "43"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "45"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "37"))
                                                         (rule "add_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "6"))
                                                         (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0"))
                                                         (rule "leq_literals" (formula "37") (term "0"))
                                                         (rule "concrete_and_2" (formula "37"))
                                                         (rule "false_right" (formula "37"))
                                                         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                         (rule "times_zero_1" (formula "6") (term "0,0"))
                                                         (rule "add_zero_left" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "mul_literals" (formula "6") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "commute_and" (formula "1") (term "0,0,0"))
                                                         (rule "cut_direct" (formula "44") (term "1"))
                                                         (branch " CUT: m_0_71.min = minIdx_1 TRUE"
                                                            (rule "concrete_and_3" (formula "45"))
                                                            (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "45"))
                                                            (rule "concrete_and_4" (formula "2") (term "0,0,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                            (rule "allLeft" (formula "29") (inst "t=m_0_71"))
                                                            (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "29") (term "0"))
                                                            (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "43"))
                                                            (rule "concrete_or_2" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "34") (term "0,0") (ifseqformula "33") (ifseqformula "15") (ifseqformula "42"))
                                                            (rule "allLeft" (formula "26") (inst "t=m_0_71"))
                                                            (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "44"))
                                                            (rule "concrete_or_4" (formula "26") (term "0,0,0,0"))
                                                            (rule "replace_known_left" (formula "26") (term "0,1,0,0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "26") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_85"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "26") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "26") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "26") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "26") (term "0"))
                                                            (rule "concrete_or_2" (formula "26"))
                                                            (rule "notLeft" (formula "26"))
                                                            (rule "allLeft" (formula "26") (inst "t=minIdx_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "26") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "26") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "26") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "26") (term "0"))
                                                            (rule "concrete_or_2" (formula "26"))
                                                            (rule "notLeft" (formula "26"))
                                                            (rule "allLeft" (formula "29") (inst "t=self"))
                                                            (rule "replace_known_right" (formula "29") (term "0,0,0,0") (ifseqformula "45"))
                                                            (rule "concrete_or_2" (formula "29") (term "0,0,0"))
                                                            (rule "allLeft" (formula "32") (inst "t=m_0_71"))
                                                            (rule "exLeft" (formula "32") (inst "sk=i_97"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "andLeft" (formula "32"))
                                                            (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "32") (term "0"))
                                                            (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "32"))
                                                            (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "33") (term "0"))
                                                            (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "33"))
                                                            (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "39") (term "0,0"))
                                                            (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "39") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "39") (term "0"))
                                                            (rule "replace_known_left" (formula "38") (term "0,1,0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "38") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "38") (term "0,0"))
                                                            (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "38") (term "0"))
                                                            (rule "replace_known_left" (formula "37") (term "0,1,0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "37") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "37") (term "0,0"))
                                                            (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "36") (term "0,0"))
                                                            (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "35") (term "0"))
                                                            (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "34") (term "0"))
                                                            (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "55"))
                                                            (rule "concrete_or_2" (formula "37") (term "0"))
                                                            (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "36") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "36") (term "0"))
                                                            (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "55"))
                                                            (rule "concrete_or_4" (formula "34") (term "0"))
                                                            (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "55"))
                                                            (rule "concrete_or_4" (formula "35") (term "0"))
                                                            (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "39") (term "1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "36") (term "0,0") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "36") (term "0,0"))
                                                            (rule "concrete_not_2" (formula "36") (term "0"))
                                                            (rule "concrete_or_1" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "inEqSimp_contradEq7" (formula "34") (term "0,1") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,1"))
                                                            (rule "add_literals" (formula "34") (term "0,0,0,1"))
                                                            (rule "leq_literals" (formula "34") (term "0,0,1"))
                                                            (rule "concrete_and_2" (formula "34") (term "0,1"))
                                                            (rule "concrete_not_2" (formula "34") (term "1"))
                                                            (rule "concrete_or_3" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_contradEq7" (formula "34") (term "0") (ifseqformula "14"))
                                                            (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "34") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "34") (term "0"))
                                                            (rule "concrete_or_2" (formula "34"))
                                                            (rule "notLeft" (formula "34"))
                                                            (rule "inEqSimp_contradEq7" (formula "34") (term "0,0") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "34") (term "0,0"))
                                                            (rule "concrete_not_2" (formula "34") (term "0"))
                                                            (rule "concrete_or_1" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_contradEq7" (formula "34") (term "0,0") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "34") (term "1,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "34") (term "0,0"))
                                                            (rule "concrete_not_2" (formula "34") (term "0"))
                                                            (rule "concrete_or_1" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_strengthen1" (formula "21") (ifseqformula "42"))
                                                            (rule "add_zero_right" (formula "21") (term "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "21"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0"))
                                                            (rule "leq_literals" (formula "42") (term "0"))
                                                            (rule "concrete_and_2" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "32") (term "0"))
                                                            (rule "concrete_or_1" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                                                            (rule "mul_literals" (formula "21") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                            (rule "mul_literals" (formula "21") (term "1"))
                                                            (rule "allLeft" (formula "33") (inst "t=self"))
                                                            (rule "exLeft" (formula "33") (inst "sk=i_107"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "andLeft" (formula "33"))
                                                            (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "33") (term "0"))
                                                            (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "33") (term "0"))
                                                            (rule "concrete_or_2" (formula "33"))
                                                            (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "34") (term "0"))
                                                            (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "34"))
                                                            (rule "replace_known_left" (formula "40") (term "0,1,0,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "40") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "40") (term "0,0"))
                                                            (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "40") (term "0"))
                                                            (rule "replace_known_left" (formula "38") (term "0,1,0,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "38") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "38") (term "0,0"))
                                                            (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "38") (term "0"))
                                                            (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "39") (term "0,0"))
                                                            (rule "replace_known_left" (formula "37") (term "0,1,0,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "37") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "37") (term "0,0"))
                                                            (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "36") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "36") (term "0"))
                                                            (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "35") (term "0"))
                                                            (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "47"))
                                                            (rule "concrete_not_1" (formula "39") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "39") (term "0"))
                                                            (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "54"))
                                                            (rule "concrete_or_4" (formula "35") (term "0"))
                                                            (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "54"))
                                                            (rule "concrete_or_4" (formula "36") (term "0"))
                                                            (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "54"))
                                                            (rule "concrete_or_2" (formula "37") (term "0"))
                                                            (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "39") (term "0,1") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "40") (term "1,0,0,1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "35") (term "0,0,1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "34") (term "0") (ifseqformula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "34"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "applyEq" (formula "33") (term "0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "36") (term "0,0,1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "37") (term "0,0,1") (ifseqformula "43"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                            (rule "mul_literals" (formula "34") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "36") (term "0") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                            (rule "add_zero_left" (formula "36") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "36") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "36") (term "0"))
                                                            (rule "concrete_or_2" (formula "36"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "47"))
                                                            (rule "concrete_or_4" (formula "36"))
                                                            (rule "notLeft" (formula "36"))
                                                            (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "46"))
                                                            (rule "concrete_not_2" (formula "37") (term "0"))
                                                            (rule "concrete_or_1" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "45"))
                                                            (rule "concrete_not_2" (formula "36") (term "0"))
                                                            (rule "concrete_or_1" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "replace_known_right" (formula "35") (term "0,1") (ifseqformula "44"))
                                                            (rule "concrete_not_2" (formula "35") (term "1"))
                                                            (rule "concrete_or_3" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "9"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                            (rule "concrete_and_2" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "14"))
                                                            (rule "mul_literals" (formula "43") (term "1,0,0"))
                                                            (rule "add_zero_left" (formula "43") (term "0,0"))
                                                            (rule "leq_literals" (formula "43") (term "0"))
                                                            (rule "concrete_and_2" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (rule "concrete_or_1" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "only_created_object_are_referenced_non_null" (formula "28") (term "1,0,1,0") (ifseqformula "8") (ifseqformula "15") (ifseqformula "44"))
                                                            (rule "cut_direct" (formula "33") (term "0,1"))
                                                            (branch " CUT: minIdx_1 = i_97 TRUE"
                                                               (rule "concrete_not_1" (formula "34") (term "1"))
                                                               (rule "concrete_or_4" (formula "34"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "applyEqRigid" (formula "39") (term "1,0,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "44") (term "1,0") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "33"))
                                                               (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "33"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "33"))
                                                               (rule "applyEq" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "43") (term "1,0,0"))
                                                               (rule "add_zero_left" (formula "43") (term "0,0"))
                                                               (rule "leq_literals" (formula "43") (term "0"))
                                                               (rule "concrete_and_2" (formula "43"))
                                                               (rule "false_right" (formula "43"))
                                                               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                               (rule "mul_literals" (formula "7") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                               (rule "allLeft" (formula "36") (inst "t=m_0_71"))
                                                               (rule "eqSymm" (formula "36") (term "1,0,0,0"))
                                                               (rule "replace_known_left" (formula "36") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "36") (term "1,0,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "36") (term "0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "51"))
                                                               (rule "concrete_or_4" (formula "36") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                               (rule "applyEq" (formula "36") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "36") (term "1,1,0,0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "36") (term "1,0,0,0,0") (ifseqformula "14"))
                                                               (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,0"))
                                                               (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "36") (term "1,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "36") (term "0,0,0,0"))
                                                               (rule "allLeft" (formula "30") (inst "t=m_0_71"))
                                                               (rule "eqSymm" (formula "30") (term "0,1"))
                                                               (rule "eqSymm" (formula "30") (term "1,0"))
                                                               (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "52"))
                                                               (rule "concrete_or_2" (formula "30") (term "0"))
                                                               (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "53"))
                                                               (rule "concrete_or_2" (formula "30"))
                                                               (rule "notLeft" (formula "30"))
                                                               (rule "cut_direct" (formula "34") (term "0,1"))
                                                               (branch " CUT: i_97 = i_107 TRUE"
                                                                  (rule "concrete_not_1" (formula "35") (term "1"))
                                                                  (rule "concrete_or_4" (formula "35"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEqRigid" (formula "36") (term "1,0,1,1,0") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "55") (term "0") (ifseqformula "34"))
                                                                  (rule "eqSymm" (formula "55"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "40") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "36") (term "1,1,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "34"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "14"))
                                                                  (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0"))
                                                                  (rule "leq_literals" (formula "44") (term "0"))
                                                                  (rule "concrete_and_2" (formula "44"))
                                                                  (rule "false_right" (formula "44"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "allLeft" (formula "36") (inst "t=i_85"))
                                                                  (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "55"))
                                                                  (rule "concrete_or_4" (formula "36") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                                  (rule "concrete_and_2" (formula "36") (term "0,0"))
                                                                  (rule "concrete_or_2" (formula "36") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "36") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "36") (term "1"))
                                                                  (rule "concrete_or_4" (formula "36"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "36"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "36"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0"))
                                                                  (rule "add_literals" (formula "36") (term "0"))
                                                                  (rule "leq_literals" (formula "36"))
                                                                  (rule "closeFalse" (formula "36"))
                                                               )
                                                               (branch " CUT: i_97 = i_107 FALSE"
                                                                  (rule "concrete_not_2" (formula "34") (term "1"))
                                                                  (rule "concrete_or_3" (formula "34"))
                                                                  (rule "true_left" (formula "34"))
                                                                  (rule "allLeft" (formula "13") (inst "t=i_97"))
                                                                  (rule "eqClose" (formula "13") (term "0,0,0,1"))
                                                                  (rule "ifthenelse_true" (formula "13") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
                                                                  (rule "add_literals" (formula "13") (term "1,0,1"))
                                                                  (rule "times_zero_1" (formula "13") (term "0,1"))
                                                                  (rule "leq_literals" (formula "13") (term "1"))
                                                                  (rule "concrete_or_3" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_85"))
                                                                  (rule "eqSymm" (formula "35") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "55"))
                                                                  (rule "concrete_or_4" (formula "35") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                                                  (rule "concrete_and_2" (formula "35") (term "0,0"))
                                                                  (rule "concrete_or_2" (formula "35") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "35") (term "1"))
                                                                  (rule "concrete_or_4" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0"))
                                                                  (rule "leq_literals" (formula "35"))
                                                                  (rule "closeFalse" (formula "35"))
                                                               )
                                                            )
                                                            (branch " CUT: minIdx_1 = i_97 FALSE"
                                                               (rule "concrete_not_2" (formula "33") (term "1"))
                                                               (rule "concrete_or_3" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "allLeft" (formula "35") (inst "t=m_0_71"))
                                                               (rule "eqSymm" (formula "35") (term "1,0,0,0"))
                                                               (rule "replace_known_left" (formula "35") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "35") (term "1,0,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "35") (term "0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "51"))
                                                               (rule "concrete_or_4" (formula "35") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                                                               (rule "applyEq" (formula "35") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "35") (term "1,0,0,0,0") (ifseqformula "14"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,0"))
                                                               (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "35") (term "1,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "35") (term "0,0,0,0"))
                                                               (rule "cut_direct" (formula "33") (term "0,1"))
                                                               (branch " CUT: minIdx_1 = i_107 TRUE"
                                                                  (rule "concrete_not_1" (formula "34") (term "1"))
                                                                  (rule "concrete_or_4" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "applyEqRigid" (formula "35") (term "1,0,1,1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "39") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "33"))
                                                                  (rule "eqSymm" (formula "55"))
                                                                  (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "33"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "33"))
                                                                  (rule "applyEqRigid" (formula "35") (term "1,1,0,0,0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "14"))
                                                                  (rule "add_zero_left" (formula "43") (term "0,0"))
                                                                  (rule "mul_literals" (formula "43") (term "0,0"))
                                                                  (rule "leq_literals" (formula "43") (term "0"))
                                                                  (rule "concrete_and_2" (formula "43"))
                                                                  (rule "false_right" (formula "43"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "allLeft" (formula "30") (inst "t=m_0_71"))
                                                                  (rule "eqSymm" (formula "30") (term "1,0"))
                                                                  (rule "eqSymm" (formula "30") (term "0,1"))
                                                                  (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "52"))
                                                                  (rule "concrete_or_2" (formula "30") (term "0"))
                                                                  (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "53"))
                                                                  (rule "concrete_or_2" (formula "30"))
                                                                  (rule "notLeft" (formula "30"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_85"))
                                                                  (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "55"))
                                                                  (rule "concrete_or_4" (formula "35") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "35") (term "1"))
                                                                  (rule "concrete_or_4" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                  (rule "concrete_and_2" (formula "35") (term "0"))
                                                                  (rule "concrete_or_2" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "35"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "35") (term "0"))
                                                                  (rule "leq_literals" (formula "35"))
                                                                  (rule "closeFalse" (formula "35"))
                                                               )
                                                               (branch " CUT: minIdx_1 = i_107 FALSE"
                                                                  (rule "concrete_not_2" (formula "33") (term "1"))
                                                                  (rule "concrete_or_3" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "allLeft" (formula "30") (inst "t=m_0_71"))
                                                                  (rule "eqSymm" (formula "30") (term "0,1"))
                                                                  (rule "eqSymm" (formula "30") (term "1,0"))
                                                                  (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "52"))
                                                                  (rule "concrete_or_2" (formula "30") (term "0"))
                                                                  (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "53"))
                                                                  (rule "concrete_or_2" (formula "30"))
                                                                  (rule "notLeft" (formula "30"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_85"))
                                                                  (rule "eqSymm" (formula "34") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "55"))
                                                                  (rule "concrete_or_4" (formula "34") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "5"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                                  (rule "concrete_and_2" (formula "34") (term "0,0"))
                                                                  (rule "concrete_or_2" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (rule "concrete_and_2" (formula "34") (term "1"))
                                                                  (rule "concrete_or_4" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "4"))
                                                                  (rule "andLeft" (formula "34"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0"))
                                                                  (rule "add_literals" (formula "34") (term "0"))
                                                                  (rule "leq_literals" (formula "34"))
                                                                  (rule "closeFalse" (formula "34"))
                                                               )
                                                            )
                                                         )
                                                         (branch " CUT: m_0_71.min = minIdx_1 FALSE"
                                                            (rule "concrete_and_4" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "allLeft" (formula "29") (inst "t=m_0_71"))
                                                            (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "43"))
                                                            (rule "concrete_or_2" (formula "29") (term "0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "29") (term "0"))
                                                            (rule "concrete_or_2" (formula "29"))
                                                            (rule "notLeft" (formula "29"))
                                                            (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "34") (term "0,0") (ifseqformula "33") (ifseqformula "15") (ifseqformula "42"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                            (branch " minIdx_1 = i_85 & self.highscores = m_0_71.highscores TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "43") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                               (rule "applyEq" (formula "40") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "45") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "15") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "24") (term "1") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
                                                               (rule "applyEq" (formula "15") (term "0,2,0,0,1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                                               (rule "times_zero_1" (formula "9") (term "0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                               (rule "mul_literals" (formula "9") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "22"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "22"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                                               (rule "times_zero_1" (formula "20") (term "0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                               (rule "concrete_or_1" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "allLeft" (formula "25") (inst "t=m_0_71"))
                                                               (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "10"))
                                                               (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                                               (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "42"))
                                                               (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                               (rule "allLeft" (formula "27") (inst "t=self"))
                                                               (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "2"))
                                                               (rule "concrete_not_1" (formula "27") (term "1"))
                                                               (rule "concrete_or_4" (formula "27"))
                                                               (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "41"))
                                                               (rule "concrete_or_2" (formula "27"))
                                                               (rule "close" (formula "44") (ifseqformula "27"))
                                                            )
                                                            (branch " minIdx_1 = i_85 & self.highscores = m_0_71.highscores FALSE"
                                                               (rule "inEqSimp_homoInEq0" (formula "1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "allLeft" (formula "26") (inst "t=m_0_71"))
                                                               (rule "replace_known_left" (formula "26") (term "0,1,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "26") (term "1,0,0,0"))
                                                               (rule "concrete_or_4" (formula "26") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "26") (term "1,0,0,0") (ifseqformula "45"))
                                                               (rule "concrete_or_4" (formula "26") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0"))
                                                               (rule "allLeft" (formula "28") (inst "t=self"))
                                                               (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "47"))
                                                               (rule "concrete_or_4" (formula "28") (term "0"))
                                                               (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "44"))
                                                               (rule "concrete_or_2" (formula "28"))
                                                               (rule "notLeft" (formula "28"))
                                                               (rule "replace_known_right" (formula "40") (term "1") (ifseqformula "39"))
                                                               (rule "concrete_and_4" (formula "40"))
                                                               (rule "false_right" (formula "40"))
                                                               (rule "allLeft" (formula "32") (inst "t=m_0_71"))
                                                               (rule "eqSymm" (formula "32") (term "1,0,0,0"))
                                                               (rule "replace_known_left" (formula "32") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "32") (term "1,0,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "32") (term "0,0,0,0,0"))
                                                               (rule "replace_known_right" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_4" (formula "32") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0,0,0") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1,0,0,0,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                                               (rule "allLeft" (formula "32") (inst "t=i_85"))
                                                               (rule "eqSymm" (formula "32") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "50"))
                                                               (rule "concrete_or_4" (formula "32") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "32") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "32") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "32") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "32") (term "0,1"))
                                                               (rule "concrete_and_2" (formula "32") (term "1"))
                                                               (rule "concrete_or_4" (formula "32"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0"))
                                                               (rule "leq_literals" (formula "32"))
                                                               (rule "closeFalse" (formula "32"))
                                                            )
                                                         )
                                                      )
                                                      (branch " Case 2"
                                                         (rule "notRight" (formula "42"))
                                                         (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "42") (term "1"))
                                                         (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                         (rule "add_literals" (formula "4") (term "1"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "40") (term "1") (ifseqformula "10"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "40") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "40") (term "1"))
                                                         (rule "concrete_and_4" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (rule "concrete_or_1" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                                         (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                                         (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                         (rule "commute_and" (formula "2") (term "0,0,0,1,0"))
                                                         (rule "allLeft" (formula "24") (inst "t=m_0_71"))
                                                         (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "38"))
                                                         (rule "concrete_or_2" (formula "24") (term "0"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                                         (rule "concrete_not_1" (formula "24") (term "0"))
                                                         (rule "concrete_or_2" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "29") (term "0,0") (ifseqformula "28") (ifseqformula "10") (ifseqformula "37"))
                                                         (rule "cut_direct" (formula "2") (term "1,0,0,0,1,0"))
                                                         (branch " CUT: self.highscores = m_0_71.highscores TRUE"
                                                            (rule "concrete_and_3" (formula "3") (term "0,0,0,1,0"))
                                                            (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "19") (term "1") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "9") (term "0,2,0,0,1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                            (rule "times_zero_1" (formula "16") (term "0,0"))
                                                            (rule "add_zero_left" (formula "16") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "5"))
                                                            (rule "leq_literals" (formula "16") (term "0"))
                                                            (rule "concrete_or_1" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "allLeft" (formula "22") (inst "t=self"))
                                                            (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "2"))
                                                            (rule "concrete_not_1" (formula "22") (term "1"))
                                                            (rule "concrete_or_4" (formula "22"))
                                                            (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "39"))
                                                            (rule "concrete_or_4" (formula "22"))
                                                            (rule "close" (formula "36") (ifseqformula "22"))
                                                         )
                                                         (branch " CUT: self.highscores = m_0_71.highscores FALSE"
                                                            (rule "concrete_and_4" (formula "2") (term "0,0,0,1,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0,0,1,0"))
                                                            (rule "only_created_object_are_referenced_non_null" (formula "22") (term "1,0,1,0") (ifseqformula "3") (ifseqformula "10") (ifseqformula "34"))
                                                            (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "10") (ifseqformula "22") (ifseqformula "35"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "14") (term "0"))
                                                            (rule "concrete_or_1" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "allLeft" (formula "24") (inst "t=self"))
                                                            (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "39"))
                                                            (rule "concrete_or_2" (formula "24") (term "0,0,0"))
                                                            (rule "allLeft" (formula "27") (inst "t=m_0_71"))
                                                            (rule "exLeft" (formula "27") (inst "sk=i_86"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "28") (term "0"))
                                                            (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "28") (term "0"))
                                                            (rule "concrete_or_2" (formula "28"))
                                                            (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "27") (term "0"))
                                                            (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "27"))
                                                            (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                            (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "34") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "34") (term "0"))
                                                            (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                                            (rule "concrete_not_1" (formula "34") (term "0"))
                                                            (rule "concrete_or_2" (formula "34"))
                                                            (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "49"))
                                                            (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "32") (term "0"))
                                                            (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "1"))
                                                            (rule "concrete_or_3" (formula "31") (term "0"))
                                                            (rule "concrete_or_1" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "32") (term "0"))
                                                            (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                            (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "32") (term "0"))
                                                            (rule "concrete_or_2" (formula "32"))
                                                            (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "1"))
                                                            (rule "concrete_not_1" (formula "30") (term "1"))
                                                            (rule "concrete_or_4" (formula "30"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "48"))
                                                            (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                            (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "29") (term "0"))
                                                            (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "30") (term "1"))
                                                            (rule "concrete_or_4" (formula "30"))
                                                            (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "3"))
                                                            (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "31") (term "0"))
                                                            (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "48"))
                                                            (rule "concrete_or_2" (formula "31"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "31"))
                                                            (rule "qeq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "1"))
                                                            (rule "eqSymm" (formula "28") (term "0,1"))
                                                            (rule "eq_or" (formula "28"))
                                                            (rule "notLeft" (formula "28"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
                                                            (rule "inEqSimp_commuteLeq" (formula "17"))
                                                            (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "29"))
                                                            (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30"))
                                                            (rule "times_zero_2" (formula "30") (term "1,0"))
                                                            (rule "add_zero_right" (formula "30") (term "0"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                            (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "26") (term "1"))
                                                            (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                                            (rule "qeq_literals" (formula "26"))
                                                            (rule "true_left" (formula "26"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "mul_literals" (formula "28") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                            (rule "mul_literals" (formula "29") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "26"))
                                                            (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0"))
                                                            (rule "leq_literals" (formula "38") (term "0"))
                                                            (rule "concrete_and_2" (formula "38"))
                                                            (rule "false_right" (formula "38"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                            (rule "concrete_or_1" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "27"))
                                                            (rule "qeq_literals" (formula "25") (term "0"))
                                                            (rule "concrete_and_2" (formula "25"))
                                                            (rule "closeFalse" (formula "25"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " CUT: m_0_71.size >= 1 + m_0_71.min FALSE"
                                                   (rule "concrete_and_2" (formula "40"))
                                                   (rule "false_right" (formula "40"))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_1" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "cut_direct" (formula "39") (term "1"))
                                                   (branch " CUT: m_0_71.min = minIdx_1 TRUE"
                                                      (rule "concrete_and_3" (formula "40"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "16") (term "0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0"))
                                                      (rule "allLeft" (formula "24") (inst "t=m_0_71"))
                                                      (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "concrete_not_1" (formula "24") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "24") (term "0"))
                                                      (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "38"))
                                                      (rule "concrete_or_2" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "29") (term "0,0") (ifseqformula "28") (ifseqformula "10") (ifseqformula "37"))
                                                      (rule "only_created_object_are_referenced_non_null" (formula "33") (term "0") (ifseqformula "3") (ifseqformula "10") (ifseqformula "33"))
                                                      (rule "array_length_non_negative_3" (formula "15") (term "0") (ifseqformula "11") (ifseqformula "1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "15") (term "0"))
                                                      (rule "concrete_or_1" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "24") (inst "t=self"))
                                                      (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "38"))
                                                      (rule "concrete_or_2" (formula "24") (term "0,0,0"))
                                                      (rule "allLeft" (formula "27") (inst "t=m_0_71"))
                                                      (rule "exLeft" (formula "27") (inst "sk=i_87"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "28") (term "0"))
                                                      (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "28"))
                                                      (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "27") (term "0"))
                                                      (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "27"))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "34") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "34") (term "0,0"))
                                                      (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "34") (term "0"))
                                                      (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "33") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "33") (term "0"))
                                                      (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                      (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "29") (term "0"))
                                                      (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "30") (term "0"))
                                                      (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "48"))
                                                      (rule "concrete_or_2" (formula "31") (term "0"))
                                                      (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "48"))
                                                      (rule "concrete_or_4" (formula "29") (term "0"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "32") (term "0"))
                                                      (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "48"))
                                                      (rule "concrete_or_4" (formula "30") (term "0"))
                                                      (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "34") (term "1,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "32") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "32") (term "0"))
                                                      (rule "concrete_or_1" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "32") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "32") (term "0"))
                                                      (rule "concrete_or_1" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_contradEq7" (formula "30") (term "0,1") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0,1"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,0,1"))
                                                      (rule "leq_literals" (formula "30") (term "0,0,1"))
                                                      (rule "concrete_and_2" (formula "30") (term "0,1"))
                                                      (rule "concrete_not_2" (formula "30") (term "1"))
                                                      (rule "concrete_or_3" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_contradEq7" (formula "30") (term "0") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "30") (term "0"))
                                                      (rule "concrete_or_2" (formula "30"))
                                                      (rule "notLeft" (formula "30"))
                                                      (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "30") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "30") (term "0"))
                                                      (rule "concrete_or_1" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "38"))
                                                      (rule "add_zero_right" (formula "17") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "17"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0"))
                                                      (rule "leq_literals" (formula "38") (term "0"))
                                                      (rule "concrete_and_2" (formula "38"))
                                                      (rule "false_right" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch " CUT: m_0_71.min = minIdx_1 FALSE"
                                                      (rule "concrete_and_4" (formula "40"))
                                                      (rule "false_right" (formula "40"))
                                                      (rule "allLeft" (formula "25") (inst "t=m_0_71"))
                                                      (rule "exLeft" (formula "25") (inst "sk=i_88"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "26") (term "0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "26") (term "0"))
                                                      (rule "concrete_or_2" (formula "26"))
                                                      (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "25") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "25") (term "0"))
                                                      (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "25"))
                                                      (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "32") (term "0,0"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "32") (term "0"))
                                                      (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                      (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "31") (term "0"))
                                                      (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                      (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "29") (term "0,0"))
                                                      (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                      (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "27") (term "0"))
                                                      (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "28") (term "0"))
                                                      (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "30") (term "0"))
                                                      (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "45"))
                                                      (rule "concrete_or_4" (formula "27") (term "0"))
                                                      (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "29") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "29") (term "0"))
                                                      (rule "inEqSimp_contradEq7" (formula "28") (term "0,1") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                                      (rule "leq_literals" (formula "28") (term "0,0,1"))
                                                      (rule "concrete_and_2" (formula "28") (term "0,1"))
                                                      (rule "concrete_not_2" (formula "28") (term "1"))
                                                      (rule "concrete_or_3" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "31") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "31") (term "0"))
                                                      (rule "concrete_or_1" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "29") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "29") (term "0"))
                                                      (rule "concrete_or_1" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "15"))
                                                      (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "29") (term "0,0"))
                                                      (rule "concrete_not_2" (formula "29") (term "0"))
                                                      (rule "concrete_or_1" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "15"))
                                                      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "28") (term "0"))
                                                      (rule "concrete_or_2" (formula "28"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "36"))
                                                      (rule "add_zero_right" (formula "16") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "16"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                      (rule "concrete_and_2" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "26"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_literals" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch " CUT: m_0_71.min >= -1 FALSE"
                                             (rule "concrete_and_2" (formula "36") (term "0"))
                                             (rule "concrete_and_2" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_geqRight" (formula "35"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_71"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0"))
                                             (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_71"))
                                             (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "12") (term "1,0"))
                                             (rule "concrete_or_4" (formula "12") (term "0"))
                                             (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "19"))
                                             (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,0"))
                                             (rule "times_zero_1" (formula "19") (term "0"))
                                             (rule "qeq_literals" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "23") (inst "t=m_0_71"))
                                             (rule "exLeft" (formula "23") (inst "sk=i_89"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "24") (term "0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "24") (term "0"))
                                             (rule "concrete_or_2" (formula "24"))
                                             (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "23") (term "1,0"))
                                             (rule "concrete_or_4" (formula "23") (term "0"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "23"))
                                             (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "30") (term "0,0"))
                                             (rule "concrete_or_2" (formula "30") (term "0"))
                                             (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "29") (term "0,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "29") (term "0,0"))
                                             (rule "concrete_or_2" (formula "29") (term "0"))
                                             (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "28") (term "0,0"))
                                             (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "27") (term "0,0"))
                                             (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_4" (formula "26") (term "0,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "26") (term "1,0"))
                                             (rule "concrete_or_4" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "25") (term "1,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "28") (term "0,0"))
                                             (rule "concrete_or_2" (formula "28") (term "0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "43"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "27") (term "0,0"))
                                             (rule "concrete_or_2" (formula "27") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "26") (term "0,1") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                             (rule "qeq_literals" (formula "26") (term "0,0,1"))
                                             (rule "concrete_and_2" (formula "26") (term "0,1"))
                                             (rule "concrete_not_2" (formula "26") (term "1"))
                                             (rule "concrete_or_3" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_contradEq3" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "28") (term "0,0"))
                                             (rule "concrete_not_2" (formula "28") (term "0"))
                                             (rule "concrete_or_1" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_contradEq3" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "28") (term "0,0"))
                                             (rule "concrete_not_2" (formula "28") (term "0"))
                                             (rule "concrete_or_1" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "27") (term "0,0"))
                                             (rule "concrete_not_2" (formula "27") (term "0"))
                                             (rule "concrete_or_1" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_contradEq3" (formula "26") (term "0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                             (rule "concrete_and_2" (formula "26") (term "0"))
                                             (rule "concrete_or_2" (formula "26"))
                                             (rule "notLeft" (formula "26"))
                                             (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "34"))
                                             (rule "add_literals" (formula "15") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "15"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                             (rule "concrete_and_2" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                             (rule "concrete_and_2" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " self.min = minIdx_1 FALSE"
                                 (rule "equiv_left" (formula "1"))
                                 (branch " Case 1"
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "ifthenelse_split_for" (formula "32"))
                                    (branch " self.capacity >= 1 + idx_1 TRUE"
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "emptyModality" (formula "32") (term "5"))
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "boolean_equal" (formula "32") (term "0,0"))
                                       (rule "concrete_not_1" (formula "32") (term "0"))
                                       (rule "concrete_impl_2" (formula "32"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                    (branch " self.capacity >= 1 + idx_1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "32"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "emptyModality" (formula "31") (term "5"))
                                       (builtin "Update Simplification" (formula "31"))
                                       (rule "boolean_not_equal_2" (formula "31") (term "0,0"))
                                       (rule "concrete_not_2" (formula "31") (term "0"))
                                       (rule "concrete_impl_1" (formula "31"))
                                       (rule "emptyModality" (formula "31") (term "5"))
                                       (builtin "Update Simplification" (formula "31"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,1,0,1,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,0,1"))
                                       (rule "andRight" (formula "31"))
                                       (branch " Case 1"
                                          (rule "andRight" (formula "31"))
                                          (branch " Case 1"
                                             (rule "andRight" (formula "31"))
                                             (branch " Case 1"
                                                (rule "andRight" (formula "31"))
                                                (branch " Case 1"
                                                   (rule "andRight" (formula "31"))
                                                   (branch " Case 1"
                                                      (rule "andRight" (formula "31"))
                                                      (branch " Case 1"
                                                         (rule "allRight" (formula "31") (inst "sk=m_0_60"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "notRight" (formula "31"))
                                                         (rule "allLeft" (formula "6") (inst "t=self.min@(maze.Highscore)"))
                                                         (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "6") (term "1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "6") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "6") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "6") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "6") (term "0"))
                                                         (rule "concrete_or_2" (formula "6"))
                                                         (rule "allLeft" (formula "13") (inst "t=m_0_60"))
                                                         (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "13") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "13") (term "0"))
                                                         (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                                         (rule "concrete_or_2" (formula "13"))
                                                         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "13"))
                                                         (rule "concrete_and_3" (formula "35"))
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "allLeft" (formula "8") (inst "t=minIdx_1"))
                                                         (rule "eqSymm" (formula "8") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "8") (term "0,0,0,1") (ifseqformula "31"))
                                                         (rule "ifthenelse_false" (formula "8") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1"))
                                                         (rule "add_literals" (formula "8") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "8") (term "0,1"))
                                                         (rule "leq_literals" (formula "8") (term "1"))
                                                         (rule "concrete_or_3" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "allLeft" (formula "17") (inst "t=m_0_60"))
                                                         (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "36"))
                                                         (rule "concrete_or_2" (formula "17") (term "0"))
                                                         (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "17") (term "0"))
                                                         (rule "concrete_or_2" (formula "17"))
                                                         (rule "allLeft" (formula "19") (inst "t=m_0_60"))
                                                         (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "19") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "19") (term "0"))
                                                         (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "37"))
                                                         (rule "concrete_or_2" (formula "19"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19"))
                                                         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "1,0"))
                                                         (rule "times_zero_1" (formula "19") (term "0"))
                                                         (rule "qeq_literals" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "allLeft" (formula "22") (inst "t=m_0_60"))
                                                         (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "22") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "22") (term "0"))
                                                         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "37"))
                                                         (rule "concrete_or_2" (formula "22"))
                                                         (rule "notLeft" (formula "22"))
                                                         (rule "allLeft" (formula "12") (inst "t=m_0_60"))
                                                         (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "12") (term "0"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "38"))
                                                         (rule "concrete_or_2" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (rule "concrete_and_2" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch " Case 2"
                                                         (rule "allRight" (formula "31") (inst "sk=m_0_61"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "orRight" (formula "31"))
                                                         (rule "notRight" (formula "31"))
                                                         (rule "allLeft" (formula "15") (inst "t=m_0_61"))
                                                         (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "33"))
                                                         (rule "concrete_or_2" (formula "15") (term "0"))
                                                         (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "15") (term "0"))
                                                         (rule "concrete_or_2" (formula "15"))
                                                         (rule "allLeft" (formula "6") (inst "t=self.min@(maze.Highscore)"))
                                                         (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "6") (term "1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "6") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "6") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "6") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "6") (term "0"))
                                                         (rule "concrete_or_2" (formula "6"))
                                                         (rule "allLeft" (formula "7") (inst "t=minIdx_1"))
                                                         (rule "eqSymm" (formula "7") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "7") (term "0,0,0,1") (ifseqformula "30"))
                                                         (rule "ifthenelse_false" (formula "7") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1"))
                                                         (rule "add_literals" (formula "7") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "7") (term "0,1"))
                                                         (rule "leq_literals" (formula "7") (term "1"))
                                                         (rule "concrete_or_3" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "allLeft" (formula "11") (inst "t=m_0_61"))
                                                         (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "35"))
                                                         (rule "concrete_or_2" (formula "11") (term "0"))
                                                         (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "11") (term "0"))
                                                         (rule "concrete_or_2" (formula "11"))
                                                         (rule "allLeft" (formula "16") (inst "t=m_0_61"))
                                                         (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "16") (term "0"))
                                                         (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "36"))
                                                         (rule "concrete_or_2" (formula "16"))
                                                         (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "16"))
                                                         (rule "concrete_and_1" (formula "37"))
                                                         (rule "inEqSimp_geqRight" (formula "37"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "allLeft" (formula "15") (inst "t=m_0_61"))
                                                         (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "15") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "15") (term "0"))
                                                         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "38"))
                                                         (rule "concrete_or_2" (formula "15"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20"))
                                                         (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                         (rule "add_literals" (formula "20") (term "1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "0"))
                                                         (rule "qeq_literals" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "allLeft" (formula "17") (inst "t=m_0_61"))
                                                         (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "38"))
                                                         (rule "concrete_or_2" (formula "17") (term "0"))
                                                         (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "17") (term "0"))
                                                         (rule "concrete_or_2" (formula "17"))
                                                         (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "17") (term "0"))
                                                         (rule "concrete_and_2" (formula "17"))
                                                         (rule "closeFalse" (formula "17"))
                                                      )
                                                   )
                                                   (branch " Case 2"
                                                      (rule "allRight" (formula "31") (inst "sk=m_0_62"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "orRight" (formula "31"))
                                                      (rule "notRight" (formula "31"))
                                                      (rule "inEqSimp_leqRight" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "allLeft" (formula "16") (inst "t=m_0_62"))
                                                      (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "16") (term "0"))
                                                      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                                                      (rule "concrete_or_2" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0"))
                                                      (rule "add_literals" (formula "16") (term "0"))
                                                      (rule "leq_literals" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "31") (inst "sk=m_0_63"))
                                                   (rule "orRight" (formula "31"))
                                                   (rule "orRight" (formula "31"))
                                                   (rule "notRight" (formula "31"))
                                                   (rule "allRight" (formula "33") (inst "sk=i_72"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "orRight" (formula "33"))
                                                   (rule "notRight" (formula "35"))
                                                   (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "34"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "commute_and" (formula "3") (term "0,0"))
                                                   (rule "allLeft" (formula "9") (inst "t=self.min@(maze.Highscore)"))
                                                   (rule "eqClose" (formula "9") (term "0,0,0,1"))
                                                   (rule "ifthenelse_true" (formula "9") (term "0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "9") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "allLeft" (formula "16") (inst "t=m_0_63"))
                                                   (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "16") (term "0"))
                                                   (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "37"))
                                                   (rule "concrete_or_2" (formula "16"))
                                                   (rule "allLeft" (formula "10") (inst "t=minIdx_1"))
                                                   (rule "eqSymm" (formula "10") (term "0,0,0,1"))
                                                   (rule "replace_known_right" (formula "10") (term "0,0,0,1") (ifseqformula "33"))
                                                   (rule "ifthenelse_false" (formula "10") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1"))
                                                   (rule "add_literals" (formula "10") (term "1,0,1"))
                                                   (rule "times_zero_1" (formula "10") (term "0,1"))
                                                   (rule "leq_literals" (formula "10") (term "1"))
                                                   (rule "concrete_or_3" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "allLeft" (formula "19") (inst "t=m_0_63"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "38"))
                                                   (rule "concrete_or_2" (formula "19") (term "0"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "4"))
                                                   (rule "concrete_not_1" (formula "19") (term "0"))
                                                   (rule "concrete_or_2" (formula "19"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "19") (inst "t=m_0_63"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "40"))
                                                   (rule "concrete_or_2" (formula "19") (term "0"))
                                                   (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "5"))
                                                   (rule "concrete_not_1" (formula "19") (term "0"))
                                                   (rule "concrete_or_2" (formula "19"))
                                                   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                                   (rule "times_zero_1" (formula "19") (term "0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0"))
                                                   (rule "allLeft" (formula "27") (inst "t=m_0_63"))
                                                   (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "42"))
                                                   (rule "concrete_or_2" (formula "27") (term "0"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "5"))
                                                   (rule "concrete_not_1" (formula "27") (term "0"))
                                                   (rule "concrete_or_2" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "allLeft" (formula "25") (inst "t=m_0_63"))
                                                   (rule "replace_known_right" (formula "25") (term "1,0,0,0,0") (ifseqformula "43"))
                                                   (rule "concrete_or_4" (formula "25") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "5"))
                                                   (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                   (rule "allLeft" (formula "24") (inst "t=m_0_63"))
                                                   (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "44"))
                                                   (rule "concrete_or_2" (formula "24") (term "0"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "5"))
                                                   (rule "concrete_not_1" (formula "24") (term "0"))
                                                   (rule "concrete_or_2" (formula "24"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "17"))
                                                   (rule "inEqSimp_homoInEq0" (formula "24"))
                                                   (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "0"))
                                                   (rule "qeq_literals" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch " self.min = i_72 & self.highscores = m_0_63.highscores TRUE"
                                                      (rule "close" (formula "41") (ifseqformula "5"))
                                                   )
                                                   (branch " self.min = i_72 & self.highscores = m_0_63.highscores FALSE"
                                                      (rule "allLeft" (formula "15") (inst "t=m_0_63"))
                                                      (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "concrete_not_1" (formula "15") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "15") (term "0"))
                                                      (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "45"))
                                                      (rule "concrete_or_2" (formula "15"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                      (rule "concrete_or_1" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_72"))
                                                      (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "4"))
                                                      (rule "concrete_not_1" (formula "25") (term "1"))
                                                      (rule "concrete_or_4" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "25") (term "0"))
                                                      (rule "concrete_or_2" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "allRight" (formula "31") (inst "sk=h_10"))
                                                (rule "orRight" (formula "31"))
                                                (rule "orRight" (formula "32"))
                                                (rule "allRight" (formula "32") (inst "sk=other_10"))
                                                (rule "orRight" (formula "32"))
                                                (rule "orRight" (formula "32"))
                                                (rule "notRight" (formula "32"))
                                                (rule "allLeft" (formula "17") (inst "t=h_10"))
                                                (rule "replace_known_right" (formula "17") (term "0,0,0,0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "17") (term "0,0,0"))
                                                (rule "allLeft" (formula "17") (inst "t=other_10"))
                                                (rule "replace_known_right" (formula "17") (term "1,0") (ifseqformula "36"))
                                                (rule "concrete_or_4" (formula "17") (term "0"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "allRight" (formula "31") (inst "sk=m_0_64"))
                                             (rule "orRight" (formula "31"))
                                             (rule "notRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "notRight" (formula "32"))
                                             (rule "allLeft" (formula "19") (inst "t=m_0_64"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "19") (term "0"))
                                             (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "19") (term "0"))
                                             (rule "concrete_or_2" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "close" (formula "28") (ifseqformula "2"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "31") (inst "sk=m_0_65"))
                                          (rule "orRight" (formula "31"))
                                          (rule "orRight" (formula "31"))
                                          (rule "notRight" (formula "31"))
                                          (rule "eqSymm" (formula "33") (term "0,0,1,0"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,0"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,1,1,0,1,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,1,0,0,0,1,0,1,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,0,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,1,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,0,1,0,1,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,0,0,0,1"))
                                          (rule "eqSymm" (formula "33") (term "0,1,0,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0,1,1,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,1,1"))
                                          (rule "eqSymm" (formula "33") (term "0,1,2,0,1,1,0,1,1,1"))
                                          (rule "ifthenelse_split" (formula "33") (term "0,1,0"))
                                          (branch " self = m_0_65 TRUE"
                                             (rule "replace_known_left" (formula "34") (term "0,1,0,0,0,1,1,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "1,0,0,0,1,1,1"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0,0,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "0,0,0,1"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0,0,1,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "0,0,0,1,1"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "0,1,0,0,1,1,0,1,1,1"))
                                             (rule "eqSymm" (formula "34") (term "1,0,0,1,1,0,1,1,1"))
                                             (rule "replace_known_right" (formula "34") (term "1,0,0,1,1,0,1,1,1") (ifseqformula "28"))
                                             (rule "concrete_and_4" (formula "34") (term "0,0,1,1,0,1,1,1"))
                                             (rule "ifthenelse_false" (formula "34") (term "0,1,1,0,1,1,1"))
                                             (rule "replace_known_left" (formula "34") (term "0,1,0,1,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "1,0,1,1,0,1,1,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "0,0,0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "eqClose" (formula "32") (term "0,0,0,0,1,0,1,1,1"))
                                             (rule "concrete_and_1" (formula "32") (term "0,0,0,1,0,1,1,1"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,1,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "22"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                             (rule "applyEq" (formula "32") (term "0,1,0,1") (ifseqformula "22"))
                                             (rule "applyEq" (formula "7") (term "0,0,2,0,0,1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "6"))
                                             (rule "concrete_and_3" (formula "32") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,1") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,0,0,1"))
                                             (rule "concrete_and_2" (formula "32") (term "0,0,1"))
                                             (rule "concrete_eq_2" (formula "32") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,1,1") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,0,1,1"))
                                             (rule "leq_literals" (formula "32") (term "0,0,0,1,1"))
                                             (rule "concrete_and_2" (formula "32") (term "0,0,1,1"))
                                             (rule "concrete_not_2" (formula "32") (term "0,1,1"))
                                             (rule "concrete_eq_1" (formula "32") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (term "0,0,1") (ifseqformula "3"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,0,0,1"))
                                             (rule "concrete_and_2" (formula "32") (term "0,0,1"))
                                             (rule "concrete_not_2" (formula "32") (term "0,1"))
                                             (rule "concrete_and_1" (formula "32") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "32") (term "0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "32") (term "0,0"))
                                             (rule "concrete_or_1" (formula "32") (term "0"))
                                             (rule "concrete_and_1" (formula "32"))
                                             (rule "allRight" (formula "32") (inst "sk=i_90"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "33"))
                                             (rule "eqSymm" (formula "35") (term "0,0,0"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_geqRight" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                             (rule "times_zero_1" (formula "12") (term "0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_65"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,0"))
                                             (rule "times_zero_1" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_65"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (rule "concrete_or_1" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                             (branch " m_0_65.min = i_90 TRUE"
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "12"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                (rule "mul_literals" (formula "12") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                (rule "allLeft" (formula "18") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "6"))
                                                (rule "concrete_not_1" (formula "18") (term "1,0"))
                                                (rule "concrete_or_4" (formula "18") (term "0"))
                                                (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "18"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "18"))
                                                (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                (rule "add_literals" (formula "18") (term "1,0"))
                                                (rule "times_zero_1" (formula "18") (term "0"))
                                                (rule "leq_literals" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "allLeft" (formula "15") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "6"))
                                                (rule "concrete_not_1" (formula "15") (term "1,0"))
                                                (rule "concrete_or_4" (formula "15") (term "0"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "allLeft" (formula "13") (inst "t=m_0_65"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "6"))
                                                (rule "concrete_not_1" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "9"))
                                                (rule "allLeft" (formula "11") (inst "t=minIdx_1"))
                                                (rule "replace_known_right" (formula "11") (term "0,0,0,1") (ifseqformula "34"))
                                                (rule "ifthenelse_false" (formula "11") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1"))
                                                (rule "add_literals" (formula "11") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "0,1"))
                                                (rule "leq_literals" (formula "11") (term "1"))
                                                (rule "concrete_or_3" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "allLeft" (formula "11") (inst "t=i_90"))
                                                (rule "eqClose" (formula "11") (term "0,0,0,1"))
                                                (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                (rule "leq_literals" (formula "11") (term "0,1"))
                                                (rule "concrete_and_2" (formula "11") (term "1"))
                                                (rule "concrete_or_4" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                                (rule "leq_literals" (formula "11") (term "0,1"))
                                                (rule "concrete_and_2" (formula "11") (term "1"))
                                                (rule "concrete_or_4" (formula "11"))
                                                (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "11") (term "0"))
                                                (rule "concrete_and_2" (formula "11"))
                                                (rule "closeFalse" (formula "11"))
                                             )
                                             (branch " m_0_65.min = i_90 FALSE"
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "19") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "19") (term "1,0"))
                                                (rule "concrete_or_4" (formula "19") (term "0"))
                                                (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                (rule "concrete_or_4" (formula "16") (term "0"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "allLeft" (formula "14") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "14") (term "1,0"))
                                                (rule "concrete_or_4" (formula "14") (term "0"))
                                                (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "8"))
                                                (rule "allLeft" (formula "10") (inst "t=minIdx_1"))
                                                (rule "eqSymm" (formula "10") (term "0,0,0,1"))
                                                (rule "replace_known_right" (formula "10") (term "0,0,0,1") (ifseqformula "32"))
                                                (rule "ifthenelse_false" (formula "10") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1"))
                                                (rule "add_literals" (formula "10") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "0,1"))
                                                (rule "leq_literals" (formula "10") (term "1"))
                                                (rule "concrete_or_3" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "allLeft" (formula "10") (inst "t=m_0_65.min@(maze.Highscore)"))
                                                (rule "eqClose" (formula "10") (term "0,0,0,1"))
                                                (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "10") (term "1,0"))
                                                (rule "concrete_or_4" (formula "10") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "13"))
                                                (rule "qeq_literals" (formula "10") (term "0,0"))
                                                (rule "concrete_and_2" (formula "10") (term "0"))
                                                (rule "concrete_or_2" (formula "10"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "allLeft" (formula "12") (inst "t=i_90"))
                                                (rule "eqSymm" (formula "12") (term "0,0,0,1"))
                                                (rule "replace_known_right" (formula "12") (term "0,0,0,1") (ifseqformula "33"))
                                                (rule "ifthenelse_false" (formula "12") (term "0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1"))
                                                (rule "leq_literals" (formula "12") (term "0,1"))
                                                (rule "concrete_and_2" (formula "12") (term "1"))
                                                (rule "concrete_or_4" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "12") (term "0,0,1"))
                                                (rule "leq_literals" (formula "12") (term "0,1"))
                                                (rule "concrete_and_2" (formula "12") (term "1"))
                                                (rule "concrete_or_4" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                (rule "concrete_and_2" (formula "12"))
                                                (rule "closeFalse" (formula "12"))
                                             )
                                          )
                                          (branch " self = m_0_65 FALSE"
                                             (rule "replace_known_right" (formula "34") (term "0,0,0,0,1") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "0,0,0,1"))
                                             (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "0,1,0,0,1,1,0,1,1,1"))
                                             (rule "eqSymm" (formula "34") (term "1,0,0,1,1,0,1,1,1"))
                                             (rule "replace_known_right" (formula "34") (term "0,0,0,0,1,1") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "0,0,0,1,1"))
                                             (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,0,0,0,1,1,1") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "1,0,0,0,1,1,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                             (rule "replace_known_right" (formula "34") (term "0,1,2,0,1,1,0,1,1,1") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "34") (term "1,2,0,1,1,0,1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                             (rule "allLeft" (formula "6") (inst "t=self.min@(maze.Highscore)"))
                                             (rule "eqClose" (formula "6") (term "0,0,0,1"))
                                             (rule "ifthenelse_true" (formula "6") (term "0,0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "6") (term "0,0"))
                                             (rule "concrete_or_2" (formula "6") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                             (rule "concrete_and_2" (formula "6") (term "0"))
                                             (rule "concrete_or_2" (formula "6"))
                                             (rule "allLeft" (formula "7") (inst "t=minIdx_1"))
                                             (rule "eqSymm" (formula "7") (term "0,0,0,1"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,1") (ifseqformula "29"))
                                             (rule "ifthenelse_false" (formula "7") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1"))
                                             (rule "add_literals" (formula "7") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "0,1"))
                                             (rule "leq_literals" (formula "7") (term "1"))
                                             (rule "concrete_or_3" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "allLeft" (formula "15") (inst "t=m_0_65"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "15") (term "0"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "15") (term "0"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_65"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "14") (term "0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0"))
                                             (rule "ifthenelse_split" (formula "38") (term "0,1,1,0,1,1,1"))
                                             (branch "   self.highscores = m_0_65.highscores
& self.min = m_0_65.min TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "40") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "40") (term "0,0,0,1,0,1,1,1"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "9") (term "0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "9") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "40") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "9") (term "0,2,0,0,1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_contradEq7" (formula "40") (term "0,0,1") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,0,0,1"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,1"))
                                                (rule "concrete_and_2" (formula "40") (term "0,0,1"))
                                                (rule "concrete_eq_2" (formula "40") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "40") (term "0,0,1,1") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "40") (term "0,0,0,0,1,1"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,1,1"))
                                                (rule "concrete_and_2" (formula "40") (term "0,0,1,1"))
                                                (rule "concrete_not_2" (formula "40") (term "0,1,1"))
                                                (rule "concrete_eq_1" (formula "40") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "40") (term "0,0") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "40") (term "0,0"))
                                                (rule "concrete_and_1" (formula "40") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "11") (term "0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "allLeft" (formula "23") (inst "t=m_0_65"))
                                                (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "39"))
                                                (rule "concrete_or_2" (formula "23") (term "0,0,0"))
                                                (rule "allLeft" (formula "13") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "13") (term "1,0"))
                                                (rule "concrete_or_4" (formula "13") (term "0"))
                                                (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "40"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_1" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_65"))
                                                (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                (rule "concrete_or_4" (formula "16") (term "0"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "40"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "4"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (rule "concrete_or_1" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "21") (inst "t=m_0_65"))
                                                (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "40"))
                                                (rule "concrete_or_2" (formula "21") (term "0"))
                                                (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "21") (term "0"))
                                                (rule "concrete_or_2" (formula "21"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_commuteLeq" (formula "21"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,0"))
                                                (rule "times_zero_1" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "allLeft" (formula "9") (inst "t=minIdx_1"))
                                                (rule "eqSymm" (formula "9") (term "0,0,0,1"))
                                                (rule "replace_known_right" (formula "9") (term "0,0,0,1") (ifseqformula "35"))
                                                (rule "ifthenelse_false" (formula "9") (term "0,0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1"))
                                                (rule "add_literals" (formula "9") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "0,1"))
                                                (rule "leq_literals" (formula "9") (term "1"))
                                                (rule "concrete_or_3" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "allLeft" (formula "9") (inst "t=m_0_65.min@(maze.Highscore)"))
                                                (rule "eqClose" (formula "9") (term "0,0,0,1"))
                                                (rule "ifthenelse_true" (formula "9") (term "0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
                                                (rule "concrete_or_3" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "allLeft" (formula "23") (inst "t=self"))
                                                (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "23") (term "1"))
                                                (rule "concrete_or_4" (formula "23"))
                                                (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "41"))
                                                (rule "concrete_or_4" (formula "23"))
                                                (rule "close" (formula "38") (ifseqformula "23"))
                                             )
                                             (branch "   self.highscores = m_0_65.highscores
& self.min = m_0_65.min FALSE"
                                                (rule "cut_direct" (formula "39") (term "0,0"))
                                                (branch " CUT: m_0_65.min >= -1 TRUE"
                                                   (rule "concrete_and_1" (formula "40") (term "0"))
                                                   (rule "allLeft" (formula "23") (inst "t=m_0_65"))
                                                   (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "38"))
                                                   (rule "concrete_or_2" (formula "23") (term "0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "23") (term "0"))
                                                   (rule "concrete_or_2" (formula "23"))
                                                   (rule "notLeft" (formula "23"))
                                                   (rule "allLeft" (formula "22") (inst "t=m_0_65"))
                                                   (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "39"))
                                                   (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                                   (rule "allLeft" (formula "12") (inst "t=m_0_65"))
                                                   (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "12") (term "0"))
                                                   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "40"))
                                                   (rule "concrete_or_2" (formula "12"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "12"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (rule "concrete_or_1" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "allLeft" (formula "15") (inst "t=m_0_65"))
                                                   (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "40"))
                                                   (rule "concrete_or_2" (formula "15") (term "0"))
                                                   (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "15") (term "0"))
                                                   (rule "concrete_or_2" (formula "15"))
                                                   (rule "allLeft" (formula "21") (inst "t=m_0_65"))
                                                   (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "41"))
                                                   (rule "concrete_or_2" (formula "21") (term "0"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "21") (term "0"))
                                                   (rule "concrete_or_2" (formula "21"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21"))
                                                   (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "0"))
                                                   (rule "qeq_literals" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "cut_direct" (formula "42") (term "0"))
                                                   (branch " CUT: self.highscores = m_0_65.highscores TRUE"
                                                      (rule "concrete_and_1" (formula "43"))
                                                      (rule "replace_known_left" (formula "44") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                                      (rule "concrete_and_1" (formula "44") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "9") (term "0,0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "19") (term "1") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0,0,1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                      (rule "mul_literals" (formula "17") (term "0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "4"))
                                                      (rule "leq_literals" (formula "17") (term "0"))
                                                      (rule "concrete_or_1" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "cut_direct" (formula "42") (term "0"))
                                                      (branch " CUT: m_0_65.size >= 1 + m_0_65.min TRUE"
                                                         (rule "concrete_and_1" (formula "43"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "add_zero_left" (formula "4") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                         (rule "concrete_or_1" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "andRight" (formula "44"))
                                                         (branch " Case 1"
                                                            (rule "equiv_right" (formula "44"))
                                                            (branch " Case 1"
                                                               (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                               (rule "add_literals" (formula "3") (term "1"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEq" (formula "42") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "42") (term "1,0,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0"))
                                                               (rule "concrete_and_2" (formula "42"))
                                                               (rule "false_right" (formula "42"))
                                                               (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "42"))
                                                               (rule "add_zero_right" (formula "18") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "18"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0"))
                                                               (rule "concrete_and_2" (formula "42"))
                                                               (rule "false_right" (formula "42"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                               (rule "concrete_or_1" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "allLeft" (formula "23") (inst "t=self"))
                                                               (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "41"))
                                                               (rule "concrete_or_4" (formula "23") (term "0"))
                                                               (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "38"))
                                                               (rule "concrete_or_2" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "close" (formula "34") (ifseqformula "2"))
                                                            )
                                                            (branch " Case 2"
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "44"))
                                                               (rule "add_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "3"))
                                                               (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "qeq_literals" (formula "44") (term "0"))
                                                               (rule "concrete_and_2" (formula "44"))
                                                               (rule "false_right" (formula "44"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (rule "concrete_and_2" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                         (branch " Case 2"
                                                            (rule "equiv_right" (formula "44"))
                                                            (branch " Case 1"
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "allRight" (formula "45") (inst "sk=i_73"))
                                                               (rule "orRight" (formula "45"))
                                                               (rule "orRight" (formula "45"))
                                                               (rule "orRight" (formula "46"))
                                                               (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "45"))
                                                               (rule "inEqSimp_leqRight" (formula "46"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "47"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "39"))
                                                               (rule "add_literals" (formula "7") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "7"))
                                                               (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                               (rule "add_literals" (formula "39") (term "0,0"))
                                                               (rule "leq_literals" (formula "39") (term "0"))
                                                               (rule "concrete_and_2" (formula "39"))
                                                               (rule "false_right" (formula "39"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                               (rule "times_zero_1" (formula "8") (term "0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1"))
                                                               (rule "allLeft" (formula "29") (inst "t=self"))
                                                               (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "47"))
                                                               (rule "concrete_or_4" (formula "29") (term "0"))
                                                               (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                                                               (rule "concrete_or_2" (formula "29"))
                                                               (rule "notLeft" (formula "29"))
                                                               (rule "close" (formula "40") (ifseqformula "7"))
                                                            )
                                                            (branch " Case 2"
                                                               (rule "notRight" (formula "45"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "43") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "13"))
                                                               (rule "mul_literals" (formula "43") (term "1,0,0"))
                                                               (rule "add_zero_left" (formula "43") (term "0,0"))
                                                               (rule "leq_literals" (formula "43") (term "0"))
                                                               (rule "concrete_and_2" (formula "43"))
                                                               (rule "false_right" (formula "43"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "6"))
                                                               (rule "leq_literals" (formula "3") (term "0"))
                                                               (rule "concrete_or_1" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                                               (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                                               (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                               (rule "allLeft" (formula "24") (inst "t=self"))
                                                               (rule "replace_known_right" (formula "24") (term "1,0") (ifseqformula "42"))
                                                               (rule "concrete_or_4" (formula "24") (term "0"))
                                                               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "39"))
                                                               (rule "concrete_or_2" (formula "24"))
                                                               (rule "notLeft" (formula "24"))
                                                               (rule "close" (formula "35") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                      (branch " CUT: m_0_65.size >= 1 + m_0_65.min FALSE"
                                                         (rule "concrete_and_2" (formula "43"))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "18") (term "0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "18"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (rule "concrete_or_1" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "allLeft" (formula "24") (inst "t=self"))
                                                         (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "39"))
                                                         (rule "concrete_or_2" (formula "24") (term "0"))
                                                         (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "42"))
                                                         (rule "concrete_or_2" (formula "24"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "close" (formula "35") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch " CUT: self.highscores = m_0_65.highscores FALSE"
                                                      (rule "concrete_and_2" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "replace_known_right" (formula "43") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "42"))
                                                      (rule "concrete_and_2" (formula "43") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "ifthenelse_false" (formula "43") (term "0,0,1,0,1,1,1"))
                                                      (rule "cut_direct" (formula "43") (term "0"))
                                                      (branch " CUT: m_0_65.size >= 1 + m_0_65.min TRUE"
                                                         (rule "concrete_and_1" (formula "44"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (rule "concrete_or_1" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "andRight" (formula "45"))
                                                         (branch " Case 1"
                                                            (rule "equiv_right" (formula "45"))
                                                            (branch " Case 1"
                                                               (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                               (rule "add_literals" (formula "3") (term "1"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "mul_literals" (formula "2") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "44"))
                                                               (rule "add_zero_right" (formula "18") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "18"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0"))
                                                               (rule "leq_literals" (formula "44") (term "0"))
                                                               (rule "concrete_and_2" (formula "44"))
                                                               (rule "false_right" (formula "44"))
                                                               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "2") (term "0"))
                                                               (rule "concrete_or_1" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                               (rule "mul_literals" (formula "17") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "1"))
                                                               (rule "allLeft" (formula "26") (inst "t=self"))
                                                               (rule "exLeft" (formula "26") (inst "sk=i_74"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "andLeft" (formula "26"))
                                                               (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "26") (term "0"))
                                                               (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "26") (term "0"))
                                                               (rule "concrete_or_2" (formula "26"))
                                                               (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "27") (term "0"))
                                                               (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "27"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                               (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "33") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "33") (term "0"))
                                                               (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                               (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "32") (term "0"))
                                                               (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                                               (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                               (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                                               (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                               (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                               (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "29") (term "0"))
                                                               (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                               (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "40"))
                                                               (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "28") (term "0"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "31") (term "0"))
                                                               (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "46"))
                                                               (rule "concrete_or_2" (formula "30") (term "0"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "36"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "32") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "32") (term "0,0"))
                                                               (rule "concrete_not_2" (formula "32") (term "0"))
                                                               (rule "concrete_or_1" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "inEqSimp_contradEq7" (formula "28") (term "0,1") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                                               (rule "leq_literals" (formula "28") (term "0,0,1"))
                                                               (rule "concrete_and_2" (formula "28") (term "0,1"))
                                                               (rule "concrete_not_2" (formula "28") (term "1"))
                                                               (rule "concrete_or_3" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "10"))
                                                               (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "30") (term "0,0"))
                                                               (rule "concrete_not_2" (formula "30") (term "0"))
                                                               (rule "concrete_or_1" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "10"))
                                                               (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "29") (term "0,0"))
                                                               (rule "concrete_not_2" (formula "29") (term "0"))
                                                               (rule "concrete_or_1" (formula "29"))
                                                               (rule "true_left" (formula "29"))
                                                               (rule "inEqSimp_contradEq7" (formula "28") (term "0,1") (ifseqformula "3"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,0,1"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                                               (rule "leq_literals" (formula "28") (term "0,0,1"))
                                                               (rule "concrete_and_2" (formula "28") (term "0,1"))
                                                               (rule "concrete_not_2" (formula "28") (term "1"))
                                                               (rule "concrete_or_3" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "10"))
                                                               (rule "leq_literals" (formula "26") (term "0"))
                                                               (rule "concrete_or_1" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "cut_direct" (formula "26") (term "0,1"))
                                                               (branch " CUT: self.min = i_74 TRUE"
                                                                  (rule "concrete_not_1" (formula "27") (term "1"))
                                                                  (rule "concrete_or_4" (formula "27"))
                                                                  (rule "notLeft" (formula "27"))
                                                                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                                                  (rule "eqSymm" (formula "37"))
                                                                  (rule "applyEq" (formula "8") (term "1,0,0,0,1,0") (ifseqformula "26"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "10"))
                                                                  (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0"))
                                                                  (rule "leq_literals" (formula "35") (term "0"))
                                                                  (rule "concrete_and_2" (formula "35"))
                                                                  (rule "false_right" (formula "35"))
                                                                  (rule "allLeft" (formula "27") (inst "t=m_0_65"))
                                                                  (rule "exLeft" (formula "27") (inst "sk=i_106"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "27") (term "0"))
                                                                  (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "27"))
                                                                  (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "28") (term "0"))
                                                                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "28"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "34") (term "0"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "34") (term "0"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "34") (term "0"))
                                                                  (rule "concrete_or_2" (formula "34"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "33") (term "0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "32") (term "0"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "31") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "1"))
                                                                  (rule "concrete_or_3" (formula "31") (term "0"))
                                                                  (rule "concrete_or_1" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "48"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "30") (term "1"))
                                                                  (rule "concrete_or_4" (formula "30"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "29") (term "0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "32") (term "0"))
                                                                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "48"))
                                                                  (rule "concrete_or_2" (formula "32"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "48"))
                                                                  (rule "concrete_or_2" (formula "31") (term "0"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "31") (term "0"))
                                                                  (rule "concrete_or_2" (formula "31"))
                                                                  (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "48"))
                                                                  (rule "concrete_or_4" (formula "29") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "19"))
                                                                  (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                  (rule "times_zero_2" (formula "31") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "31") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                  (rule "times_zero_2" (formula "27") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "27") (term "0"))
                                                                  (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "28") (term "0,1"))
                                                                  (rule "eq_or" (formula "28"))
                                                                  (rule "notLeft" (formula "28"))
                                                                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
                                                                  (rule "qeq_literals" (formula "17"))
                                                                  (rule "closeFalse" (formula "17"))
                                                               )
                                                               (branch " CUT: self.min = i_74 FALSE"
                                                                  (rule "concrete_not_2" (formula "26") (term "1"))
                                                                  (rule "concrete_or_3" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "allLeft" (formula "26") (inst "t=m_0_65"))
                                                                  (rule "exLeft" (formula "26") (inst "sk=i_101"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "andLeft" (formula "26"))
                                                                  (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "27") (term "0"))
                                                                  (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "27"))
                                                                  (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "26") (term "0"))
                                                                  (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "26") (term "0"))
                                                                  (rule "concrete_or_2" (formula "26"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "33") (term "0"))
                                                                  (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "33") (term "0"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "33") (term "0"))
                                                                  (rule "concrete_or_2" (formula "33"))
                                                                  (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "32") (term "0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "32") (term "0"))
                                                                  (rule "concrete_or_2" (formula "32"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "49"))
                                                                  (rule "concrete_or_2" (formula "31") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "1"))
                                                                  (rule "concrete_or_3" (formula "30") (term "0"))
                                                                  (rule "concrete_or_1" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "48"))
                                                                  (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "29") (term "0"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "1"))
                                                                  (rule "concrete_not_1" (formula "29") (term "1"))
                                                                  (rule "concrete_or_4" (formula "29"))
                                                                  (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "48"))
                                                                  (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "28") (term "0"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "30") (term "0"))
                                                                  (rule "concrete_or_2" (formula "30"))
                                                                  (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "28") (term "0,1"))
                                                                  (rule "eq_or" (formula "28"))
                                                                  (rule "notLeft" (formula "28"))
                                                                  (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                                                  (rule "add_literals" (formula "26") (term "1"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "19"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                                                                  (rule "qeq_literals" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                                                                  (rule "qeq_literals" (formula "17"))
                                                                  (rule "closeFalse" (formula "17"))
                                                               )
                                                            )
                                                            (branch " Case 2"
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "times_zero_2" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "21"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1"))
                                                               (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "45"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "4"))
                                                               (rule "mul_literals" (formula "45") (term "1,0,0"))
                                                               (rule "add_zero_left" (formula "45") (term "0,0"))
                                                               (rule "leq_literals" (formula "45") (term "0"))
                                                               (rule "concrete_and_2" (formula "45"))
                                                               (rule "false_right" (formula "45"))
                                                               (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "15"))
                                                               (rule "leq_literals" (formula "21") (term "0"))
                                                               (rule "concrete_or_1" (formula "21"))
                                                               (rule "true_left" (formula "21"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "3") (term "0"))
                                                               (rule "concrete_and_2" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                         (branch " Case 2"
                                                            (rule "equiv_right" (formula "45"))
                                                            (branch " Case 1"
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "allRight" (formula "46") (inst "sk=i_75"))
                                                               (rule "orRight" (formula "46"))
                                                               (rule "orRight" (formula "46"))
                                                               (rule "orRight" (formula "47"))
                                                               (rule "eqSymm" (formula "46"))
                                                               (rule "inEqSimp_geqRight" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_geqRight" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "49"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "39"))
                                                               (rule "add_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "6"))
                                                               (rule "add_zero_left" (formula "39") (term "0,0"))
                                                               (rule "mul_literals" (formula "39") (term "0,0"))
                                                               (rule "leq_literals" (formula "39") (term "0"))
                                                               (rule "concrete_and_2" (formula "39"))
                                                               (rule "false_right" (formula "39"))
                                                               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                               (rule "times_zero_1" (formula "6") (term "0,0"))
                                                               (rule "add_zero_left" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "allLeft" (formula "28") (inst "t=m_0_65"))
                                                               (rule "replace_known_right" (formula "28") (term "1,0,0,0,0") (ifseqformula "47"))
                                                               (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "28") (term "0,1,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "28") (term "1,0,0,0"))
                                                               (rule "concrete_or_4" (formula "28") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                                               (rule "allLeft" (formula "34") (inst "t=m_0_65"))
                                                               (rule "eqSymm" (formula "34") (term "1,0,0,0"))
                                                               (rule "replace_known_right" (formula "34") (term "1,0,0,0,0,0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_4" (formula "34") (term "0,0,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "34") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                                                               (rule "concrete_not_1" (formula "34") (term "1,0,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "34") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                                                               (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0,0,0") (ifseqformula "7"))
                                                               (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,0"))
                                                               (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "34") (term "1,0,0,0,0"))
                                                               (rule "concrete_or_4" (formula "34") (term "0,0,0,0"))
                                                               (rule "allLeft" (formula "34") (inst "t=i_75"))
                                                               (rule "eqSymm" (formula "34") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "52"))
                                                               (rule "concrete_or_4" (formula "34") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                               (rule "concrete_and_2" (formula "34") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "34") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "34") (term "0,1"))
                                                               (rule "concrete_and_2" (formula "34") (term "1"))
                                                               (rule "concrete_or_4" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0"))
                                                               (rule "add_zero_right" (formula "34") (term "0"))
                                                               (rule "leq_literals" (formula "34"))
                                                               (rule "closeFalse" (formula "34"))
                                                            )
                                                            (branch " Case 2"
                                                               (rule "notRight" (formula "46"))
                                                               (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                               (rule "add_literals" (formula "4") (term "1"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "3"))
                                                               (rule "mul_literals" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "3") (term "0"))
                                                               (rule "concrete_or_1" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                                               (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                                               (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                                               (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                               (rule "only_created_object_are_referenced_non_null" (formula "35") (term "0") (ifseqformula "3") (ifseqformula "12") (ifseqformula "35"))
                                                               (rule "array_length_non_negative_3" (formula "17") (term "0") (ifseqformula "13") (ifseqformula "1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                                               (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "14"))
                                                               (rule "leq_literals" (formula "17") (term "0"))
                                                               (rule "concrete_or_1" (formula "17"))
                                                               (rule "true_left" (formula "17"))
                                                               (rule "allLeft" (formula "28") (inst "t=self"))
                                                               (rule "exLeft" (formula "28") (inst "sk=i_76"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "andLeft" (formula "28"))
                                                               (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "28") (term "0"))
                                                               (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "28"))
                                                               (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "29") (term "0"))
                                                               (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "29") (term "0"))
                                                               (rule "concrete_or_2" (formula "29"))
                                                               (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                               (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "35") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "35") (term "0"))
                                                               (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                               (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "34") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "34") (term "0"))
                                                               (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                                               (rule "concrete_or_4" (formula "33") (term "0,0"))
                                                               (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                               (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "31") (term "0"))
                                                               (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                               (rule "concrete_or_4" (formula "30") (term "0"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "48"))
                                                               (rule "concrete_or_2" (formula "33") (term "0"))
                                                               (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "42"))
                                                               (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "32") (term "0"))
                                                               (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "48"))
                                                               (rule "concrete_or_4" (formula "30") (term "0"))
                                                               (rule "replace_known_right" (formula "31") (term "1,0") (ifseqformula "48"))
                                                               (rule "concrete_or_4" (formula "31") (term "0"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "38"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                               (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "38"))
                                                               (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "38"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "31") (term "0") (ifseqformula "12"))
                                                               (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "31") (term "0,0"))
                                                               (rule "concrete_and_2" (formula "31") (term "0"))
                                                               (rule "concrete_or_2" (formula "31"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "42"))
                                                               (rule "concrete_or_4" (formula "31"))
                                                               (rule "notLeft" (formula "31"))
                                                               (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "41"))
                                                               (rule "concrete_not_2" (formula "30") (term "1"))
                                                               (rule "concrete_or_3" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "40"))
                                                               (rule "concrete_not_2" (formula "31") (term "0"))
                                                               (rule "concrete_or_1" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "39"))
                                                               (rule "concrete_not_2" (formula "30") (term "0"))
                                                               (rule "concrete_or_1" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "12"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0"))
                                                               (rule "leq_literals" (formula "38") (term "0"))
                                                               (rule "concrete_and_2" (formula "38"))
                                                               (rule "false_right" (formula "38"))
                                                               (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "5"))
                                                               (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0"))
                                                               (rule "leq_literals" (formula "38") (term "0"))
                                                               (rule "concrete_and_2" (formula "38"))
                                                               (rule "false_right" (formula "38"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "12"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                               (rule "concrete_or_1" (formula "28"))
                                                               (rule "true_left" (formula "28"))
                                                               (rule "cut_direct" (formula "28") (term "0,1"))
                                                               (branch " CUT: self.min = i_76 TRUE"
                                                                  (rule "concrete_not_1" (formula "29") (term "1"))
                                                                  (rule "concrete_or_4" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "28"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "28"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "28"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "28"))
                                                                  (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "28"))
                                                                  (rule "applyEq" (formula "10") (term "1,0,0,0,1,0") (ifseqformula "28"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "12"))
                                                                  (rule "mul_literals" (formula "37") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                  (rule "concrete_and_2" (formula "37"))
                                                                  (rule "false_right" (formula "37"))
                                                                  (rule "allLeft" (formula "29") (inst "t=m_0_65"))
                                                                  (rule "exLeft" (formula "29") (inst "sk=i_95"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "andLeft" (formula "29"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0"))
                                                                  (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "30"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "29") (term "0"))
                                                                  (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "29"))
                                                                  (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "36") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "36") (term "0"))
                                                                  (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "36") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "36") (term "0"))
                                                                  (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "36"))
                                                                  (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "35") (term "0"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "34") (term "0"))
                                                                  (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "32") (term "0"))
                                                                  (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "2"))
                                                                  (rule "concrete_or_3" (formula "33") (term "0"))
                                                                  (rule "concrete_or_1" (formula "33"))
                                                                  (rule "true_left" (formula "33"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1"))
                                                                  (rule "concrete_or_4" (formula "32"))
                                                                  (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "50"))
                                                                  (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "31") (term "0"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "50"))
                                                                  (rule "concrete_or_2" (formula "34") (term "0"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "34") (term "0"))
                                                                  (rule "concrete_or_2" (formula "34"))
                                                                  (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "50"))
                                                                  (rule "concrete_or_4" (formula "32"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "33") (term "0"))
                                                                  (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "50"))
                                                                  (rule "concrete_or_2" (formula "33"))
                                                                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "33"))
                                                                  (rule "qeq_literals" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "applyEq" (formula "33") (term "0") (ifseqformula "32"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33"))
                                                                  (rule "times_zero_2" (formula "33") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "33") (term "0"))
                                                                  (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "2"))
                                                                  (rule "add_literals" (formula "29") (term "1"))
                                                                  (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "29") (term "0,1"))
                                                                  (rule "eq_or" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                                  (rule "qeq_literals" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                  (rule "mul_literals" (formula "30") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "28"))
                                                                  (rule "mul_literals" (formula "40") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0"))
                                                                  (rule "leq_literals" (formula "40") (term "0"))
                                                                  (rule "concrete_and_2" (formula "40"))
                                                                  (rule "false_right" (formula "40"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                                                                  (rule "qeq_literals" (formula "28") (term "0"))
                                                                  (rule "concrete_and_2" (formula "28"))
                                                                  (rule "closeFalse" (formula "28"))
                                                               )
                                                               (branch " CUT: self.min = i_76 FALSE"
                                                                  (rule "concrete_not_2" (formula "28") (term "1"))
                                                                  (rule "concrete_or_3" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "allLeft" (formula "28") (inst "t=m_0_65"))
                                                                  (rule "exLeft" (formula "28") (inst "sk=i_96"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "andLeft" (formula "28"))
                                                                  (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "28") (term "0"))
                                                                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "28"))
                                                                  (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "29") (term "0"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "29") (term "0"))
                                                                  (rule "concrete_or_2" (formula "29"))
                                                                  (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "35") (term "0,0"))
                                                                  (rule "concrete_or_2" (formula "35") (term "0"))
                                                                  (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "35") (term "0"))
                                                                  (rule "concrete_or_2" (formula "35"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "51"))
                                                                  (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "34") (term "0"))
                                                                  (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "34") (term "0"))
                                                                  (rule "concrete_or_2" (formula "34"))
                                                                  (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "33") (term "0"))
                                                                  (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "2"))
                                                                  (rule "concrete_or_3" (formula "32") (term "0"))
                                                                  (rule "concrete_or_1" (formula "32"))
                                                                  (rule "true_left" (formula "32"))
                                                                  (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "50"))
                                                                  (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "31") (term "0"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "2"))
                                                                  (rule "concrete_not_1" (formula "31") (term "1"))
                                                                  (rule "concrete_or_4" (formula "31"))
                                                                  (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "50"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "30") (term "0"))
                                                                  (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                                  (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                                  (rule "concrete_or_4" (formula "32") (term "0"))
                                                                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "50"))
                                                                  (rule "concrete_or_2" (formula "32"))
                                                                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "32"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "32"))
                                                                  (rule "qeq_literals" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "2"))
                                                                  (rule "add_literals" (formula "28") (term "1"))
                                                                  (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "29") (term "0,1"))
                                                                  (rule "eq_or" (formula "29"))
                                                                  (rule "notLeft" (formula "29"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                                  (rule "qeq_literals" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                  (rule "mul_literals" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                  (rule "mul_literals" (formula "29") (term "1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "27"))
                                                                  (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0,0"))
                                                                  (rule "leq_literals" (formula "39") (term "0"))
                                                                  (rule "concrete_and_2" (formula "39"))
                                                                  (rule "false_right" (formula "39"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "29"))
                                                                  (rule "qeq_literals" (formula "27") (term "0"))
                                                                  (rule "concrete_and_2" (formula "27"))
                                                                  (rule "closeFalse" (formula "27"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch " CUT: m_0_65.size >= 1 + m_0_65.min FALSE"
                                                         (rule "concrete_and_2" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "inEqSimp_geqRight" (formula "43"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "18") (term "0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "allLeft" (formula "27") (inst "t=m_0_65"))
                                                         (rule "exLeft" (formula "27") (inst "sk=i_77"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "27") (term "0"))
                                                         (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "27"))
                                                         (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "28") (term "0"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "28") (term "0"))
                                                         (rule "concrete_or_2" (formula "28"))
                                                         (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "34") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "34") (term "0"))
                                                         (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                         (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "33") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "33") (term "0"))
                                                         (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "32") (term "0,0"))
                                                         (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_2" (formula "31") (term "0,0"))
                                                         (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "30") (term "0"))
                                                         (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "49"))
                                                         (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                         (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "29") (term "0"))
                                                         (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "32") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "32") (term "0"))
                                                         (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "concrete_not_1" (formula "31") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "31") (term "0"))
                                                         (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "49"))
                                                         (rule "concrete_or_4" (formula "30") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "31") (term "0") (ifseqformula "17"))
                                                         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "31") (term "0"))
                                                         (rule "concrete_or_2" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "42"))
                                                         (rule "concrete_or_4" (formula "31"))
                                                         (rule "notLeft" (formula "31"))
                                                         (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "41"))
                                                         (rule "concrete_not_2" (formula "30") (term "1"))
                                                         (rule "concrete_or_3" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "40"))
                                                         (rule "concrete_not_2" (formula "31") (term "0"))
                                                         (rule "concrete_or_1" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "39"))
                                                         (rule "concrete_not_2" (formula "30") (term "0"))
                                                         (rule "concrete_or_1" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "17"))
                                                         (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                         (rule "add_literals" (formula "38") (term "0,0"))
                                                         (rule "leq_literals" (formula "38") (term "0"))
                                                         (rule "concrete_and_2" (formula "38"))
                                                         (rule "false_right" (formula "38"))
                                                         (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "38"))
                                                         (rule "add_zero_right" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "18"))
                                                         (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,0"))
                                                         (rule "leq_literals" (formula "38") (term "0"))
                                                         (rule "concrete_and_2" (formula "38"))
                                                         (rule "false_right" (formula "38"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch " CUT: m_0_65.min >= -1 FALSE"
                                                   (rule "concrete_and_2" (formula "40") (term "0"))
                                                   (rule "concrete_and_2" (formula "40"))
                                                   (rule "false_right" (formula "40"))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "24") (inst "t=m_0_65"))
                                                   (rule "exLeft" (formula "24") (inst "sk=i_78"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "25") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "25") (term "0"))
                                                   (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "25"))
                                                   (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "24") (term "0"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "24") (term "0"))
                                                   (rule "concrete_or_2" (formula "24"))
                                                   (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "31") (term "0,0"))
                                                   (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "31") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "31") (term "0"))
                                                   (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                   (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "30") (term "0"))
                                                   (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "29") (term "0,0"))
                                                   (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                   (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_4" (formula "27") (term "0,0"))
                                                   (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_4" (formula "26") (term "0,0"))
                                                   (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "26") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "26") (term "0"))
                                                   (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "27") (term "0"))
                                                   (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_2" (formula "28") (term "0"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "concrete_not_1" (formula "29") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "29") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "31") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "31") (term "0,0"))
                                                   (rule "concrete_not_2" (formula "31") (term "0"))
                                                   (rule "concrete_or_1" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "inEqSimp_contradEq3" (formula "27") (term "0,1") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0,1"))
                                                   (rule "concrete_and_2" (formula "27") (term "0,1"))
                                                   (rule "concrete_not_2" (formula "27") (term "1"))
                                                   (rule "concrete_or_3" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "inEqSimp_contradEq3" (formula "29") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "29") (term "0,0"))
                                                   (rule "concrete_not_2" (formula "29") (term "0"))
                                                   (rule "concrete_or_1" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_contradEq3" (formula "28") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "28") (term "0,0"))
                                                   (rule "concrete_not_2" (formula "28") (term "0"))
                                                   (rule "concrete_or_1" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "27") (term "0"))
                                                   (rule "concrete_or_2" (formula "27"))
                                                   (rule "notLeft" (formula "27"))
                                                   (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "35"))
                                                   (rule "add_zero_right" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "16"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                   (rule "concrete_and_2" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "24"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_and_2" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "inEqSimp_geqRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "applyEqRigid" (formula "7") (term "1,0,1,1,0") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "27") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "32") (term "1,2") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                    (rule "concrete_and_2" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEqRigid" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                    (rule "add_zero_right" (formula "31") (term "1,0"))
                                    (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "9"))
                                    (rule "ifthenelse_true_for" (formula "31"))
                                    (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "3") (term "0,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "1,0,0"))
                                    (rule "concrete_or_3" (formula "3") (term "0,0"))
                                    (rule "concrete_or_1" (formula "3") (term "0"))
                                    (rule "all_unused" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "emptyModality" (formula "28") (term "5"))
                                    (builtin "Update Simplification" (formula "28"))
                                    (rule "boolean_equal" (formula "28") (term "0,0"))
                                    (rule "concrete_not_1" (formula "28") (term "0"))
                                    (rule "concrete_impl_2" (formula "28"))
                                    (rule "closeTrue" (formula "28"))
                                 )
                              )
                           )
                        )
                        (branch " Null Reference (highscores = null)"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close" (formula "23") (ifseqformula "1"))
                        )
                        (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockThrow" (formula "27") (term "3"))
                           (builtin "Update Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                           (rule "concrete_and_2" (formula "1") (term "1"))
                           (rule "concrete_or_4" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch " Array Store Exception (incompatible dynamic element type of highscores and _rec)"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockThrow" (formula "28") (term "3"))
                           (builtin "Update Simplification" (formula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "array_store_static_analyse" (formula "22") (ifseqformula "23"))
                           (rule "closeTrue" (formula "22"))
                        )
                     )
                     (branch " Null Reference (highscores = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "23") (ifseqformula "1"))
                     )
                     (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "blockThrow" (formula "27") (term "2"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (rule "concrete_and_2" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch " if b_5 false"
                     (rule "false_to_not_true" (formula "1") (term "3"))
                     (builtin "Update Simplification" (formula "27"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_equal" (formula "1") (term "0"))
                     (rule "concrete_not_1" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " Null Reference (v_Record_3 = null)"
                  (builtin "Update Simplification" (formula "25"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "19"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                  (rule "mul_literals" (formula "19") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                  (rule "allLeft" (formula "12") (inst "t=self"))
                  (rule "replace_known_right" (formula "12") (term "1,0,0,0,0") (ifseqformula "25"))
                  (rule "concrete_or_4" (formula "12") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "12") (term "0,1,0,0,0") (ifseqformula "21"))
                  (rule "concrete_not_1" (formula "12") (term "1,0,0,0"))
                  (rule "concrete_or_4" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
                  (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "18"))
                  (rule "array_length_non_negative_3" (formula "7") (term "0") (ifseqformula "4") (ifseqformula "19") (ifseqformula "23"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "allLeft" (formula "12") (inst "t=self.min@(maze.Highscore)"))
                  (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "1"))
                  (rule "concrete_not_1" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "leq_literals" (formula "12") (term "0,1"))
                  (rule "concrete_and_2" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch " Null Reference (highscores = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close" (formula "20") (ifseqformula "1"))
            )
            (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
               (builtin "Update Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "cut_direct" (formula "1") (term "0"))
               (branch " CUT: self.min >= self.capacity TRUE"
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "array_length_non_negative_3" (formula "5") (term "0") (ifseqformula "2") (ifseqformula "16") (ifseqformula "20"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "throwUnfold" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_16"))
                  (rule "instanceCreationAssignment" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_17"))
                  (rule "variableDeclarationAssign" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_17"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_18"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_18"))
                  (rule "methodBodyExpand" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "__NEW___4"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_19"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_19"))
                  (rule "allocateInstance" (formula "23") (term "3") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "blockEmpty" (formula "23") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "7"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "polySimp_addComm0" (formula "23") (term "4"))
                  (rule "methodBodyExpand" (formula "23") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "7"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "9"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "methodCallWithinClass" (formula "23") (term "11"))
                  (rule "methodBodyExpand" (formula "23") (term "11"))
                  (rule "methodCallSuper" (formula "23") (term "11"))
                  (rule "nextToCreate_non_negative" (formula "23") (term "0,7") (ifseqformula "2"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallEmpty" (formula "24") (term "11"))
                  (rule "blockEmpty" (formula "24") (term "11"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "11"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "13"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "methodCallReturnIgnoreResult" (formula "24") (term "15"))
                  (rule "methodCallReturn" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_write_attribute_primitive" (formula "24") (term "15"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_17 != null)"
                     (builtin "Update Simplification" (formula "25"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "methodCallParamThrow" (formula "24") (term "15"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "tryCatchThrow" (formula "24") (term "13"))
                     (rule "ifElseUnfold" (formula "24") (term "13") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "24") (term "13") (newnames "b_13"))
                     (rule "equality_comparison_new" (formula "24") (term "13"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24") (term "0,0"))
                     (rule "concrete_not_2" (formula "24") (term "0"))
                     (rule "ifthenelse_true_for" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "13"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "ifElseSplit" (formula "24"))
                     (branch " if b_13 true"
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_13 false"
                        (rule "false_to_not_true" (formula "1") (term "14"))
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "24") (term "13"))
                        (rule "ifElseSplit" (formula "24"))
                        (branch " if v_ArrayIndexOutOfBoundsException_16 instanceof  java.lang.Throwable true"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "repository_object_non_null" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "elim_double_block" (formula "25") (term "13"))
                           (rule "variableDeclaration" (formula "25") (term "13") (newnames "e_5"))
                           (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                           (builtin "Update Simplification" (formula "25"))
                           (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                           (builtin "Update Simplification" (formula "25"))
                           (rule "instanceof_static_type" (formula "1") (term "0"))
                           (rule "boolean_equal" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "emptyModality" (formula "24") (term "11"))
                           (builtin "Update Simplification" (formula "24"))
                           (rule "andRight" (formula "24"))
                           (branch " Case 1"
                              (rule "andRight" (formula "24"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "24"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "24"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "24"))
                                       (branch " Case 1"
                                          (rule "andRight" (formula "24"))
                                          (branch " Case 1"
                                             (rule "allRight" (formula "24") (inst "sk=m_0_54"))
                                             (rule "orRight" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "cut_direct" (formula "26") (term "0"))
                                             (branch " CUT: m_0_54.capacity >= 1 TRUE"
                                                (rule "concrete_and_1" (formula "27"))
                                                (rule "allLeft" (formula "15") (inst "t=m_0_54"))
                                                (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "15") (term "1,0"))
                                                (rule "concrete_or_4" (formula "15") (term "0"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_54"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "inEqSimp_strengthen0" (formula "12") (ifseqformula "29"))
                                                (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "12"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0"))
                                                (rule "qeq_literals" (formula "29") (term "0"))
                                                (rule "concrete_and_2" (formula "29"))
                                                (rule "false_right" (formula "29"))
                                                (rule "allLeft" (formula "11") (inst "t=m_0_54"))
                                                (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "11") (term "1,0"))
                                                (rule "concrete_or_4" (formula "11") (term "0"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "allLeft" (formula "9") (inst "t=m_0_54"))
                                                (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "9") (term "0"))
                                                (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0"))
                                                (rule "qeq_literals" (formula "14"))
                                                (rule "closeFalse" (formula "14"))
                                             )
                                             (branch " CUT: m_0_54.capacity >= 1 FALSE"
                                                (rule "concrete_and_2" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "inEqSimp_geqRight" (formula "26"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_54"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "12") (term "0"))
                                                (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_54"))
                                                (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "16") (term "1,0"))
                                                (rule "concrete_or_4" (formula "16") (term "0"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "28"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "9") (inst "t=m_0_54"))
                                                (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "9") (term "0"))
                                                (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "1,0"))
                                                (rule "times_zero_1" (formula "13") (term "0"))
                                                (rule "qeq_literals" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "allLeft" (formula "7") (inst "t=m_0_54"))
                                                (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "7") (term "0"))
                                                (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "7") (term "0"))
                                                (rule "concrete_or_2" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_and_2" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "allRight" (formula "24") (inst "sk=m_0_55"))
                                             (rule "orRight" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "cut_direct" (formula "26") (term "0"))
                                             (branch " CUT: m_0_55.size <= m_0_55.capacity TRUE"
                                                (rule "concrete_and_1" (formula "27"))
                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "allLeft" (formula "13") (inst "t=m_0_55"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "allLeft" (formula "17") (inst "t=m_0_55"))
                                                (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "17") (term "0"))
                                                (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "17") (term "0"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "allLeft" (formula "10") (inst "t=m_0_55"))
                                                (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "10") (term "1,0"))
                                                (rule "concrete_or_4" (formula "10") (term "0"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "10"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "1,0"))
                                                (rule "times_zero_1" (formula "14") (term "0"))
                                                (rule "qeq_literals" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_55"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                (rule "concrete_and_2" (formula "12"))
                                                (rule "closeFalse" (formula "12"))
                                             )
                                             (branch " CUT: m_0_55.size <= m_0_55.capacity FALSE"
                                                (rule "concrete_and_2" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_55"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_55"))
                                                (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "28"))
                                                (rule "concrete_or_2" (formula "16") (term "0"))
                                                (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "16") (term "0"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "9") (inst "t=m_0_55"))
                                                (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "9") (term "0"))
                                                (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "1,0"))
                                                (rule "times_zero_1" (formula "13") (term "0"))
                                                (rule "qeq_literals" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_55"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0"))
                                                (rule "add_literals" (formula "12") (term "0"))
                                                (rule "leq_literals" (formula "12"))
                                                (rule "closeFalse" (formula "12"))
                                             )
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "24") (inst "sk=m_0_56"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "inEqSimp_leqRight" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "allLeft" (formula "15") (inst "t=m_0_56"))
                                          (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "15") (term "1,0"))
                                          (rule "concrete_or_4" (formula "15") (term "0"))
                                          (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "allLeft" (formula "12") (inst "t=m_0_56"))
                                          (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "12") (term "0"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "12") (term "0"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "12"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "24") (inst "sk=m_0_57"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "notRight" (formula "24"))
                                       (rule "allRight" (formula "26") (inst "sk=i_67"))
                                       (rule "orRight" (formula "26"))
                                       (rule "orRight" (formula "26"))
                                       (rule "notRight" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "28"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_57"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_57"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_57"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "16") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "16") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "16") (term "1,0,0,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_57"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_57"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "allLeft" (formula "10") (inst "t=m_0_57"))
                                       (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "10") (term "0"))
                                       (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "10") (term "0"))
                                       (rule "concrete_or_2" (formula "10"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_57"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,0"))
                                       (rule "times_zero_1" (formula "19") (term "0"))
                                       (rule "qeq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "allLeft" (formula "20") (inst "t=i_67"))
                                       (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (rule "concrete_and_2" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                       (rule "concrete_and_2" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "24") (inst "sk=h_9"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "25"))
                                    (rule "allRight" (formula "25") (inst "sk=other_9"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "allLeft" (formula "13") (inst "t=h_9"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "13") (term "0,0,0"))
                                    (rule "allLeft" (formula "13") (inst "t=other_9"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                    (rule "concrete_or_2" (formula "13") (term "0"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "24") (inst "sk=m_0_58"))
                                 (rule "orRight" (formula "24"))
                                 (rule "orRight" (formula "24"))
                                 (rule "notRight" (formula "26"))
                                 (rule "notRight" (formula "25"))
                                 (rule "allLeft" (formula "15") (inst "t=m_0_58"))
                                 (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "close" (formula "27") (ifseqformula "15"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "24") (inst "sk=m_0_59"))
                              (rule "orRight" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "24"))
                              (rule "eqSymm" (formula "26") (term "0,0,0,1,1,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0,1,1,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,1,1"))
                              (rule "cut_direct" (formula "26") (term "0,0"))
                              (branch " CUT: m_0_59.min >= -1 TRUE"
                                 (rule "concrete_and_1" (formula "27") (term "0"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch " CUT: m_0_59.size >= 1 + m_0_59.min TRUE"
                                    (rule "concrete_and_1" (formula "28"))
                                    (rule "andRight" (formula "28"))
                                    (branch " Case 1"
                                       (rule "equiv_right" (formula "28"))
                                       (branch " Case 1"
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                          (rule "add_literals" (formula "2") (term "1"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "28"))
                                          (rule "add_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                          (rule "concrete_and_2" (formula "28"))
                                          (rule "false_right" (formula "28"))
                                          (rule "allLeft" (formula "12") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "12") (term "0"))
                                          (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "12") (term "0"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "allLeft" (formula "15") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "30"))
                                          (rule "concrete_or_2" (formula "15") (term "0"))
                                          (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "15") (term "0"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "allLeft" (formula "11") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "11") (term "1,0"))
                                          (rule "concrete_or_4" (formula "11") (term "0"))
                                          (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                          (rule "concrete_or_2" (formula "11"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "16"))
                                          (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "1,0"))
                                          (rule "times_zero_1" (formula "16") (term "0"))
                                          (rule "qeq_literals" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "allLeft" (formula "19") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "19") (term "1,0"))
                                          (rule "concrete_or_4" (formula "19") (term "0"))
                                          (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
                                          (rule "concrete_or_2" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "only_created_object_are_referenced_non_null" (formula "27") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "27"))
                                          (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "8") (ifseqformula "1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_1" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "allLeft" (formula "21") (inst "t=m_0_59"))
                                          (rule "exLeft" (formula "21") (inst "sk=i_83"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "22") (term "0"))
                                          (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "22") (term "0"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "21") (term "1,0"))
                                          (rule "concrete_or_4" (formula "21") (term "0"))
                                          (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "21"))
                                          (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "28") (term "0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "28") (term "0,0"))
                                          (rule "concrete_or_2" (formula "28") (term "0"))
                                          (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "28") (term "0"))
                                          (rule "concrete_or_2" (formula "28"))
                                          (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "26") (term "0,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "26") (term "1,0"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "26") (term "0"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0,0"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "2"))
                                          (rule "concrete_or_3" (formula "25") (term "0"))
                                          (rule "concrete_or_1" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "23") (term "0,0"))
                                          (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "23") (term "1,0"))
                                          (rule "concrete_or_4" (formula "23") (term "0"))
                                          (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch " Case 2"
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "times_zero_2" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "29"))
                                          (rule "add_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                          (rule "concrete_and_2" (formula "29"))
                                          (rule "false_right" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_and_2" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "equiv_right" (formula "28"))
                                       (branch " Case 1"
                                          (rule "notLeft" (formula "1"))
                                          (rule "allRight" (formula "29") (inst "sk=i_68"))
                                          (rule "orRight" (formula "29"))
                                          (rule "orRight" (formula "29"))
                                          (rule "orRight" (formula "30"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "27"))
                                          (rule "add_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (rule "concrete_and_2" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "17") (term "0,1,0,0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "17") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "17") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "17") (term "1,0,0,0") (ifseqformula "31"))
                                          (rule "concrete_or_4" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0"))
                                          (rule "allLeft" (formula "15") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "32"))
                                          (rule "concrete_or_2" (formula "15") (term "0"))
                                          (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "15") (term "0"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "36"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "9"))
                                          (rule "concrete_not_1" (formula "17") (term "0"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (rule "concrete_or_1" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "9"))
                                          (rule "concrete_not_1" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "37"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "allLeft" (formula "22") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "38"))
                                          (rule "concrete_or_2" (formula "22") (term "0"))
                                          (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "9"))
                                          (rule "concrete_not_1" (formula "22") (term "0"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (rule "qeq_literals" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "allLeft" (formula "26") (inst "t=m_0_59"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "38"))
                                          (rule "concrete_or_2" (formula "26") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "9"))
                                          (rule "concrete_not_1" (formula "26") (term "0"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "allLeft" (formula "28") (inst "t=m_0_59"))
                                          (rule "eqSymm" (formula "28") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                          (rule "concrete_not_1" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
                                          (rule "inEqSimp_contradEq7" (formula "28") (term "1,0,0,0,0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                          (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
                                          (rule "allLeft" (formula "28") (inst "t=i_68"))
                                          (rule "eqSymm" (formula "28") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "41"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "28") (term "0,0"))
                                          (rule "concrete_or_2" (formula "28") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (rule "concrete_and_2" (formula "28") (term "1"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_literals" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch " Case 2"
                                          (rule "notRight" (formula "29"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                          (rule "add_literals" (formula "3") (term "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                          (rule "shift_paren_or" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                          (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                          (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                          (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "17") (term "1,0"))
                                          (rule "concrete_or_4" (formula "17") (term "0"))
                                          (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "14") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "14") (term "1,0"))
                                          (rule "concrete_or_4" (formula "14") (term "0"))
                                          (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                          (rule "concrete_or_2" (formula "14"))
                                          (rule "allLeft" (formula "13") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
                                          (rule "concrete_or_2" (formula "13"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "13"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "allLeft" (formula "10") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "10") (term "1,0"))
                                          (rule "concrete_or_4" (formula "10") (term "0"))
                                          (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "10"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "12") (inst "t=m_0_59"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "12") (term "1,0"))
                                          (rule "concrete_or_4" (formula "12") (term "0"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "qeq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,0,1,0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "28"))
                                          (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "2") (ifseqformula "29"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (rule "concrete_or_1" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "22") (inst "t=m_0_59"))
                                          (rule "exLeft" (formula "22") (inst "sk=i_69"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "23") (term "0"))
                                          (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "23") (term "0"))
                                          (rule "concrete_or_2" (formula "23"))
                                          (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "22") (term "1,0"))
                                          (rule "concrete_or_4" (formula "22") (term "0"))
                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "29") (term "0,0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "29") (term "0,0"))
                                          (rule "concrete_or_2" (formula "29") (term "0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "29") (term "0"))
                                          (rule "concrete_or_2" (formula "29"))
                                          (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "28") (term "0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "28") (term "1,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0"))
                                          (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "28") (term "0"))
                                          (rule "concrete_or_2" (formula "28"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                                          (rule "concrete_or_3" (formula "26") (term "0"))
                                          (rule "concrete_or_1" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "25") (term "1"))
                                          (rule "concrete_or_4" (formula "25"))
                                          (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_4" (formula "24") (term "0,0"))
                                          (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "24") (term "1,0"))
                                          (rule "concrete_or_4" (formula "24") (term "0"))
                                          (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "40"))
                                          (rule "concrete_or_4" (formula "25"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "26") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "26") (term "0"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "times_zero_2" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "times_zero_2" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "22") (term "0,1"))
                                          (rule "eq_or" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                          (rule "add_literals" (formula "21") (term "0"))
                                          (rule "leq_literals" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1"))
                                          (rule "mul_literals" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "21"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                          (rule "concrete_and_2" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "21") (term "0"))
                                          (rule "concrete_and_2" (formula "21"))
                                          (rule "closeFalse" (formula "21"))
                                       )
                                    )
                                 )
                                 (branch " CUT: m_0_59.size >= 1 + m_0_59.min FALSE"
                                    (rule "concrete_and_2" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "inEqSimp_geqRight" (formula "27"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_59"))
                                    (rule "exLeft" (formula "17") (inst "sk=i_70"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0,0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "22") (term "0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0"))
                                    (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "20") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "20") (term "0,0"))
                                    (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "19") (term "1,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "18") (term "1,0"))
                                    (rule "concrete_or_4" (formula "18") (term "0"))
                                    (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "34"))
                                    (rule "concrete_or_4" (formula "18") (term "0"))
                                    (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "34"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "20") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " CUT: m_0_59.min >= -1 FALSE"
                                 (rule "concrete_and_2" (formula "27") (term "0"))
                                 (rule "concrete_and_2" (formula "27"))
                                 (rule "false_right" (formula "27"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "16") (inst "t=m_0_59"))
                                 (rule "exLeft" (formula "16") (inst "sk=i_71"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "17") (term "1,0"))
                                 (rule "concrete_or_4" (formula "17") (term "0"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "16") (term "1,0"))
                                 (rule "concrete_or_4" (formula "16") (term "0"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "23") (term "0,0"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "22") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0,0"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "19") (term "1,0"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "18") (term "1,0"))
                                 (rule "concrete_or_4" (formula "18") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "34"))
                                 (rule "concrete_or_4" (formula "18") (term "0"))
                                 (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "34"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "23") (term "0,0"))
                                 (rule "concrete_not_2" (formula "23") (term "0"))
                                 (rule "concrete_or_1" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_contradEq3" (formula "19") (term "0,1") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "19") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "19") (term "0,1"))
                                 (rule "concrete_not_2" (formula "19") (term "1"))
                                 (rule "concrete_or_3" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_contradEq3" (formula "21") (term "0,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "21") (term "0,0"))
                                 (rule "concrete_not_2" (formula "21") (term "0"))
                                 (rule "concrete_or_1" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0,0"))
                                 (rule "concrete_and_2" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "27"))
                                 (rule "concrete_or_4" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0"))
                                 (rule "qeq_literals" (formula "26") (term "0"))
                                 (rule "concrete_and_2" (formula "26"))
                                 (rule "false_right" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (rule "concrete_and_2" (formula "16"))
                                 (rule "closeFalse" (formula "16"))
                              )
                           )
                        )
                        (branch " if v_ArrayIndexOutOfBoundsException_16 instanceof  java.lang.Throwable false"
                           (rule "false_to_not_true" (formula "1") (term "13"))
                           (builtin "Update Simplification" (formula "25"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "repository_object_non_null" (formula "21") (term "0,0"))
                           (rule "ifthenelse_false" (formula "21") (term "0"))
                           (rule "blockThrow" (formula "25") (term "12"))
                           (rule "throwBox" (formula "25") (term "12"))
                           (builtin "Update Simplification" (formula "25"))
                           (rule "closeTrue" (formula "25"))
                        )
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_17 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " CUT: self.min >= self.capacity FALSE"
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "17") (ifseqformula "21"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "throwUnfold" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_20"))
                  (rule "instanceCreationAssignment" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_21"))
                  (rule "variableDeclarationAssign" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_21"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_22"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_22"))
                  (rule "methodBodyExpand" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "__NEW___5"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_23"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_23"))
                  (rule "allocateInstance" (formula "24") (term "3") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "blockEmpty" (formula "24") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "7"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "polySimp_addComm0" (formula "24") (term "4"))
                  (rule "methodBodyExpand" (formula "24") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "7"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "9"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallWithinClass" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "nextToCreate_non_negative" (formula "24") (term "1,4") (ifseqformula "3"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallEmpty" (formula "25") (term "11"))
                  (rule "blockEmpty" (formula "25") (term "11"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "11"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "methodCallReturnIgnoreResult" (formula "25") (term "15"))
                  (rule "methodCallReturn" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_write_attribute_primitive" (formula "25") (term "15"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_21 != null)"
                     (builtin "Update Simplification" (formula "26"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25"))
                     (rule "false_right" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "methodCallParamThrow" (formula "25") (term "15"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "tryCatchThrow" (formula "25") (term "13"))
                     (rule "ifElseUnfold" (formula "25") (term "13") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "25") (term "13") (newnames "b_9"))
                     (rule "equality_comparison_new" (formula "25") (term "13"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25") (term "0,0"))
                     (rule "concrete_not_2" (formula "25") (term "0"))
                     (rule "ifthenelse_true_for" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "ifElseSplit" (formula "25"))
                     (branch " if b_9 true"
                        (builtin "Update Simplification" (formula "26"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_9 false"
                        (rule "false_to_not_true" (formula "1") (term "14"))
                        (builtin "Update Simplification" (formula "26"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "25") (term "13"))
                        (rule "ifElse" (formula "25") (term "13"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "repository_object_non_null" (formula "25") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "25") (term "0,0"))
                        (rule "elim_double_block" (formula "25") (term "13,1"))
                        (rule "variableDeclaration" (formula "25") (term "13,1") (newnames "e_3"))
                        (rule "assignment_instance_field_of_this" (formula "25") (term "13,1"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "assignment_instance_field_of_this" (formula "25") (term "13,1"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "blockThrow" (formula "25") (term "12,2"))
                        (rule "throwBox" (formula "25") (term "12,2"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "instanceof_static_type" (formula "25") (term "0,0"))
                        (rule "boolean_equal" (formula "25") (term "0"))
                        (rule "ifthenelse_true_for" (formula "25"))
                        (rule "emptyModality" (formula "25") (term "11"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "andRight" (formula "25"))
                        (branch " Case 1"
                           (rule "andRight" (formula "25"))
                           (branch " Case 1"
                              (rule "andRight" (formula "25"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "25"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "25"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_42"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_42.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_42"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "16") (term "0"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "16") (term "0"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_42"))
                                             (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "30"))
                                             (rule "concrete_or_4" (formula "10"))
                                             (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "1"))
                                             (rule "concrete_or_4" (formula "10"))
                                             (rule "close" (formula "29") (ifseqformula "10"))
                                          )
                                          (branch " CUT: m_0_42.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_42"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (rule "concrete_and_2" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_43"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_43.size <= m_0_43.capacity TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "9") (inst "t=m_0_43"))
                                             (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "9") (term "0"))
                                             (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "9") (term "0"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_43"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "12") (term "0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "allLeft" (formula "19") (inst "t=m_0_43"))
                                             (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "19") (term "1,0"))
                                             (rule "concrete_or_4" (formula "19") (term "0"))
                                             (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_43"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "14") (term "1,0"))
                                             (rule "concrete_or_4" (formula "14") (term "0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " CUT: m_0_43.size <= m_0_43.capacity FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_43"))
                                             (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "1,0"))
                                             (rule "concrete_or_4" (formula "8") (term "0"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_43"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_43"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "1"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "14"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "leq_literals" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "25") (inst "sk=m_0_44"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "8") (inst "t=m_0_44"))
                                       (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "8") (term "0"))
                                       (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "8") (term "0"))
                                       (rule "concrete_or_2" (formula "8"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_44"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_44"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "11") (term "1,0"))
                                       (rule "concrete_or_4" (formula "11") (term "0"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=m_0_45"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "allRight" (formula "27") (inst "sk=i_52"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "29"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_45"))
                                    (rule "replace_known_right" (formula "16") (term "1,0,0,0,0") (ifseqformula "30"))
                                    (rule "concrete_or_4" (formula "16") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0"))
                                    (rule "allLeft" (formula "16") (inst "t=i_52"))
                                    (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=h_7"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "26"))
                                 (rule "allRight" (formula "26") (inst "sk=other_7"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "notRight" (formula "26"))
                                 (rule "allLeft" (formula "14") (inst "t=h_7"))
                                 (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "27"))
                                 (rule "concrete_or_2" (formula "14") (term "0,0,0"))
                                 (rule "allLeft" (formula "14") (inst "t=other_7"))
                                 (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "14") (term "0"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                 (rule "concrete_or_2" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "close" (formula "24") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "25") (inst "sk=m_0_46"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "27"))
                              (rule "notRight" (formula "26"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_46"))
                              (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "16") (term "0"))
                              (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "16") (term "0"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "close" (formula "24") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "25") (inst "sk=m_0_47"))
                           (rule "orRight" (formula "25"))
                           (rule "orRight" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "eqSymm" (formula "27") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1,1,1"))
                           (rule "cut_direct" (formula "27") (term "0,0"))
                           (branch " CUT: m_0_47.min >= -1 TRUE"
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch " CUT: m_0_47.size >= 1 + m_0_47.min TRUE"
                                 (rule "concrete_and_1" (formula "29"))
                                 (rule "andRight" (formula "29"))
                                 (branch " Case 1"
                                    (rule "equiv_right" (formula "29"))
                                    (branch " Case 1"
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "29"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "leq_literals" (formula "29") (term "0"))
                                       (rule "concrete_and_2" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "16") (term "1,0"))
                                       (rule "concrete_or_4" (formula "16") (term "0"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "12") (term "1,0"))
                                       (rule "concrete_or_4" (formula "12") (term "0"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "17"))
                                       (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "times_zero_1" (formula "17") (term "0"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "12") (term "0,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "28"))
                                       (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "12") (ifseqformula "29"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_47"))
                                       (rule "exLeft" (formula "22") (inst "sk=i_82"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "23") (term "0"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "29") (term "0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "29") (term "0,0"))
                                       (rule "concrete_or_2" (formula "29") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "29") (term "0"))
                                       (rule "concrete_or_2" (formula "29"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0,0"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0"))
                                       (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "27") (term "1,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "25") (term "1"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "25") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "26") (term "1,0"))
                                       (rule "concrete_or_4" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "25") (term "1"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "22") (term "1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "24"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "22") (term "0,1"))
                                       (rule "eq_or" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "times_zero_2" (formula "24") (term "1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch " Case 2"
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "30"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (rule "concrete_and_2" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "equiv_right" (formula "29"))
                                    (branch " Case 1"
                                       (rule "notLeft" (formula "1"))
                                       (rule "allRight" (formula "30") (inst "sk=i_53"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "31"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "28"))
                                       (rule "add_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_and_2" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "23") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "37"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "38"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq0" (formula "23"))
                                       (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "allLeft" (formula "29") (inst "t=m_0_47"))
                                       (rule "eqSymm" (formula "29") (term "1,0,0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0,0,0") (ifseqformula "8"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "27") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "27") (term "0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "27") (term "0"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "allLeft" (formula "29") (inst "t=i_53"))
                                       (rule "eqSymm" (formula "29") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "42"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "0,0"))
                                       (rule "concrete_or_2" (formula "29") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (rule "concrete_and_2" (formula "29") (term "1"))
                                       (rule "concrete_or_4" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0"))
                                       (rule "add_literals" (formula "29") (term "0"))
                                       (rule "leq_literals" (formula "29"))
                                       (rule "closeFalse" (formula "29"))
                                    )
                                    (branch " Case 2"
                                       (rule "notRight" (formula "30"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "shift_paren_or" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_47"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "18"))
                                       (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,0"))
                                       (rule "times_zero_1" (formula "18") (term "0"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,0,1,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "29"))
                                       (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "9") (ifseqformula "2") (ifseqformula "30"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "allLeft" (formula "21") (inst "t=self"))
                                       (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_47"))
                                       (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                       (rule "allLeft" (formula "25") (inst "t=m_0_47"))
                                       (rule "exLeft" (formula "25") (inst "sk=i_54"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "44"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "25") (term "1,0"))
                                       (rule "concrete_or_4" (formula "25") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "44"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "44"))
                                       (rule "concrete_or_2" (formula "31") (term "0,0"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "31") (term "0,0"))
                                       (rule "concrete_or_2" (formula "31") (term "0"))
                                       (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "32") (term "0,0"))
                                       (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "32") (term "1,0"))
                                       (rule "concrete_or_4" (formula "32") (term "0"))
                                       (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "44"))
                                       (rule "concrete_or_2" (formula "32"))
                                       (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "44"))
                                       (rule "concrete_or_2" (formula "30") (term "0,0"))
                                       (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "30") (term "1,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0"))
                                       (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "29") (term "0"))
                                       (rule "concrete_or_1" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "28") (term "1"))
                                       (rule "concrete_or_4" (formula "28"))
                                       (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "27") (term "1,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "29") (term "0"))
                                       (rule "concrete_or_2" (formula "29"))
                                       (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "28") (term "1"))
                                       (rule "concrete_or_4" (formula "28"))
                                       (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "43"))
                                       (rule "concrete_or_4" (formula "28"))
                                       (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "43"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "31"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "times_zero_2" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "29"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "26") (term "0,1"))
                                       (rule "eq_or" (formula "26"))
                                       (rule "notLeft" (formula "26"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "times_zero_2" (formula "28") (term "1,0"))
                                       (rule "add_zero_right" (formula "28") (term "0"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                                       (rule "add_literals" (formula "24") (term "0"))
                                       (rule "leq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                       (rule "mul_literals" (formula "27") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "24"))
                                       (rule "mul_literals" (formula "35") (term "1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0"))
                                       (rule "leq_literals" (formula "35") (term "0"))
                                       (rule "concrete_and_2" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (rule "concrete_and_2" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_47.size >= 1 + m_0_47.min FALSE"
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "12") (inst "t=m_0_47"))
                                 (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "12") (term "1,0"))
                                 (rule "concrete_or_4" (formula "12") (term "0"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "12"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "12") (term "0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "19") (inst "t=m_0_47"))
                                 (rule "exLeft" (formula "19") (inst "sk=i_55"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "26") (term "0,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "25") (term "0,0"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "25") (term "0,0"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "24") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "23") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "22") (term "1,0"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "37"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "37"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "26") (term "0,0") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "26") (term "0,0"))
                                 (rule "concrete_not_2" (formula "26") (term "0"))
                                 (rule "concrete_or_1" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "inEqSimp_contradEq7" (formula "22") (term "0,1") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                 (rule "leq_literals" (formula "22") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "22") (term "0,1"))
                                 (rule "concrete_not_2" (formula "22") (term "1"))
                                 (rule "concrete_or_3" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "24") (term "0,0"))
                                 (rule "concrete_not_2" (formula "24") (term "0"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_and_2" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "30"))
                                 (rule "concrete_or_4" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "29"))
                                 (rule "add_zero_right" (formula "12") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "12"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                           (branch " CUT: m_0_47.min >= -1 FALSE"
                              (rule "concrete_and_2" (formula "28") (term "0"))
                              (rule "concrete_and_2" (formula "28"))
                              (rule "false_right" (formula "28"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_47"))
                              (rule "exLeft" (formula "17") (inst "sk=i_56"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "24") (term "0,0"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "24") (term "0,0"))
                              (rule "concrete_or_2" (formula "24") (term "0"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "23") (term "0,0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "23") (term "0,0"))
                              (rule "concrete_or_2" (formula "23") (term "0"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "22") (term "0,0"))
                              (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "21") (term "0,0"))
                              (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "19") (term "1,0"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "23") (term "0,0"))
                              (rule "concrete_not_2" (formula "23") (term "0"))
                              (rule "concrete_or_1" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0,0"))
                              (rule "concrete_not_2" (formula "22") (term "0"))
                              (rule "concrete_or_1" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_contradEq3" (formula "21") (term "0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "inEqSimp_contradEq3" (formula "21") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "21") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0,0"))
                              (rule "concrete_not_2" (formula "21") (term "0"))
                              (rule "concrete_or_1" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_contradEq3" (formula "20") (term "0,1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "20") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "20") (term "0,1"))
                              (rule "concrete_not_2" (formula "20") (term "1"))
                              (rule "concrete_or_3" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (rule "concrete_and_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_21 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch " Null Reference (_rec = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close" (formula "20") (ifseqformula "1"))
         )
      )
      (branch "   self.size >= self.capacity
& self.highscores[self.min].score >= rec.score"
         (rule "andLeft" (formula "11"))
         (rule "cnf_eqv" (formula "10") (term "1,1,1,0"))
         (rule "double_not" (formula "10") (term "0,1,1,1,1,0"))
         (rule "nnf_notAll" (formula "10") (term "1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,1,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
         (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,1,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,1,0,1,1,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,1,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,1,1,1,0"))
         (rule "all_pull_out3" (formula "7") (term "0"))
         (rule "shift_paren_or" (formula "7") (term "0,0"))
         (rule "shift_paren_or" (formula "7") (term "0,0,0"))
         (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
         (rule "commute_or" (formula "7") (term "0,0,0,0,0"))
         (rule "all_pull_out3" (formula "8") (term "1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,1,0"))
         (rule "all_pull_out3" (formula "10") (term "1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,0,1,1,1,1,0"))
         (rule "shift_paren_or" (formula "10") (term "0,0,0,1,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0,1,1,1,1,0"))
         (rule "ex_pull_out3" (formula "10") (term "0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,0,1,1,1,0"))
         (rule "cnf_rightDist" (formula "10") (term "0,0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "0,0,0,0,0,1,1,1,0"))
         (rule "commute_or" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
         (rule "applyEq_or_gen2" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
         (rule "commute_and" (formula "10") (term "0,0,0,0,1,1,1,0"))
         (rule "ex_pull_out0" (formula "10") (term "1,1,1,0"))
         (rule "all_pull_out3" (formula "8") (term "0"))
         (rule "shift_paren_or" (formula "8") (term "0,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
         (rule "eq_or" (formula "8") (term "0,0,0,0,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,1,1,0"))
         (rule "ex_pull_out1" (formula "10") (term "1,1,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "commute_and" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
         (rule "ex_pull_out1" (formula "10") (term "1,0"))
         (rule "all_pull_out1" (formula "10") (term "0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,1,0"))
         (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
         (rule "ex_pull_out3" (formula "10") (term "0"))
         (rule "allLeft" (formula "6") (inst "t=self"))
         (rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "14"))
         (rule "concrete_not_1" (formula "6") (term "1,0"))
         (rule "concrete_or_4" (formula "6") (term "0"))
         (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "17"))
         (rule "concrete_or_2" (formula "6"))
         (rule "allLeft" (formula "10") (inst "t=self"))
         (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "15"))
         (rule "concrete_not_1" (formula "10") (term "1,0"))
         (rule "concrete_or_4" (formula "10") (term "0"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "18"))
         (rule "concrete_or_2" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "all_pull_out3" (formula "11") (term "0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
         (rule "distr_forallAnd" (formula "11") (term "0,0"))
         (rule "distr_existsAnd1" (formula "11") (term "0"))
         (rule "distr_forallAnd" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "commute_or_2" (formula "12") (term "0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "12") (term "0,0,0,0,0"))
         (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,1,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
         (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "1,0,0,0,0,0,0,0,0,0"))
         (rule "all_unused" (formula "11") (term "0,0"))
         (rule "allLeft" (formula "4") (inst "t=self"))
         (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "16"))
         (rule "concrete_not_1" (formula "4") (term "1,0"))
         (rule "concrete_or_4" (formula "4") (term "0"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "20"))
         (rule "concrete_or_2" (formula "4"))
         (rule "allLeft" (formula "3") (inst "t=self"))
         (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "3") (term "0"))
         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "17"))
         (rule "concrete_not_1" (formula "3") (term "0"))
         (rule "concrete_or_2" (formula "3"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "qeq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "allLeft" (formula "2") (inst "t=self"))
         (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "17"))
         (rule "concrete_not_1" (formula "2") (term "1,0"))
         (rule "concrete_or_4" (formula "2") (term "0"))
         (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "2"))
         (rule "methodBodyExpand" (formula "22") (term "2"))
         (rule "allLeft" (formula "8") (inst "t=self"))
         (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "22"))
         (rule "concrete_or_2" (formula "8") (term "0"))
         (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "18"))
         (rule "concrete_not_1" (formula "8") (term "0"))
         (rule "concrete_or_2" (formula "8"))
         (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "8"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,0"))
         (rule "times_zero_1" (formula "17") (term "0"))
         (rule "leq_literals" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
         (rule "inEqSimp_homoInEq0" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "qeq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
         (rule "leq_literals" (formula "6") (term "0"))
         (rule "concrete_or_1" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "ifElseUnfold" (formula "21") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "b_1"))
         (rule "less_than_comparison_new" (formula "21") (term "2"))
         (builtin "Update Simplification" (formula "21"))
         (rule "assignment_instance_field_of_this" (formula "21") (term "2,1"))
         (builtin "Update Simplification" (formula "21"))
         (rule "assignment_instance_field_of_this" (formula "21") (term "2,2"))
         (builtin "Update Simplification" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
         (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "14"))
         (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0"))
         (rule "leq_literals" (formula "21") (term "0"))
         (rule "ifthenelse_false_for" (formula "21"))
         (rule "ifElse" (formula "21") (term "3"))
         (builtin "Update Simplification" (formula "21"))
         (rule "boolean_not_equal_2" (formula "21") (term "0"))
         (rule "ifthenelse_false_for" (formula "21"))
         (rule "elim_double_block_2" (formula "21") (term "2"))
         (rule "ifUnfold" (formula "21") (term "2") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "b_2"))
         (rule "compound_greater_than_comparison_2" (formula "21") (term "2") (inst "#v1=j_1") (inst "#v0=j"))
         (rule "variableDeclarationAssign" (formula "21") (term "2"))
         (rule "variableDeclaration" (formula "21") (term "2") (newnames "j"))
         (rule "methodCallWithAssignment" (formula "21") (term "2") (inst "#v0=j_2"))
         (branch " Normal Execution (_rec != null)"
            (builtin "Update Simplification" (formula "21"))
            (rule "variableDeclaration" (formula "21") (term "2") (newnames "j_9"))
            (rule "only_created_object_are_referenced_non_null" (formula "15") (term "0,0,0") (ifseqformula "16") (ifseqformula "1") (ifseqformula "18"))
            (rule "methodBodyExpand" (formula "22") (term "2"))
            (rule "methodCallReturn" (formula "22") (term "2"))
            (rule "assignment_instance_field_of_this" (formula "22") (term "2"))
            (builtin "Update Simplification" (formula "22"))
            (rule "methodCallEmpty" (formula "22") (term "3"))
            (rule "blockEmpty" (formula "22") (term "3"))
            (rule "assignment_instance_field_of_this" (formula "22") (term "3"))
            (builtin "Update Simplification" (formula "22"))
            (rule "variableDeclarationAssign" (formula "22") (term "3"))
            (rule "variableDeclaration" (formula "22") (term "3") (newnames "j_10"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "22") (term "3") (inst "#v0=v_Record"))
            (rule "variableDeclaration" (formula "22") (term "3") (newnames "v_Record_2"))
            (rule "assignment_array2" (formula "22") (term "3"))
            (branch " Normal Execution (highscores != null)"
               (builtin "Update Simplification" (formula "23"))
               (builtin "Update Simplification" (formula "22"))
               (rule "orRight" (formula "22"))
               (rule "orRight" (formula "22"))
               (rule "inEqSimp_ltRight" (formula "23"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "23"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
               (rule "times_zero_1" (formula "2") (term "0,0"))
               (rule "add_zero_left" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "methodCallWithAssignment" (formula "24") (term "4") (inst "#v0=j_11"))
               (branch " Normal Execution (v_Record_2 != null)"
                  (builtin "Update Simplification" (formula "24"))
                  (rule "variableDeclaration" (formula "25") (term "4") (newnames "j_11"))
                  (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "17") (ifseqformula "21"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "methodBodyExpand" (formula "25") (term "4"))
                  (rule "methodCallReturn" (formula "25") (term "4"))
                  (rule "assignment" (formula "25") (term "4"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "5"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "blockEmpty" (formula "25") (term "4"))
                  (rule "assignment" (formula "25") (term "4"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "greater_than_comparison_new" (formula "25") (term "4"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "2,1"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "2,2"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "inEqSimp_gtToGeq" (formula "25") (term "0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "18"))
                  (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0"))
                  (rule "concrete_and_2" (formula "25") (term "0"))
                  (rule "ifthenelse_false_for" (formula "25"))
                  (rule "ifSplit" (formula "25"))
                  (branch " if b_2 true"
                     (builtin "Update Simplification" (formula "26"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch " if b_2 false"
                     (rule "false_to_not_true" (formula "1") (term "3"))
                     (builtin "Update Simplification" (formula "26"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "0"))
                     (rule "concrete_not_2" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallReturn" (formula "25") (term "2"))
                     (rule "assignment" (formula "25") (term "2"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "methodCallEmpty" (formula "25") (term "1"))
                     (rule "tryEmpty" (formula "25") (term "1"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "emptyModality" (formula "25"))
                     (rule "andRight" (formula "25"))
                     (branch " Case 1"
                        (rule "andRight" (formula "25"))
                        (branch " Case 1"
                           (rule "andRight" (formula "25"))
                           (branch " Case 1"
                              (rule "andRight" (formula "25"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "25"))
                                    (branch " Case 1"
                                       (rule "allRight" (formula "25") (inst "sk=m_0_24"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "cut_direct" (formula "27") (term "0"))
                                       (branch " CUT: m_0_24.capacity >= 1 TRUE"
                                          (rule "concrete_and_1" (formula "28"))
                                          (rule "allLeft" (formula "15") (inst "t=m_0_24"))
                                          (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "15") (term "0"))
                                          (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "15") (term "0"))
                                          (rule "concrete_or_2" (formula "15"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "allLeft" (formula "9") (inst "t=m_0_24"))
                                          (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "9") (term "1,0"))
                                          (rule "concrete_or_4" (formula "9") (term "0"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "close" (formula "30") (ifseqformula "9"))
                                       )
                                       (branch " CUT: m_0_24.capacity >= 1 FALSE"
                                          (rule "concrete_and_2" (formula "28"))
                                          (rule "false_right" (formula "28"))
                                          (rule "inEqSimp_geqRight" (formula "27"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "9") (inst "t=m_0_24"))
                                          (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "9") (term "1,0"))
                                          (rule "concrete_or_4" (formula "9") (term "0"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_24"))
                                          (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "allLeft" (formula "7") (inst "t=m_0_24"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "30"))
                                          (rule "concrete_or_2" (formula "7") (term "0"))
                                          (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "7") (term "0"))
                                          (rule "concrete_or_2" (formula "7"))
                                          (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (rule "concrete_and_2" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "25") (inst "sk=m_0_25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "cut_direct" (formula "27") (term "0"))
                                       (branch " CUT: m_0_25.size <= m_0_25.capacity TRUE"
                                          (rule "concrete_and_1" (formula "28"))
                                          (rule "inEqSimp_geqRight" (formula "28"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "10") (inst "t=m_0_25"))
                                          (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "10") (term "0"))
                                          (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "10") (term "0"))
                                          (rule "concrete_or_2" (formula "10"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_25"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "30"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "17") (term "0"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "8") (inst "t=m_0_25"))
                                          (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "31"))
                                          (rule "concrete_or_2" (formula "8") (term "0"))
                                          (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "8") (term "0"))
                                          (rule "concrete_or_2" (formula "8"))
                                          (rule "allLeft" (formula "13") (inst "t=m_0_25"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "32"))
                                          (rule "concrete_or_2" (formula "13") (term "0"))
                                          (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "13") (term "0"))
                                          (rule "concrete_or_2" (formula "13"))
                                          (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                          (rule "concrete_and_2" (formula "13"))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                       (branch " CUT: m_0_25.size <= m_0_25.capacity FALSE"
                                          (rule "concrete_and_2" (formula "28"))
                                          (rule "false_right" (formula "28"))
                                          (rule "inEqSimp_leqRight" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "allLeft" (formula "9") (inst "t=m_0_25"))
                                          (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "9") (term "1,0"))
                                          (rule "concrete_or_4" (formula "9") (term "0"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
                                          (rule "concrete_or_2" (formula "9"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_25"))
                                          (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "29"))
                                          (rule "concrete_or_2" (formula "16") (term "0"))
                                          (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "16") (term "0"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "allLeft" (formula "12") (inst "t=m_0_25"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "12") (term "1,0"))
                                          (rule "concrete_or_4" (formula "12") (term "0"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                                          (rule "concrete_or_2" (formula "12"))
                                          (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "12"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0"))
                                          (rule "add_literals" (formula "12") (term "0"))
                                          (rule "leq_literals" (formula "12"))
                                          (rule "closeFalse" (formula "12"))
                                       )
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=m_0_26"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "9") (inst "t=m_0_26"))
                                    (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "28"))
                                    (rule "concrete_or_2" (formula "9") (term "0"))
                                    (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "9") (term "0"))
                                    (rule "concrete_or_2" (formula "9"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=m_0_27"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "allRight" (formula "27") (inst "sk=i_31"))
                                 (rule "orRight" (formula "27"))
                                 (rule "notRight" (formula "28"))
                                 (rule "orRight" (formula "28"))
                                 (rule "inEqSimp_leqRight" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_leqRight" (formula "29"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "allLeft" (formula "15") (inst "t=m_0_27"))
                                 (rule "replace_known_left" (formula "15") (term "0,1,0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "15") (term "1,0,0,0"))
                                 (rule "concrete_or_4" (formula "15") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "15") (term "1,0,0,0") (ifseqformula "30"))
                                 (rule "concrete_or_4" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                                 (rule "allLeft" (formula "15") (inst "t=i_31"))
                                 (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "leq_literals" (formula "15") (term "0,1"))
                                 (rule "concrete_and_2" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (rule "concrete_and_2" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "25") (inst "sk=h_4"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "26"))
                              (rule "allRight" (formula "26") (inst "sk=other_4"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "allLeft" (formula "13") (inst "t=h_4"))
                              (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "27"))
                              (rule "concrete_or_2" (formula "13") (term "0,0,0"))
                              (rule "allLeft" (formula "13") (inst "t=other_4"))
                              (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "30"))
                              (rule "concrete_or_4" (formula "13") (term "0"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "notLeft" (formula "13"))
                              (rule "close" (formula "23") (ifseqformula "1"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "25") (inst "sk=m_0_28"))
                           (rule "orRight" (formula "25"))
                           (rule "orRight" (formula "25"))
                           (rule "notRight" (formula "27"))
                           (rule "notRight" (formula "26"))
                           (rule "allLeft" (formula "15") (inst "t=m_0_28"))
                           (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "28"))
                           (rule "concrete_or_2" (formula "15") (term "0"))
                           (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
                           (rule "concrete_not_1" (formula "15") (term "0"))
                           (rule "concrete_or_2" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "close" (formula "23") (ifseqformula "2"))
                        )
                     )
                     (branch " Case 2"
                        (rule "allRight" (formula "25") (inst "sk=m_0_29"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "notRight" (formula "25"))
                        (rule "eqSymm" (formula "27") (term "0,0,0,1,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,1,1"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1,1,1"))
                        (rule "cut_direct" (formula "27") (term "0,0"))
                        (branch " CUT: m_0_29.min >= -1 TRUE"
                           (rule "concrete_and_1" (formula "28") (term "0"))
                           (rule "cut_direct" (formula "28") (term "0"))
                           (branch " CUT: m_0_29.size >= 1 + m_0_29.min TRUE"
                              (rule "concrete_and_1" (formula "29"))
                              (rule "andRight" (formula "29"))
                              (branch " Case 1"
                                 (rule "equiv_right" (formula "29"))
                                 (branch " Case 1"
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                    (rule "add_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "29"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0"))
                                    (rule "leq_literals" (formula "29") (term "0"))
                                    (rule "concrete_and_2" (formula "29"))
                                    (rule "false_right" (formula "29"))
                                    (rule "allLeft" (formula "12") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "29"))
                                    (rule "concrete_or_2" (formula "12") (term "0"))
                                    (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "12") (term "0"))
                                    (rule "concrete_or_2" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "allLeft" (formula "11") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "11") (term "0"))
                                    (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "11") (term "0"))
                                    (rule "concrete_or_2" (formula "11"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "16") (term "0"))
                                    (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                    (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,0"))
                                    (rule "times_zero_1" (formula "16") (term "0"))
                                    (rule "qeq_literals" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "24") (term "0,0") (ifseqformula "23") (ifseqformula "7") (ifseqformula "30"))
                                    (rule "allLeft" (formula "19") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "33"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "only_created_object_are_referenced_non_null" (formula "11") (term "0,0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "28"))
                                    (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "29"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_1" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "allLeft" (formula "21") (inst "t=m_0_29"))
                                    (rule "exLeft" (formula "21") (inst "sk=i_32"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "22") (term "0"))
                                    (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0"))
                                    (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "28") (term "1,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "28") (term "1,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0"))
                                    (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "28"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0"))
                                    (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "27"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "26") (term "1,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0"))
                                    (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "25") (term "0"))
                                    (rule "concrete_or_1" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "41"))
                                    (rule "concrete_or_4" (formula "24") (term "0,0"))
                                    (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "24") (term "1,0"))
                                    (rule "concrete_or_4" (formula "24") (term "0"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "41"))
                                    (rule "concrete_or_4" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "24") (term "1"))
                                    (rule "concrete_or_4" (formula "24"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "41"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "25") (term "0"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                    (rule "add_literals" (formula "21") (term "1"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "times_zero_2" (formula "25") (term "1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "22") (term "0,1"))
                                    (rule "eq_or" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch " Case 2"
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "times_zero_2" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "30"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (rule "concrete_and_2" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_and_2" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "equiv_right" (formula "29"))
                                 (branch " Case 1"
                                    (rule "notLeft" (formula "1"))
                                    (rule "allRight" (formula "30") (inst "sk=i_33"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "30"))
                                    (rule "orRight" (formula "31"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "27"))
                                    (rule "add_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0"))
                                    (rule "leq_literals" (formula "27") (term "0"))
                                    (rule "concrete_and_2" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "allLeft" (formula "21") (inst "t=m_0_29"))
                                    (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                                    (rule "replace_known_right" (formula "21") (term "1,0,0,0,0,0,0") (ifseqformula "32"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0,0,0,0,0") (ifseqformula "6"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "21") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "14") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "33"))
                                    (rule "concrete_or_2" (formula "14") (term "0"))
                                    (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "6"))
                                    (rule "concrete_not_1" (formula "14") (term "0"))
                                    (rule "concrete_or_2" (formula "14"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_29"))
                                    (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "6"))
                                    (rule "concrete_not_1" (formula "17") (term "1,0"))
                                    (rule "concrete_or_4" (formula "17") (term "0"))
                                    (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_29"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "6"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0"))
                                    (rule "concrete_or_4" (formula "16") (term "0"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                    (rule "times_zero_1" (formula "16") (term "0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (rule "concrete_or_1" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_29"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0"))
                                    (rule "concrete_or_4" (formula "16") (term "0"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "39"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "allLeft" (formula "25") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "39"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "25") (term "0"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "allLeft" (formula "23") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "23") (term "1,0,0,0,0") (ifseqformula "40"))
                                    (rule "concrete_or_4" (formula "23") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "32") (term "0,0") (ifseqformula "31") (ifseqformula "12") (ifseqformula "39"))
                                    (rule "allLeft" (formula "23") (inst "t=m_0_29.min@(maze.Highscore)"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "allLeft" (formula "23") (inst "t=i_33"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "allLeft" (formula "28") (inst "t=i_33"))
                                    (rule "eqSymm" (formula "28") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "45"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "28") (term "1,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "28") (term "0,0,1"))
                                    (rule "leq_literals" (formula "28") (term "0,1"))
                                    (rule "concrete_and_2" (formula "28") (term "1"))
                                    (rule "concrete_or_4" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "28") (term "0"))
                                    (rule "concrete_and_2" (formula "28"))
                                    (rule "closeFalse" (formula "28"))
                                 )
                                 (branch " Case 2"
                                    (rule "notRight" (formula "30"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                    (rule "shift_paren_or" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                    (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                    (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "30"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "allLeft" (formula "11") (inst "t=m_0_29"))
                                    (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "11") (term "1,0"))
                                    (rule "concrete_or_4" (formula "11") (term "0"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "11"))
                                    (rule "allLeft" (formula "15") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "15") (term "0"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "15") (term "0"))
                                    (rule "concrete_or_2" (formula "15"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                    (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,0"))
                                    (rule "times_zero_1" (formula "15") (term "0"))
                                    (rule "qeq_literals" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "9") (inst "t=m_0_29"))
                                    (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "9") (term "1,0"))
                                    (rule "concrete_or_4" (formula "9") (term "0"))
                                    (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "9"))
                                    (rule "allLeft" (formula "15") (inst "t=m_0_29"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "33"))
                                    (rule "concrete_or_2" (formula "15") (term "0"))
                                    (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "15") (term "0"))
                                    (rule "concrete_or_2" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "25") (term "0,0") (ifseqformula "24") (ifseqformula "7") (ifseqformula "32"))
                                    (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,1,1,0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "29"))
                                    (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "2") (ifseqformula "30"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "13") (term "0"))
                                    (rule "concrete_or_1" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "allLeft" (formula "22") (inst "t=m_0_29"))
                                    (rule "exLeft" (formula "22") (inst "sk=i_34"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "43"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "23") (term "1,0"))
                                    (rule "concrete_or_4" (formula "23") (term "0"))
                                    (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "43"))
                                    (rule "concrete_or_2" (formula "23"))
                                    (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "29") (term "1,0"))
                                    (rule "concrete_or_4" (formula "29") (term "0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "43"))
                                    (rule "concrete_or_2" (formula "29") (term "0"))
                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "29") (term "0"))
                                    (rule "concrete_or_2" (formula "29"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "28") (term "1,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0"))
                                    (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "43"))
                                    (rule "concrete_or_2" (formula "27") (term "0,0"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0"))
                                    (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "27") (term "0"))
                                    (rule "concrete_or_2" (formula "27"))
                                    (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "43"))
                                    (rule "concrete_or_2" (formula "26") (term "0,0"))
                                    (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "26") (term "0"))
                                    (rule "concrete_or_1" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "25") (term "1,0"))
                                    (rule "concrete_or_4" (formula "25") (term "0"))
                                    (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "24") (term "1,0"))
                                    (rule "concrete_or_4" (formula "24") (term "0"))
                                    (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "1"))
                                    (rule "concrete_not_1" (formula "25") (term "1"))
                                    (rule "concrete_or_4" (formula "25"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0"))
                                    (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "42"))
                                    (rule "concrete_or_4" (formula "25"))
                                    (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "27"))
                                    (rule "replace_known_right" (formula "24") (term "1,0") (ifseqformula "42"))
                                    (rule "concrete_or_4" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                    (rule "add_literals" (formula "21") (term "1"))
                                    (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "22") (term "0,1"))
                                    (rule "eq_or" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "24"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1"))
                                    (rule "mul_literals" (formula "24") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "21"))
                                    (rule "add_zero_left" (formula "33") (term "0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,0"))
                                    (rule "leq_literals" (formula "33") (term "0"))
                                    (rule "concrete_and_2" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (rule "concrete_or_1" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (rule "concrete_and_2" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                              )
                           )
                           (branch " CUT: m_0_29.size >= 1 + m_0_29.min FALSE"
                              (rule "concrete_and_2" (formula "29"))
                              (rule "false_right" (formula "29"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_29"))
                              (rule "exLeft" (formula "17") (inst "sk=i_35"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "36"))
                              (rule "concrete_or_2" (formula "17") (term "0"))
                              (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "23") (term "0,0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "23") (term "0,0"))
                              (rule "concrete_or_2" (formula "23") (term "0"))
                              (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "22") (term "0,0"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "22") (term "0,0"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "21") (term "0,0"))
                              (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "20") (term "0,0"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "19") (term "1,0"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "18") (term "0,0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "21") (term "0,0"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "20") (term "0,0"))
                              (rule "concrete_or_2" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch " CUT: m_0_29.min >= -1 FALSE"
                           (rule "concrete_and_2" (formula "28") (term "0"))
                           (rule "concrete_and_2" (formula "28"))
                           (rule "false_right" (formula "28"))
                           (rule "inEqSimp_geqRight" (formula "27"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "allLeft" (formula "16") (inst "t=m_0_29"))
                           (rule "exLeft" (formula "16") (inst "sk=i_36"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "16") (term "1,0"))
                           (rule "concrete_or_4" (formula "16") (term "0"))
                           (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "16"))
                           (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "17") (term "1,0"))
                           (rule "concrete_or_4" (formula "17") (term "0"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "17"))
                           (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "23") (term "0,0"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "23") (term "0,0"))
                           (rule "concrete_or_2" (formula "23") (term "0"))
                           (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "22") (term "0,0"))
                           (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "22") (term "0,0"))
                           (rule "concrete_or_2" (formula "22") (term "0"))
                           (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "21") (term "0,0"))
                           (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "35"))
                           (rule "concrete_or_2" (formula "20") (term "0,0"))
                           (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "19") (term "1,0"))
                           (rule "concrete_or_4" (formula "19") (term "0"))
                           (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "35"))
                           (rule "concrete_or_4" (formula "18") (term "0,0"))
                           (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "18") (term "1,0"))
                           (rule "concrete_or_4" (formula "18") (term "0"))
                           (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                           (rule "concrete_or_4" (formula "19") (term "0"))
                           (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "21") (term "0,0"))
                           (rule "concrete_or_2" (formula "21") (term "0"))
                           (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "2"))
                           (rule "concrete_not_1" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "22") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0,0"))
                           (rule "concrete_not_2" (formula "22") (term "0"))
                           (rule "concrete_or_1" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "inEqSimp_contradEq3" (formula "19") (term "0,1") (ifseqformula "1"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,0,1"))
                           (rule "qeq_literals" (formula "19") (term "0,0,1"))
                           (rule "concrete_and_2" (formula "19") (term "0,1"))
                           (rule "concrete_not_2" (formula "19") (term "1"))
                           (rule "concrete_or_3" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_contradEq3" (formula "21") (term "0,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "21") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "21") (term "0,0"))
                           (rule "concrete_not_2" (formula "21") (term "0"))
                           (rule "concrete_or_1" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (rule "concrete_and_2" (formula "19") (term "0"))
                           (rule "concrete_or_2" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "27"))
                           (rule "concrete_or_4" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "1"))
                           (rule "mul_literals" (formula "26") (term "1,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0"))
                           (rule "qeq_literals" (formula "26") (term "0"))
                           (rule "concrete_and_2" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                           (rule "concrete_and_2" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                     )
                  )
               )
               (branch " Null Reference (v_Record_2 = null)"
                  (builtin "Update Simplification" (formula "25"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_commuteGeq" (formula "19"))
                  (rule "allLeft" (formula "12") (inst "t=self"))
                  (rule "replace_known_left" (formula "12") (term "0,1,0,0,0") (ifseqformula "21"))
                  (rule "concrete_not_1" (formula "12") (term "1,0,0,0"))
                  (rule "concrete_or_4" (formula "12") (term "0,0,0"))
                  (rule "replace_known_right" (formula "12") (term "1,0,0,0") (ifseqformula "25"))
                  (rule "concrete_or_4" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
                  (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "18"))
                  (rule "allLeft" (formula "12") (inst "t=self.min@(maze.Highscore)"))
                  (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "1"))
                  (rule "concrete_not_1" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "12") (term "0,0"))
                  (rule "concrete_and_2" (formula "12") (term "0"))
                  (rule "concrete_or_2" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "2"))
                  (rule "andLeft" (formula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0"))
                  (rule "add_zero_right" (formula "12") (term "0"))
                  (rule "leq_literals" (formula "12"))
                  (rule "closeFalse" (formula "12"))
               )
            )
            (branch " Null Reference (highscores = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close" (formula "20") (ifseqformula "1"))
            )
            (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
               (builtin "Update Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "cut_direct" (formula "1") (term "0"))
               (branch " CUT: self.min >= self.capacity TRUE"
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "array_length_non_negative_3" (formula "5") (term "0") (ifseqformula "2") (ifseqformula "16") (ifseqformula "20"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (rule "concrete_or_1" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "throwUnfold" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_8"))
                  (rule "instanceCreationAssignment" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_9"))
                  (rule "variableDeclarationAssign" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_9"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_10"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_10"))
                  (rule "methodBodyExpand" (formula "23") (term "3"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "__NEW___2"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_11"))
                  (rule "variableDeclaration" (formula "23") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_11"))
                  (rule "allocateInstance" (formula "23") (term "3") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "blockEmpty" (formula "23") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "7"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "polySimp_addComm0" (formula "23") (term "4"))
                  (rule "methodBodyExpand" (formula "23") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "7"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "9"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "methodCallWithinClass" (formula "23") (term "11"))
                  (rule "methodBodyExpand" (formula "23") (term "11"))
                  (rule "methodCallSuper" (formula "23") (term "11"))
                  (rule "nextToCreate_non_negative" (formula "23") (term "0,5") (ifseqformula "2"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallEmpty" (formula "24") (term "11"))
                  (rule "blockEmpty" (formula "24") (term "11"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "11"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "13"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "methodCallReturnIgnoreResult" (formula "24") (term "15"))
                  (rule "methodCallReturn" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallSuper" (formula "24") (term "15"))
                  (rule "methodBodyExpand" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "methodCallEmpty" (formula "24") (term "15"))
                  (rule "blockEmpty" (formula "24") (term "15"))
                  (rule "assignment_write_attribute_primitive" (formula "24") (term "15"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_9 != null)"
                     (builtin "Update Simplification" (formula "25"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "methodCallParamThrow" (formula "24") (term "15"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "tryCatchThrow" (formula "24") (term "13"))
                     (rule "ifElseUnfold" (formula "24") (term "13") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "24") (term "13") (newnames "b_7"))
                     (rule "equality_comparison_new" (formula "24") (term "13"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24") (term "0,0"))
                     (rule "concrete_not_2" (formula "24") (term "0"))
                     (rule "ifthenelse_true_for" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "13"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "ifElseSplit" (formula "24"))
                     (branch " if b_7 true"
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_7 false"
                        (rule "false_to_not_true" (formula "1") (term "14"))
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "24") (term "13"))
                        (rule "ifElse" (formula "24") (term "13"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "repository_object_non_null" (formula "24") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "24") (term "0,0"))
                        (rule "elim_double_block" (formula "24") (term "13,1"))
                        (rule "variableDeclaration" (formula "24") (term "13,1") (newnames "e_1"))
                        (rule "assignment_instance_field_of_this" (formula "24") (term "13,1"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "assignment_instance_field_of_this" (formula "24") (term "13,1"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "blockThrow" (formula "24") (term "12,2"))
                        (rule "throwBox" (formula "24") (term "12,2"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "instanceof_static_type" (formula "24") (term "0,0"))
                        (rule "boolean_equal" (formula "24") (term "0"))
                        (rule "ifthenelse_true_for" (formula "24"))
                        (rule "emptyModality" (formula "24") (term "11"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "andRight" (formula "24"))
                        (branch " Case 1"
                           (rule "andRight" (formula "24"))
                           (branch " Case 1"
                              (rule "andRight" (formula "24"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "24"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "24"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "24"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "24") (inst "sk=m_0_30"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch " CUT: m_0_30.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "27"))
                                             (rule "allLeft" (formula "9") (inst "t=m_0_30"))
                                             (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "9") (term "1,0"))
                                             (rule "concrete_or_4" (formula "9") (term "0"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "close" (formula "28") (ifseqformula "9"))
                                          )
                                          (branch " CUT: m_0_30.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "26"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "7") (inst "t=m_0_30"))
                                             (rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "7") (term "1,0"))
                                             (rule "concrete_or_4" (formula "7") (term "0"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "24") (inst "sk=m_0_31"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch " CUT: m_0_31.size <= m_0_31.capacity TRUE"
                                             (rule "concrete_and_1" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_31"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_31"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "11") (term "0"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "11") (term "0"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_31"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_31"))
                                             (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "13") (term "1,0"))
                                             (rule "concrete_or_4" (formula "13") (term "0"))
                                             (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (rule "concrete_and_2" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                          (branch " CUT: m_0_31.size <= m_0_31.capacity FALSE"
                                             (rule "concrete_and_2" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "inEqSimp_leqRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "7") (inst "t=m_0_31"))
                                             (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "7") (term "0"))
                                             (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "7") (term "0"))
                                             (rule "concrete_or_2" (formula "7"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_31"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_31"))
                                             (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "1,0"))
                                             (rule "concrete_or_4" (formula "13") (term "0"))
                                             (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "13"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "24") (inst "sk=m_0_32"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "notRight" (formula "24"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "7") (inst "t=m_0_32"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "27"))
                                       (rule "concrete_or_2" (formula "7") (term "0"))
                                       (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "7") (term "0"))
                                       (rule "concrete_or_2" (formula "7"))
                                       (rule "allLeft" (formula "10") (inst "t=m_0_32"))
                                       (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "10") (term "0"))
                                       (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "10") (term "0"))
                                       (rule "concrete_or_2" (formula "10"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "24") (inst "sk=m_0_33"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "notRight" (formula "24"))
                                    (rule "allRight" (formula "26") (inst "sk=i_37"))
                                    (rule "orRight" (formula "26"))
                                    (rule "orRight" (formula "26"))
                                    (rule "notRight" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "allLeft" (formula "15") (inst "t=m_0_33"))
                                    (rule "replace_known_left" (formula "15") (term "0,1,0,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "15") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "15") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "15") (term "1,0,0,0") (ifseqformula "29"))
                                    (rule "concrete_or_4" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                                    (rule "allLeft" (formula "15") (inst "t=i_37"))
                                    (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "15") (term "1"))
                                    (rule "concrete_or_4" (formula "15"))
                                    (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "15") (term "0,0"))
                                    (rule "concrete_and_2" (formula "15") (term "0"))
                                    (rule "concrete_or_2" (formula "15"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "24") (inst "sk=h_5"))
                                 (rule "orRight" (formula "24"))
                                 (rule "orRight" (formula "25"))
                                 (rule "allRight" (formula "25") (inst "sk=other_5"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "allLeft" (formula "13") (inst "t=h_5"))
                                 (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "26"))
                                 (rule "concrete_or_2" (formula "13") (term "0,0,0"))
                                 (rule "allLeft" (formula "13") (inst "t=other_5"))
                                 (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "29"))
                                 (rule "concrete_or_4" (formula "13") (term "0"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                 (rule "concrete_or_2" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "close" (formula "23") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "24") (inst "sk=m_0_34"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "25"))
                              (rule "allLeft" (formula "9") (inst "t=m_0_34"))
                              (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "9") (term "1,0"))
                              (rule "concrete_or_4" (formula "9") (term "0"))
                              (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
                              (rule "concrete_or_2" (formula "9"))
                              (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "9"))
                              (rule "allLeft" (formula "7") (inst "t=m_0_34"))
                              (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "7") (term "0"))
                              (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "7") (term "0"))
                              (rule "concrete_or_2" (formula "7"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_34"))
                              (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "17") (term "0"))
                              (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "17") (term "0"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "close" (formula "25") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "24") (inst "sk=m_0_35"))
                           (rule "orRight" (formula "24"))
                           (rule "orRight" (formula "24"))
                           (rule "notRight" (formula "24"))
                           (rule "eqSymm" (formula "26") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,1,1"))
                           (rule "cut_direct" (formula "26") (term "0,0"))
                           (branch " CUT: m_0_35.min >= -1 TRUE"
                              (rule "concrete_and_1" (formula "27") (term "0"))
                              (rule "cut_direct" (formula "27") (term "0"))
                              (branch " CUT: m_0_35.size >= 1 + m_0_35.min TRUE"
                                 (rule "concrete_and_1" (formula "28"))
                                 (rule "andRight" (formula "28"))
                                 (branch " Case 1"
                                    (rule "equiv_right" (formula "28"))
                                    (branch " Case 1"
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "28"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_and_2" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "12") (term "1,0"))
                                       (rule "concrete_or_4" (formula "12") (term "0"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,0"))
                                       (rule "times_zero_1" (formula "16") (term "0"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "27") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "27"))
                                       (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "8") (ifseqformula "1") (ifseqformula "28"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "12") (term "0"))
                                       (rule "concrete_or_1" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_35"))
                                       (rule "exLeft" (formula "21") (inst "sk=i_49"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "27") (term "0,0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "27") (term "0,0"))
                                       (rule "concrete_or_2" (formula "27") (term "0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "27") (term "0"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0,0"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0"))
                                       (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "26") (term "1,0"))
                                       (rule "concrete_or_4" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "25") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "24") (term "1"))
                                       (rule "concrete_or_4" (formula "24"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "2"))
                                       (rule "concrete_or_3" (formula "25") (term "0"))
                                       (rule "concrete_or_1" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "24") (term "1"))
                                       (rule "concrete_or_4" (formula "24"))
                                       (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "39"))
                                       (rule "concrete_or_4" (formula "24"))
                                       (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "times_zero_2" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "2"))
                                       (rule "add_literals" (formula "22") (term "1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "22") (term "0,1"))
                                       (rule "eq_or" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch " Case 2"
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "29"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0"))
                                       (rule "leq_literals" (formula "29") (term "0"))
                                       (rule "concrete_and_2" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "equiv_right" (formula "28"))
                                    (branch " Case 1"
                                       (rule "notLeft" (formula "1"))
                                       (rule "allRight" (formula "29") (inst "sk=i_50"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "29"))
                                       (rule "orRight" (formula "30"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "inEqSimp_geqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_geqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "27"))
                                       (rule "add_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                       (rule "concrete_and_2" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_35"))
                                       (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0,0,0,0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "21") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                       (rule "inEqSimp_contradEq7" (formula "21") (term "1,0,0,0,0") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "21") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "14") (term "0"))
                                       (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "14") (term "0"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_1" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "21") (term "0"))
                                       (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "21") (term "0"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "allLeft" (formula "25") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "38"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "16") (term "1,0"))
                                       (rule "concrete_or_4" (formula "16") (term "0"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,0"))
                                       (rule "times_zero_1" (formula "22") (term "0"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "23") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "39"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                       (rule "allLeft" (formula "23") (inst "t=i_50"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "23") (term "0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "allLeft" (formula "23") (inst "t=m_0_35.min@(maze.Highscore)"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0,0"))
                                       (rule "concrete_or_2" (formula "23") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "allLeft" (formula "28") (inst "t=i_50"))
                                       (rule "eqSymm" (formula "28") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "43"))
                                       (rule "concrete_or_4" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "leq_literals" (formula "28") (term "0,1"))
                                       (rule "concrete_and_2" (formula "28") (term "1"))
                                       (rule "concrete_or_4" (formula "28"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "leq_literals" (formula "28") (term "0,1"))
                                       (rule "concrete_and_2" (formula "28") (term "1"))
                                       (rule "concrete_or_4" (formula "28"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_and_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch " Case 2"
                                       (rule "notRight" (formula "29"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "shift_paren_or" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "11") (term "1,0"))
                                       (rule "concrete_or_4" (formula "11") (term "0"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,0"))
                                       (rule "times_zero_1" (formula "15") (term "0"))
                                       (rule "qeq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "14"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=m_0_35"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "allLeft" (formula "10") (inst "t=m_0_35"))
                                       (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "10") (term "1,0"))
                                       (rule "concrete_or_4" (formula "10") (term "0"))
                                       (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "10"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,0,1,0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "28"))
                                       (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "2") (ifseqformula "29"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_35"))
                                       (rule "exLeft" (formula "22") (inst "sk=i_51"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "28") (term "0,0"))
                                       (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "28") (term "0,0"))
                                       (rule "concrete_or_2" (formula "28") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "28") (term "0"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0"))
                                       (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "29"))
                                       (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "27") (term "0,0"))
                                       (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "27") (term "1,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "25") (term "1,0"))
                                       (rule "concrete_or_4" (formula "25") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "25") (term "1"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "25"))
                                       (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "times_zero_2" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "23") (term "0,1"))
                                       (rule "eq_or" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "add_literals" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1"))
                                       (rule "mul_literals" (formula "24") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "mul_literals" (formula "23") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_and_2" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                       (rule "concrete_and_2" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_35.size >= 1 + m_0_35.min FALSE"
                                 (rule "concrete_and_2" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "17") (inst "t=m_0_35"))
                                 (rule "exLeft" (formula "17") (inst "sk=i_38"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "17") (term "1,0"))
                                 (rule "concrete_or_4" (formula "17") (term "0"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "23") (term "0,0"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "22") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0"))
                                 (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "20") (term "0,0"))
                                 (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_4" (formula "19") (term "0,0"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "19") (term "1,0"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_4" (formula "18") (term "0,0"))
                                 (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "18") (term "1,0"))
                                 (rule "concrete_or_4" (formula "18") (term "0"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "20") (term "0,0"))
                                 (rule "concrete_or_2" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " CUT: m_0_35.min >= -1 FALSE"
                              (rule "concrete_and_2" (formula "27") (term "0"))
                              (rule "concrete_and_2" (formula "27"))
                              (rule "false_right" (formula "27"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_35"))
                              (rule "exLeft" (formula "16") (inst "sk=i_39"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "16") (term "1,0"))
                              (rule "concrete_or_4" (formula "16") (term "0"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "23") (term "0,0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "23") (term "0,0"))
                              (rule "concrete_or_2" (formula "23") (term "0"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "22") (term "0,0"))
                              (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "21") (term "0,0"))
                              (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "20") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "20") (term "0,0"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "19") (term "1,0"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "20") (term "0"))
                              (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "34"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "34"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "22") (term "0,0"))
                              (rule "concrete_not_2" (formula "22") (term "0"))
                              (rule "concrete_or_1" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_contradEq3" (formula "19") (term "0,1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1"))
                              (rule "qeq_literals" (formula "19") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "19") (term "0,1"))
                              (rule "concrete_not_2" (formula "19") (term "1"))
                              (rule "concrete_or_3" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_contradEq3" (formula "21") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "21") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0,0"))
                              (rule "concrete_not_2" (formula "21") (term "0"))
                              (rule "concrete_or_1" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_contradEq3" (formula "20") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "20") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0,0"))
                              (rule "concrete_not_2" (formula "20") (term "0"))
                              (rule "concrete_or_1" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                              (rule "concrete_and_2" (formula "19") (term "0"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (rule "concrete_and_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_9 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " CUT: self.min >= self.capacity FALSE"
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "17") (ifseqformula "21"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "throwUnfold" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_12"))
                  (rule "instanceCreationAssignment" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_13"))
                  (rule "variableDeclarationAssign" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_13"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_14"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_14"))
                  (rule "methodBodyExpand" (formula "24") (term "3"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "__NEW___3"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "3") (inst "#v0=v_ArrayIndexOutOfBoundsException_15"))
                  (rule "variableDeclaration" (formula "24") (term "3") (newnames "v_ArrayIndexOutOfBoundsException_15"))
                  (rule "allocateInstance" (formula "24") (term "3") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "blockEmpty" (formula "24") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "7"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "polySimp_addComm0" (formula "24") (term "4"))
                  (rule "methodBodyExpand" (formula "24") (term "7"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "7"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "9"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallWithinClass" (formula "24") (term "11"))
                  (rule "methodBodyExpand" (formula "24") (term "11"))
                  (rule "methodCallSuper" (formula "24") (term "11"))
                  (rule "nextToCreate_non_negative" (formula "24") (term "0,5") (ifseqformula "3"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallSuper" (formula "25") (term "11"))
                  (rule "methodBodyExpand" (formula "25") (term "11"))
                  (rule "methodCallEmpty" (formula "25") (term "11"))
                  (rule "blockEmpty" (formula "25") (term "11"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "11"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "methodCallReturnIgnoreResult" (formula "25") (term "15"))
                  (rule "methodCallReturn" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallSuper" (formula "25") (term "15"))
                  (rule "methodBodyExpand" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "methodCallEmpty" (formula "25") (term "15"))
                  (rule "blockEmpty" (formula "25") (term "15"))
                  (rule "assignment_write_attribute_primitive" (formula "25") (term "15"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_13 != null)"
                     (builtin "Update Simplification" (formula "26"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25"))
                     (rule "false_right" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "methodCallParamThrow" (formula "25") (term "15"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "tryCatchThrow" (formula "25") (term "13"))
                     (rule "ifElseUnfold" (formula "25") (term "13") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "25") (term "13") (newnames "b_8"))
                     (rule "equality_comparison_new" (formula "25") (term "13"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25") (term "0,0"))
                     (rule "concrete_not_2" (formula "25") (term "0"))
                     (rule "ifthenelse_true_for" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "ifElse" (formula "25") (term "14"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "boolean_not_equal_2" (formula "25") (term "0"))
                     (rule "ifthenelse_false_for" (formula "25"))
                     (rule "elim_double_block" (formula "25") (term "13"))
                     (rule "ifElseSplit" (formula "25"))
                     (branch " if v_ArrayIndexOutOfBoundsException_12 instanceof  java.lang.Throwable true"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "repository_object_non_null" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "elim_double_block" (formula "26") (term "13"))
                        (rule "variableDeclaration" (formula "26") (term "13") (newnames "e_2"))
                        (rule "assignment_instance_field_of_this" (formula "26") (term "13"))
                        (builtin "Update Simplification" (formula "26"))
                        (rule "assignment_instance_field_of_this" (formula "26") (term "13"))
                        (builtin "Update Simplification" (formula "26"))
                        (rule "instanceof_static_type" (formula "1") (term "0"))
                        (rule "boolean_equal" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "emptyModality" (formula "25") (term "11"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "andRight" (formula "25"))
                        (branch " Case 1"
                           (rule "andRight" (formula "25"))
                           (branch " Case 1"
                              (rule "andRight" (formula "25"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "25"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "25"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_36"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_36.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_36"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_strengthen0" (formula "13") (ifseqformula "29"))
                                             (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "13"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "qeq_literals" (formula "29") (term "0"))
                                             (rule "concrete_and_2" (formula "29"))
                                             (rule "false_right" (formula "29"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_36"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "14"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "add_literals" (formula "14") (term "0"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                          (branch " CUT: m_0_36.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_36"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_36"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "14"))
                                             (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,0"))
                                             (rule "times_zero_1" (formula "14") (term "0"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_36"))
                                             (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "1,0"))
                                             (rule "concrete_or_4" (formula "8") (term "0"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_37"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_37.size <= m_0_37.capacity TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_37"))
                                             (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "12") (term "1,0"))
                                             (rule "concrete_or_4" (formula "12") (term "0"))
                                             (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                             (rule "concrete_and_2" (formula "12"))
                                             (rule "closeFalse" (formula "12"))
                                          )
                                          (branch " CUT: m_0_37.size <= m_0_37.capacity FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_37"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_37"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_37"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "15"))
                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_37"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "1,0"))
                                             (rule "concrete_or_4" (formula "14") (term "0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "1"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "14"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "leq_literals" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "25") (inst "sk=m_0_38"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_38"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "13"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=m_0_39"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "allRight" (formula "27") (inst "sk=i_48"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "29"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "allLeft" (formula "13") (inst "t=m_0_39"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "30"))
                                    (rule "concrete_or_2" (formula "13") (term "0"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "13") (term "0"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_39"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0"))
                                    (rule "concrete_or_4" (formula "16") (term "0"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "allLeft" (formula "18") (inst "t=m_0_39"))
                                    (rule "replace_known_right" (formula "18") (term "1,0,0,0,0") (ifseqformula "32"))
                                    (rule "concrete_or_4" (formula "18") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                    (rule "allLeft" (formula "18") (inst "t=i_48"))
                                    (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "18") (term "1"))
                                    (rule "concrete_or_4" (formula "18"))
                                    (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=h_6"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "26"))
                                 (rule "allRight" (formula "26") (inst "sk=other_6"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "notRight" (formula "26"))
                                 (rule "allLeft" (formula "14") (inst "t=h_6"))
                                 (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "27"))
                                 (rule "concrete_or_2" (formula "14") (term "0,0,0"))
                                 (rule "allLeft" (formula "14") (inst "t=other_6"))
                                 (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "30"))
                                 (rule "concrete_or_4" (formula "14") (term "0"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "close" (formula "24") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "25") (inst "sk=m_0_40"))
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "allLeft" (formula "13") (inst "t=m_0_40"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "13") (term "1,0"))
                              (rule "concrete_or_4" (formula "13") (term "0"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "allLeft" (formula "10") (inst "t=m_0_40"))
                              (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "10") (term "0"))
                              (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "10") (term "0"))
                              (rule "concrete_or_2" (formula "10"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "1,0"))
                              (rule "times_zero_1" (formula "14") (term "0"))
                              (rule "leq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_40"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "close" (formula "25") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "25") (inst "sk=m_0_41"))
                           (rule "orRight" (formula "25"))
                           (rule "orRight" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "eqSymm" (formula "27") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1,1,1"))
                           (rule "cut_direct" (formula "27") (term "0,0"))
                           (branch " CUT: m_0_41.min >= -1 TRUE"
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch " CUT: m_0_41.size >= 1 + m_0_41.min TRUE"
                                 (rule "concrete_and_1" (formula "29"))
                                 (rule "andRight" (formula "29"))
                                 (branch " Case 1"
                                    (rule "equiv_right" (formula "29"))
                                    (branch " Case 1"
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "29"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "leq_literals" (formula "29") (term "0"))
                                       (rule "concrete_and_2" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "12") (term "1,0"))
                                       (rule "concrete_or_4" (formula "12") (term "0"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "17"))
                                       (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,0"))
                                       (rule "times_zero_1" (formula "17") (term "0"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "12") (term "0,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "28"))
                                       (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "12") (ifseqformula "29"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_41"))
                                       (rule "exLeft" (formula "22") (inst "sk=i_47"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "0"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "28") (term "0,0"))
                                       (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "28") (term "0,0"))
                                       (rule "concrete_or_2" (formula "28") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "28") (term "0"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "27") (term "1,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "29") (term "0,0"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "41"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "25") (term "1"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "26") (term "1,0"))
                                       (rule "concrete_or_4" (formula "26") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "28") (term "0"))
                                       (rule "concrete_or_2" (formula "28"))
                                       (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "40"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "25") (term "1"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "25"))
                                       (rule "applyEq" (formula "24") (term "0,0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "24") (term "0,1"))
                                       (rule "eq_or" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch " Case 2"
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "30"))
                                       (rule "add_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0"))
                                       (rule "qeq_literals" (formula "30") (term "0"))
                                       (rule "concrete_and_2" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "equiv_right" (formula "29"))
                                    (branch " Case 1"
                                       (rule "notLeft" (formula "1"))
                                       (rule "allRight" (formula "30") (inst "sk=i_40"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "30"))
                                       (rule "orRight" (formula "31"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "33"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "28"))
                                       (rule "add_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "5"))
                                       (rule "add_zero_left" (formula "28") (term "0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,0"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_and_2" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "allLeft" (formula "24") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "allLeft" (formula "23") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0,0,0") (ifseqformula "38"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq0" (formula "22"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,0"))
                                       (rule "times_zero_1" (formula "22") (term "0"))
                                       (rule "qeq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "19") (term "0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (rule "concrete_or_1" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "allLeft" (formula "29") (inst "t=m_0_41"))
                                       (rule "eqSymm" (formula "29") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "40"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0,0,0") (ifseqformula "8"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                       (rule "allLeft" (formula "29") (inst "t=i_40"))
                                       (rule "eqSymm" (formula "29") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "42"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "29") (term "0,0"))
                                       (rule "concrete_or_2" (formula "29") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (rule "concrete_and_2" (formula "29") (term "1"))
                                       (rule "concrete_or_4" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "29"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch " Case 2"
                                       (rule "notRight" (formula "30"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "shift_paren_or" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "12") (term "1,0"))
                                       (rule "concrete_or_4" (formula "12") (term "0"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,0"))
                                       (rule "times_zero_1" (formula "16") (term "0"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_41"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,0,1,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "29"))
                                       (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "9") (ifseqformula "2") (ifseqformula "30"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_41"))
                                       (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                       (rule "allLeft" (formula "24") (inst "t=m_0_41"))
                                       (rule "exLeft" (formula "24") (inst "sk=i_41"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "43"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "25") (term "0"))
                                       (rule "concrete_or_2" (formula "25"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "43"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "43"))
                                       (rule "concrete_or_2" (formula "31") (term "0,0"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "31") (term "0,0"))
                                       (rule "concrete_or_2" (formula "31") (term "0"))
                                       (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "31") (term "0"))
                                       (rule "concrete_or_2" (formula "31"))
                                       (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "43"))
                                       (rule "concrete_or_2" (formula "30") (term "0,0"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "43"))
                                       (rule "concrete_or_2" (formula "29") (term "0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "29") (term "0"))
                                       (rule "concrete_or_2" (formula "29"))
                                       (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "28") (term "0"))
                                       (rule "concrete_or_1" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "29") (term "0,0"))
                                       (rule "concrete_or_2" (formula "29") (term "0"))
                                       (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "27") (term "1"))
                                       (rule "concrete_or_4" (formula "27"))
                                       (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "42"))
                                       (rule "concrete_or_4" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "26") (term "1,0"))
                                       (rule "concrete_or_4" (formula "26") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "29") (term "0"))
                                       (rule "concrete_or_2" (formula "29"))
                                       (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "42"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "27") (term "1"))
                                       (rule "concrete_or_4" (formula "27"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "1"))
                                       (rule "add_literals" (formula "23") (term "1"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "times_zero_2" (formula "27") (term "1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "23") (term "0,1"))
                                       (rule "eq_or" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (rule "concrete_and_2" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                       (rule "concrete_and_2" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_41.size >= 1 + m_0_41.min FALSE"
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "18") (inst "t=m_0_41"))
                                 (rule "exLeft" (formula "18") (inst "sk=i_42"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "36"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "36"))
                                 (rule "concrete_or_2" (formula "18") (term "0"))
                                 (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "18") (term "0"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "24") (term "0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "24") (term "0,0"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "23") (term "0,0"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "22") (term "0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0,0"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "19") (term "1,0"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "35"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                           (branch " CUT: m_0_41.min >= -1 FALSE"
                              (rule "concrete_and_2" (formula "28") (term "0"))
                              (rule "concrete_and_2" (formula "28"))
                              (rule "false_right" (formula "28"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_41"))
                              (rule "exLeft" (formula "17") (inst "sk=i_43"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "24") (term "0,0"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "24") (term "0,0"))
                              (rule "concrete_or_2" (formula "24") (term "0"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "23") (term "0,0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "23") (term "0,0"))
                              (rule "concrete_or_2" (formula "23") (term "0"))
                              (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "22") (term "0,0"))
                              (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "21") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "21") (term "0,0"))
                              (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "20") (term "1,0"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                              (rule "concrete_not_1" (formula "19") (term "1,0"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "21") (term "0"))
                              (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "35"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "35"))
                              (rule "concrete_or_4" (formula "20") (term "0"))
                              (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "24") (term "0,0"))
                              (rule "concrete_not_2" (formula "24") (term "0"))
                              (rule "concrete_or_1" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_contradEq3" (formula "21") (term "0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0"))
                              (rule "qeq_literals" (formula "21") (term "0,0"))
                              (rule "concrete_and_2" (formula "21") (term "0"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "30"))
                              (rule "concrete_or_4" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "29"))
                              (rule "concrete_not_2" (formula "20") (term "1"))
                              (rule "concrete_or_3" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "28"))
                              (rule "concrete_not_2" (formula "20") (term "0"))
                              (rule "concrete_or_1" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "1"))
                              (rule "mul_literals" (formula "27") (term "1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                              (rule "concrete_and_2" (formula "27"))
                              (rule "false_right" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (rule "concrete_and_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch " if v_ArrayIndexOutOfBoundsException_12 instanceof  java.lang.Throwable false"
                        (rule "false_to_not_true" (formula "1") (term "13"))
                        (builtin "Update Simplification" (formula "26"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "repository_object_non_null" (formula "22") (term "0,0"))
                        (rule "ifthenelse_false" (formula "22") (term "0"))
                        (rule "blockThrow" (formula "26") (term "12"))
                        (rule "throwBox" (formula "26") (term "12"))
                        (builtin "Update Simplification" (formula "26"))
                        (rule "closeTrue" (formula "26"))
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_13 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch " Null Reference (_rec = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close" (formula "20") (ifseqformula "1"))
         )
      )
   )
)
(branch " self.size <= -1 + self.capacity & !rec = null"
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "10"))
   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "12"))
   (rule "concrete_or_4" (formula "11"))
   (rule "shift_paren_or" (formula "8") (term "0,0,1,1,1,1,0"))
   (rule "cnf_eqv" (formula "8") (term "0,1,1,0"))
   (rule "commute_or_2" (formula "6") (term "0,1,1,0"))
   (rule "commute_or" (formula "8") (term "0,0,0,1,1,1,1,0"))
   (rule "cnf_rightDist" (formula "2") (term "0"))
   (rule "distr_forallAnd" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "commute_or" (formula "3") (term "0"))
   (rule "cnf_rightDist" (formula "4") (term "0"))
   (rule "distr_forallAnd" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "commute_or" (formula "5") (term "0"))
   (rule "cnf_eqv" (formula "10") (term "1,1,1,0"))
   (rule "double_not" (formula "10") (term "0,1,1,1,1,0"))
   (rule "nnf_notAll" (formula "10") (term "1,0,1,1,1,0"))
   (rule "nnf_notOr" (formula "10") (term "0,1,0,1,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,1,0,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
   (rule "nnf_notOr" (formula "10") (term "0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
   (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,1,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1,0,1,1,1,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,1,0,1,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,1,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,1,1,1,0"))
   (rule "all_pull_out3" (formula "7") (term "0"))
   (rule "shift_paren_or" (formula "7") (term "0,0"))
   (rule "shift_paren_or" (formula "7") (term "0,0,0"))
   (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
   (rule "commute_or" (formula "7") (term "0,0,0,0,0"))
   (rule "all_pull_out3" (formula "8") (term "1,0"))
   (rule "shift_paren_or" (formula "8") (term "0,1,0"))
   (rule "shift_paren_or" (formula "8") (term "0,0,1,0"))
   (rule "all_pull_out3" (formula "10") (term "1,1,1,1,0"))
   (rule "shift_paren_or" (formula "10") (term "0,1,1,1,1,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0,1,1,1,1,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0,0,1,1,1,1,0"))
   (rule "commute_or" (formula "10") (term "0,0,0,0,1,1,1,1,0"))
   (rule "ex_pull_out3" (formula "10") (term "0,1,1,1,0"))
   (rule "cnf_rightDist" (formula "10") (term "0,0,1,1,1,0"))
   (rule "commute_or" (formula "10") (term "1,0,0,1,1,1,0"))
   (rule "cnf_rightDist" (formula "10") (term "0,0,0,1,1,1,0"))
   (rule "commute_or" (formula "10") (term "1,0,0,0,1,1,1,0"))
   (rule "cnf_rightDist" (formula "10") (term "0,0,0,0,1,1,1,0"))
   (rule "commute_or" (formula "10") (term "0,0,0,0,0,1,1,1,0"))
   (rule "commute_or" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
   (rule "applyEq_or_gen2" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
   (rule "commute_and" (formula "10") (term "0,0,0,0,1,1,1,0"))
   (rule "ex_pull_out0" (formula "10") (term "1,1,1,0"))
   (rule "all_pull_out3" (formula "8") (term "0"))
   (rule "shift_paren_or" (formula "8") (term "0,0"))
   (rule "shift_paren_or" (formula "8") (term "0,0,0"))
   (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
   (rule "eq_or" (formula "8") (term "0,0,0,0,0"))
   (rule "all_pull_out1" (formula "10") (term "0,1,1,1,0"))
   (rule "ex_pull_out1" (formula "10") (term "1,1,0"))
   (rule "all_pull_out1" (formula "10") (term "0,1,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,1,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,1,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,1,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,1,1,0"))
   (rule "commute_and" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
   (rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
   (rule "ex_pull_out1" (formula "10") (term "1,0"))
   (rule "all_pull_out1" (formula "10") (term "0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,1,0"))
   (rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
   (rule "ex_pull_out3" (formula "10") (term "0"))
   (rule "allLeft" (formula "6") (inst "t=self"))
   (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "16"))
   (rule "concrete_or_2" (formula "6") (term "0"))
   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "13"))
   (rule "concrete_not_1" (formula "6") (term "0"))
   (rule "concrete_or_2" (formula "6"))
   (rule "all_pull_out3" (formula "11") (term "0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
   (rule "distr_forallAnd" (formula "11") (term "0,0"))
   (rule "distr_existsAnd1" (formula "11") (term "0"))
   (rule "distr_forallAnd" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "commute_or_2" (formula "12") (term "0,0"))
   (rule "commute_or_2" (formula "12") (term "0,0,0"))
   (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "12") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0"))
   (rule "commute_or" (formula "11") (term "0,1,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0,0"))
   (rule "commute_or" (formula "11") (term "0,1,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0"))
   (rule "commute_or" (formula "11") (term "0,1,0,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0"))
   (rule "commute_or" (formula "11") (term "0,1,0,0,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0"))
   (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
   (rule "shift_paren_or" (formula "11") (term "0,1,0,0,0,0,0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0,0,0,0,0,0,0,0"))
   (rule "commute_or" (formula "11") (term "1,0,0,0,0,0,0,0,0,0"))
   (rule "all_unused" (formula "11") (term "0,0"))
   (rule "allLeft" (formula "3") (inst "t=self"))
   (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
   (rule "concrete_or_2" (formula "3") (term "0"))
   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "15"))
   (rule "concrete_not_1" (formula "3") (term "0"))
   (rule "concrete_or_2" (formula "3"))
   (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq0" (formula "7"))
   (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
   (rule "add_literals" (formula "7") (term "1,0"))
   (rule "times_zero_1" (formula "7") (term "0"))
   (rule "qeq_literals" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "allLeft" (formula "2") (inst "t=self"))
   (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "15"))
   (rule "concrete_not_1" (formula "2") (term "1,0"))
   (rule "concrete_or_4" (formula "2") (term "0"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "18"))
   (rule "concrete_or_2" (formula "2"))
   (rule "allLeft" (formula "6") (inst "t=self"))
   (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "19"))
   (rule "concrete_or_2" (formula "6") (term "0"))
   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "16"))
   (rule "concrete_not_1" (formula "6") (term "0"))
   (rule "concrete_or_2" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "15"))
   (rule "times_zero_1" (formula "6") (term "0,0"))
   (rule "add_zero_left" (formula "6") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1"))
   (rule "methodBodyExpand" (formula "20") (term "2"))
   (rule "ifElseUnfold" (formula "20") (term "2") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "20") (term "2") (newnames "b"))
   (rule "less_than_comparison_new" (formula "20") (term "2"))
   (builtin "Update Simplification" (formula "20"))
   (rule "assignment_instance_field_of_this" (formula "20") (term "2,1"))
   (builtin "Update Simplification" (formula "20"))
   (rule "assignment_instance_field_of_this" (formula "20") (term "2,2"))
   (builtin "Update Simplification" (formula "20"))
   (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
   (rule "mul_literals" (formula "20") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "15"))
   (rule "ifthenelse_true_for" (formula "20"))
   (rule "allLeft" (formula "12") (inst "t=self"))
   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "20"))
   (rule "concrete_or_2" (formula "12") (term "0"))
   (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "17"))
   (rule "concrete_not_1" (formula "12") (term "0"))
   (rule "concrete_or_2" (formula "12"))
   (rule "notLeft" (formula "12"))
   (rule "ifElse" (formula "21") (term "3"))
   (builtin "Update Simplification" (formula "21"))
   (rule "boolean_equal" (formula "21") (term "0"))
   (rule "ifthenelse_true_for" (formula "21"))
   (rule "assignment_to_reference_array_component_no_rtsj" (formula "21") (term "2"))
   (branch " Normal Execution (highscores != null)"
      (builtin "Update Simplification" (formula "22"))
      (builtin "Update Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "array_store_static_analyse" (formula "1") (ifseqformula "19"))
      (rule "true_left" (formula "1"))
      (rule "ifUnfold" (formula "21") (term "4") (inst "#boolv=b"))
      (rule "variableDeclaration" (formula "21") (term "4") (newnames "b_3"))
      (rule "compound_less_than_comparison_2" (formula "21") (term "4") (inst "#v1=j_1") (inst "#v0=j"))
      (rule "variableDeclarationAssign" (formula "21") (term "4"))
      (rule "variableDeclaration" (formula "21") (term "4") (newnames "j_2"))
      (rule "methodCallWithAssignmentUnfoldTarget" (formula "21") (term "4") (inst "#v0=v_Record"))
      (rule "variableDeclaration" (formula "21") (term "4") (newnames "v_Record"))
      (rule "assignment_array2" (formula "21") (term "4"))
      (branch " Normal Execution (highscores != null)"
         (builtin "Update Simplification" (formula "22"))
         (builtin "Update Simplification" (formula "21"))
         (rule "orRight" (formula "21"))
         (rule "orRight" (formula "21"))
         (rule "inEqSimp_ltRight" (formula "22"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "21"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "methodCallWithAssignment" (formula "21") (term "5") (inst "#v0=j_3"))
         (branch " Normal Execution (v_Record != null)"
            (builtin "Update Simplification" (formula "21"))
            (rule "variableDeclaration" (formula "21") (term "5") (newnames "j_3"))
            (rule "methodBodyExpand" (formula "21") (term "5"))
            (rule "methodCallReturn" (formula "21") (term "5"))
            (rule "assignment_instance_field_of_this" (formula "21") (term "5"))
            (builtin "Update Simplification" (formula "21"))
            (rule "methodCallEmpty" (formula "21") (term "6"))
            (builtin "Update Simplification" (formula "21"))
            (rule "blockEmpty" (formula "21") (term "5"))
            (rule "assignment_instance_field_of_this" (formula "21") (term "5"))
            (builtin "Update Simplification" (formula "21"))
            (rule "variableDeclarationAssign" (formula "21") (term "5"))
            (rule "variableDeclaration" (formula "21") (term "5") (newnames "j_1"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "21") (term "5") (inst "#v0=v_Record"))
            (rule "variableDeclaration" (formula "21") (term "5") (newnames "v_Record_1"))
            (rule "assignment_array2" (formula "21") (term "5"))
            (branch " Normal Execution (highscores != null)"
               (builtin "Update Simplification" (formula "22"))
               (builtin "Update Simplification" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "orRight" (formula "21"))
               (rule "eqSymm" (formula "23") (term "0,2"))
               (rule "inEqSimp_ltRight" (formula "22"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "22"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
               (rule "times_zero_1" (formula "2") (term "0,0"))
               (rule "add_zero_left" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "methodCallWithAssignment" (formula "23") (term "6") (inst "#v0=j_3"))
               (branch " Normal Execution (v_Record_1 != null)"
                  (builtin "Update Simplification" (formula "23"))
                  (rule "variableDeclaration" (formula "24") (term "6") (newnames "j_4"))
                  (rule "ifthenelse_split" (formula "23") (term "0"))
                  (branch " self.size = self.min TRUE"
                     (rule "replace_known_left" (formula "24") (term "0,2") (ifseqformula "1"))
                     (rule "ifthenelse_true" (formula "24") (term "2"))
                     (rule "applyEq" (formula "24") (term "4") (ifseqformula "1"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                     (rule "allLeft" (formula "10") (inst "t=self"))
                     (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "18"))
                     (rule "concrete_not_1" (formula "10") (term "1,0"))
                     (rule "concrete_or_4" (formula "10") (term "0"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "22"))
                     (rule "concrete_or_2" (formula "10"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "only_created_object_are_referenced_non_null" (formula "7") (term "0,0") (ifseqformula "17") (ifseqformula "4") (ifseqformula "19"))
                     (rule "methodBodyExpand" (formula "23") (term "6"))
                     (rule "methodCallReturn" (formula "23") (term "6"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "6"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "methodCallEmpty" (formula "23") (term "7"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "blockEmpty" (formula "23") (term "6"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "6"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "less_than_comparison_new" (formula "23") (term "6"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "4,2"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "4,1"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "ifthenelse_false_for" (formula "23"))
                     (rule "ifSplit" (formula "23"))
                     (branch " if b_3 true"
                        (builtin "Update Simplification" (formula "24"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_3 false"
                        (rule "false_to_not_true" (formula "1") (term "5"))
                        (builtin "Update Simplification" (formula "24"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "postincrement" (formula "23") (term "4"))
                        (rule "compound_int_cast_expression" (formula "23") (term "4") (inst "#v=j"))
                        (rule "variableDeclarationAssign" (formula "23") (term "4"))
                        (rule "variableDeclaration" (formula "23") (term "4") (newnames "j_12"))
                        (rule "remove_parentheses_right" (formula "23") (term "4"))
                        (rule "assignmentAdditionInt" (formula "23") (term "4"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "translateJavaAddInt" (formula "23") (term "1"))
                        (rule "polySimp_addComm0" (formula "23") (term "1"))
                        (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "1"))
                        (rule "widening_identity_cast_5" (formula "23") (term "5"))
                        (rule "assignment_instance_field_of_this" (formula "23") (term "5"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "methodCallReturn" (formula "23") (term "6"))
                        (rule "assignment_instance_field_of_this" (formula "23") (term "6"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "methodCallEmpty" (formula "23") (term "6"))
                        (rule "tryEmpty" (formula "23") (term "6"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "castDelInt" (formula "23") (term "1"))
                        (rule "emptyModality" (formula "23") (term "5"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "andRight" (formula "23"))
                        (branch " Case 1"
                           (rule "andRight" (formula "23"))
                           (branch " Case 1"
                              (rule "andRight" (formula "23"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "23"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "23"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "23"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "23") (inst "sk=m_0_12"))
                                          (rule "orRight" (formula "23"))
                                          (rule "orRight" (formula "23"))
                                          (rule "notRight" (formula "23"))
                                          (rule "cut_direct" (formula "25") (term "0"))
                                          (branch " CUT: m_0_12.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "26"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_12"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "11") (term "0"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "0"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "close" (formula "27") (ifseqformula "11"))
                                          )
                                          (branch " CUT: m_0_12.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "26"))
                                             (rule "false_right" (formula "26"))
                                             (rule "inEqSimp_geqRight" (formula "25"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_12"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "11") (term "0"))
                                             (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "0"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_12"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (rule "concrete_and_2" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "23") (inst "sk=m_0_13"))
                                          (rule "orRight" (formula "23"))
                                          (rule "orRight" (formula "23"))
                                          (rule "notRight" (formula "23"))
                                          (rule "eqSymm" (formula "25") (term "0,0,0"))
                                          (rule "eqSymm" (formula "25") (term "0,0,1"))
                                          (rule "ifthenelse_split" (formula "25") (term "0,0"))
                                          (branch " self = m_0_13 TRUE"
                                             (rule "castDelInt" (formula "26") (term "0,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "26") (term "0,1"))
                                             (rule "castDelInt" (formula "26") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                             (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                             (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "4"))
                                             (rule "concrete_and_1" (formula "24"))
                                             (rule "inEqSimp_geqRight" (formula "24"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " self = m_0_13 FALSE"
                                             (rule "replace_known_right" (formula "26") (term "0,0,1") (ifseqformula "25"))
                                             (rule "ifthenelse_false" (formula "26") (term "0,1"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_13"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "25"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_13"))
                                             (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "26"))
                                             (rule "concrete_or_2" (formula "16") (term "0,0,0"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_13"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "14") (term "1,0"))
                                             (rule "concrete_or_4" (formula "14") (term "0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "14"))
                                             (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,0"))
                                             (rule "times_zero_1" (formula "14") (term "0"))
                                             (rule "qeq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_13"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "13"))
                                             (rule "concrete_and_1" (formula "29"))
                                             (rule "inEqSimp_geqRight" (formula "29"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_13"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "23") (inst "sk=m_0_14"))
                                       (rule "orRight" (formula "23"))
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_14"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "11") (term "1,0"))
                                       (rule "concrete_or_4" (formula "11") (term "0"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "23") (inst "sk=m_0_15"))
                                    (rule "orRight" (formula "23"))
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "allRight" (formula "25") (inst "sk=i_10"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "27"))
                                    (rule "eqSymm" (formula "27") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " self = m_0_15 TRUE"
                                       (rule "castDelInt" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (rule "eqClose" (formula "4") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "8") (term "0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (rule "concrete_or_1" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_15"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "18"))
                                       (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,0"))
                                       (rule "times_zero_1" (formula "18") (term "0"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " m_0_15.min = i_10 TRUE"
                                          (rule "close" (formula "27") (ifseqformula "6"))
                                       )
                                       (branch " m_0_15.min = i_10 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "25"))
                                          (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                          (rule "concrete_and_2" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "19") (inst "t=m_0_15"))
                                          (rule "replace_known_left" (formula "19") (term "0,1,0,0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "19") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "19") (term "1,0,0,0") (ifseqformula "28"))
                                          (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                          (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "7"))
                                          (rule "allLeft" (formula "19") (inst "t=i_10"))
                                          (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (rule "concrete_and_2" (formula "19") (term "0"))
                                          (rule "concrete_or_2" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "3"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "19"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0"))
                                          (rule "leq_literals" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                    )
                                    (branch " self = m_0_15 FALSE"
                                       (rule "allLeft" (formula "15") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_15"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "times_zero_1" (formula "21") (term "0"))
                                       (rule "qeq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "allLeft" (formula "24") (inst "t=m_0_15"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch " self.min = i_10 & self.highscores = m_0_15.highscores TRUE"
                                          (rule "close" (formula "33") (ifseqformula "5"))
                                       )
                                       (branch " self.min = i_10 & self.highscores = m_0_15.highscores FALSE"
                                          (rule "allLeft" (formula "22") (inst "t=m_0_15"))
                                          (rule "replace_known_left" (formula "22") (term "0,1,0,0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "22") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "36"))
                                          (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                          (rule "allLeft" (formula "11") (inst "t=m_0_15"))
                                          (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "37"))
                                          (rule "concrete_or_2" (formula "11") (term "0"))
                                          (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "11") (term "0"))
                                          (rule "concrete_or_2" (formula "11"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (rule "concrete_or_1" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "24") (inst "t=m_0_15"))
                                          (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "37"))
                                          (rule "concrete_or_2" (formula "24") (term "0,0,0"))
                                          (rule "allLeft" (formula "22") (inst "t=i_10"))
                                          (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (rule "concrete_and_2" (formula "22") (term "0"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_literals" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "23") (inst "sk=h_2"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "24"))
                                 (rule "allRight" (formula "24") (inst "sk=other_2"))
                                 (rule "orRight" (formula "24"))
                                 (rule "orRight" (formula "24"))
                                 (rule "notRight" (formula "24"))
                                 (rule "allLeft" (formula "15") (inst "t=h_2"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "25"))
                                 (rule "concrete_or_2" (formula "15") (term "0,0,0"))
                                 (rule "allLeft" (formula "15") (inst "t=other_2"))
                                 (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "15") (term "1"))
                                 (rule "concrete_or_4" (formula "15"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "close" (formula "28") (ifseqformula "15"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "23") (inst "sk=m_0_16"))
                              (rule "orRight" (formula "23"))
                              (rule "notRight" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "24"))
                              (rule "allLeft" (formula "11") (inst "t=m_0_16"))
                              (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "26"))
                              (rule "concrete_or_2" (formula "11") (term "0"))
                              (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "11") (term "0"))
                              (rule "concrete_or_2" (formula "11"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "11"))
                              (rule "allLeft" (formula "18") (inst "t=m_0_16"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "27"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "close" (formula "23") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "23") (inst "sk=m_0_17"))
                           (rule "orRight" (formula "23"))
                           (rule "orRight" (formula "23"))
                           (rule "notRight" (formula "23"))
                           (rule "eqSymm" (formula "25") (term "0,0,1,1,0,0,1,1,1"))
                           (rule "eqSymm" (formula "25") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "25") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "eqSymm" (formula "25") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "25") (term "0,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "25") (term "0,0,0,1,1,1"))
                           (rule "eqSymm" (formula "25") (term "0,0,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,1,1,1"))
                           (rule "ifthenelse_split" (formula "25") (term "0,1,0"))
                           (branch " self = m_0_17 TRUE"
                              (rule "castDelInt" (formula "26") (term "0,1,0"))
                              (rule "replace_known_left" (formula "26") (term "0,0,1,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "26") (term "0,1,0,1"))
                              (rule "castDelInt" (formula "26") (term "0,1,0,1"))
                              (rule "replace_known_left" (formula "26") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "26") (term "1,1,1,0,0,1,1,1"))
                              (rule "castDelInt" (formula "26") (term "1,1,1,0,0,1,1,1"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,1,0"))
                              (rule "applyEq" (formula "26") (term "0,1,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,0,1,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                              (rule "add_literals" (formula "26") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "26") (term "0,1,0"))
                              (rule "leq_literals" (formula "26") (term "1,0"))
                              (rule "concrete_and_3" (formula "26") (term "0"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,0,0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "26") (term "0,0,0,0,1,0,1,1,1"))
                              (rule "concrete_and_1" (formula "26") (term "0,0,0,1,0,1,1,1"))
                              (rule "applyEq" (formula "26") (term "0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0,0,0,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "24") (term "0,0,0,1,1,0,1,1,1"))
                              (rule "concrete_and_1" (formula "24") (term "0,0,1,1,0,1,1,1"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0,0,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "24") (term "0,0,1,1,0,1,1,1"))
                              (rule "ifthenelse_true" (formula "24") (term "0,1,1,0,1,1,1"))
                              (rule "polySimp_sepPosMonomial" (formula "24") (term "1,0,1"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,1"))
                              (rule "eq_eq" (formula "24") (term "0,1"))
                              (rule "concrete_and_1" (formula "24") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "24") (term "0,0,1") (ifseqformula "5"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0,0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                              (rule "leq_literals" (formula "24") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "24") (term "0,0,1"))
                              (rule "concrete_not_2" (formula "24") (term "0,1"))
                              (rule "concrete_eq_1" (formula "24") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "24") (term "0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "24") (term "0,0"))
                              (rule "concrete_or_1" (formula "24") (term "0"))
                              (rule "concrete_and_1" (formula "24"))
                              (rule "allRight" (formula "24") (inst "sk=i_11"))
                              (rule "orRight" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "orRight" (formula "25"))
                              (rule "eqSymm" (formula "27") (term "0,0,0"))
                              (rule "eqSymm" (formula "24"))
                              (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "24"))
                              (rule "ifthenelse_false" (formula "27") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "27"))
                              (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0"))
                              (rule "leq_literals" (formula "27") (term "0"))
                              (rule "concrete_and_2" (formula "27"))
                              (rule "false_right" (formula "27"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                              (rule "times_zero_1" (formula "8") (term "0,0"))
                              (rule "add_zero_left" (formula "8") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_17"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                              (rule "concrete_or_1" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_17"))
                              (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "16") (term "0"))
                              (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "16") (term "0"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                              (rule "allLeft" (formula "18") (inst "t=m_0_17"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,0"))
                              (rule "times_zero_1" (formula "18") (term "0"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "only_created_object_are_referenced_non_null" (formula "13") (term "0,0") (ifseqformula "6") (ifseqformula "10") (ifseqformula "25"))
                              (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "10") (ifseqformula "13") (ifseqformula "25"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (rule "concrete_or_1" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "allLeft" (formula "19") (inst "t=m_0_17"))
                              (rule "replace_known_right" (formula "19") (term "1,0,0,0,0") (ifseqformula "28"))
                              (rule "concrete_or_4" (formula "19") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0,0,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "19") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "allLeft" (formula "19") (inst "t=i_11"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "19") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "19") (term "0,0"))
                              (rule "concrete_or_2" (formula "19") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "leq_literals" (formula "19") (term "0,0"))
                              (rule "concrete_and_2" (formula "19") (term "0"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "26") (term "0") (ifseqformula "13") (ifseqformula "10") (ifseqformula "26"))
                              (rule "allLeft" (formula "25") (inst "t=m_0_17"))
                              (rule "eqSymm" (formula "25") (term "1,0,0,0"))
                              (rule "replace_known_left" (formula "25") (term "0,1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "concrete_or_4" (formula "25") (term "0,0,0,0,0"))
                              (rule "replace_known_right" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "31"))
                              (rule "concrete_or_4" (formula "25") (term "0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                              (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_contradEq7" (formula "25") (term "1,0,0,0,0") (ifseqformula "10"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "25") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "25") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0"))
                              (rule "inEqSimp_or_subsumption7" (formula "25") (term "0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "25") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                              (rule "qeq_literals" (formula "25") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "25") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "25") (term "0,0"))
                              (rule "allLeft" (formula "25") (inst "t=i_11"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "25") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "25") (term "1,0"))
                              (rule "concrete_or_4" (formula "25") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "25") (term "0,0"))
                              (rule "concrete_and_2" (formula "25") (term "0"))
                              (rule "concrete_or_2" (formula "25"))
                              (rule "allLeft" (formula "24") (inst "t=m_0_17"))
                              (rule "exLeft" (formula "24") (inst "sk=i_66"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "andLeft" (formula "24"))
                              (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "24") (term "0"))
                              (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "24") (term "0"))
                              (rule "concrete_or_2" (formula "24"))
                              (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "25") (term "0"))
                              (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "25") (term "0"))
                              (rule "concrete_or_2" (formula "25"))
                              (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "31") (term "0,0"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "31") (term "0,0"))
                              (rule "concrete_or_2" (formula "31") (term "0"))
                              (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "30") (term "0,0"))
                              (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "29") (term "0,0"))
                              (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "28") (term "0,0"))
                              (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "40"))
                              (rule "concrete_or_4" (formula "27") (term "0,0"))
                              (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "27") (term "1,0"))
                              (rule "concrete_or_4" (formula "27") (term "0"))
                              (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "40"))
                              (rule "concrete_or_4" (formula "26") (term "0,0"))
                              (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "26") (term "1,0"))
                              (rule "concrete_or_4" (formula "26") (term "0"))
                              (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "40"))
                              (rule "concrete_or_2" (formula "29") (term "0"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "28") (term "0,0"))
                              (rule "concrete_or_2" (formula "28") (term "0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "closeFalse" (formula "25"))
                           )
                           (branch " self = m_0_17 FALSE"
                              (rule "replace_known_right" (formula "26") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "25"))
                              (rule "ifthenelse_false" (formula "26") (term "1,1,1,0,0,1,1,1"))
                              (rule "replace_known_right" (formula "26") (term "0,0,1,0,1") (ifseqformula "25"))
                              (rule "ifthenelse_false" (formula "26") (term "0,1,0,1"))
                              (rule "cut_direct" (formula "26") (term "0,0"))
                              (branch " CUT: m_0_17.min >= -1 TRUE"
                                 (rule "concrete_and_1" (formula "27") (term "0"))
                                 (rule "ifthenelse_split" (formula "27") (term "0,1,1,0,1,1,1"))
                                 (branch "   self.highscores = m_0_17.highscores
& self.min = m_0_17.min TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "concrete_and_1" (formula "29") (term "0,0,0,1,0,1,1,1"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "29") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1,1") (ifseqformula "7"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "29") (term "0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0,1,1"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,1,1"))
                                    (rule "concrete_not_2" (formula "29") (term "0,1,1"))
                                    (rule "concrete_eq_1" (formula "29") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0,1"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,1"))
                                    (rule "concrete_eq_2" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0,0") (ifseqformula "27"))
                                    (rule "concrete_or_2" (formula "17") (term "0,0,0"))
                                    (rule "cut_direct" (formula "29") (term "0"))
                                    (branch " CUT: m_0_17.size >= 1 + m_0_17.min TRUE"
                                       (rule "concrete_and_1" (formula "30"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_17"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "allLeft" (formula "19") (inst "t=self"))
                                       (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "close" (formula "26") (ifseqformula "2"))
                                    )
                                    (branch " CUT: m_0_17.size >= 1 + m_0_17.min FALSE"
                                       (rule "concrete_and_2" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "29"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_17"))
                                       (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "13") (term "1,0"))
                                       (rule "concrete_or_4" (formula "13") (term "0"))
                                       (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "allLeft" (formula "19") (inst "t=self"))
                                       (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "close" (formula "26") (ifseqformula "2"))
                                    )
                                 )
                                 (branch "   self.highscores = m_0_17.highscores
& self.min = m_0_17.min FALSE"
                                    (rule "allLeft" (formula "13") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "13") (term "0"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "13") (term "0"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "allLeft" (formula "12") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "27"))
                                    (rule "concrete_or_2" (formula "12") (term "0"))
                                    (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "12") (term "0"))
                                    (rule "concrete_or_2" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "29"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "allLeft" (formula "21") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "30"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "20") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "20") (term "0,0,0"))
                                    (rule "allLeft" (formula "11") (inst "t=m_0_17"))
                                    (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "11") (term "0"))
                                    (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "11") (term "0"))
                                    (rule "concrete_or_2" (formula "11"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,0"))
                                    (rule "times_zero_1" (formula "18") (term "0"))
                                    (rule "qeq_literals" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "34") (term "0"))
                                    (branch " CUT: m_0_17.size >= 1 + m_0_17.min TRUE"
                                       (rule "concrete_and_1" (formula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "andRight" (formula "36"))
                                       (branch " Case 1"
                                          (rule "equiv_right" (formula "36"))
                                          (branch " Case 1"
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (term "1") (ifseqformula "5"))
                                             (rule "add_zero_left" (formula "33") (term "0,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                             (rule "concrete_and_2" (formula "33") (term "1"))
                                             (rule "concrete_and_4" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "33"))
                                             (rule "add_literals" (formula "14") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "14"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0"))
                                             (rule "leq_literals" (formula "33") (term "0"))
                                             (rule "concrete_and_2" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "allLeft" (formula "20") (inst "t=self"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "20") (term "0"))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "array_length_non_negative_3" (formula "10") (term "0") (ifseqformula "6") (ifseqformula "9") (ifseqformula "29"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                             (rule "concrete_or_1" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "11") (term "0,0") (ifseqformula "2") (ifseqformula "6") (ifseqformula "28"))
                                             (rule "allLeft" (formula "22") (inst "t=self"))
                                             (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                             (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "6") (ifseqformula "11") (ifseqformula "30"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                             (rule "concrete_or_1" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "allLeft" (formula "25") (inst "t=m_0_17"))
                                             (rule "exLeft" (formula "25") (inst "sk=i_44"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "andLeft" (formula "25"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "42"))
                                             (rule "concrete_or_2" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "25") (term "0"))
                                             (rule "concrete_or_2" (formula "25"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "42"))
                                             (rule "concrete_or_2" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "26") (term "0"))
                                             (rule "concrete_or_2" (formula "26"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0"))
                                             (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "42"))
                                             (rule "concrete_or_2" (formula "32"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "30") (term "1,0"))
                                             (rule "concrete_or_4" (formula "30") (term "0"))
                                             (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "29") (term "0"))
                                             (rule "concrete_or_1" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "41"))
                                             (rule "concrete_or_4" (formula "28") (term "0,0"))
                                             (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "27") (term "1,0"))
                                             (rule "concrete_or_4" (formula "27") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "28") (term "1"))
                                             (rule "concrete_or_4" (formula "28"))
                                             (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "30") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "28") (term "1"))
                                             (rule "concrete_or_4" (formula "28"))
                                             (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "30") (term "0"))
                                             (rule "concrete_or_2" (formula "30"))
                                             (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "29") (term "0"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "29") (term "0"))
                                             (rule "concrete_or_2" (formula "29"))
                                             (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "41"))
                                             (rule "concrete_or_4" (formula "27") (term "0"))
                                             (rule "applyEq" (formula "27") (term "0,0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "27") (term "0,1"))
                                             (rule "eq_or" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "26") (term "1"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "closeFalse" (formula "15"))
                                          )
                                          (branch " Case 2"
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "times_zero_2" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "35"))
                                             (rule "add_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0"))
                                             (rule "leq_literals" (formula "35") (term "0"))
                                             (rule "concrete_and_2" (formula "35"))
                                             (rule "false_right" (formula "35"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "4") (term "0"))
                                             (rule "concrete_and_2" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "equiv_right" (formula "36"))
                                          (branch " Case 1"
                                             (rule "notLeft" (formula "1"))
                                             (rule "allRight" (formula "37") (inst "sk=i_12"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "37"))
                                             (rule "orRight" (formula "38"))
                                             (rule "eqSymm" (formula "40") (term "1,0,0,0"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "39"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "32"))
                                             (rule "add_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "6"))
                                             (rule "add_zero_left" (formula "32") (term "0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0"))
                                             (rule "leq_literals" (formula "32") (term "0"))
                                             (rule "concrete_and_2" (formula "32"))
                                             (rule "false_right" (formula "32"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (rule "concrete_or_1" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "21"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "commute_and" (formula "1") (term "0,0,0"))
                                             (rule "cut_direct" (formula "39") (term "0"))
                                             (branch " CUT: self.highscores = m_0_17.highscores TRUE"
                                                (rule "concrete_and_1" (formula "40"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "18"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "19"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "allLeft" (formula "26") (inst "t=self"))
                                                (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "26") (term "0"))
                                                (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "26"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "close" (formula "33") (ifseqformula "1"))
                                             )
                                             (branch " CUT: self.highscores = m_0_17.highscores FALSE"
                                                (rule "concrete_and_2" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "39"))
                                                (rule "concrete_and_4" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_false" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "30") (inst "t=m_0_17"))
                                                (rule "eqSymm" (formula "30") (term "1,0,0,0"))
                                                (rule "replace_known_right" (formula "30") (term "1,0,0,0,0,0,0") (ifseqformula "38"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                                (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,0,0,0") (ifseqformula "8"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_17"))
                                                (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                                (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "39"))
                                                (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_17.min@(maze.Highscore)"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                (rule "concrete_or_2" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allLeft" (formula "25") (inst "t=i_12"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                (rule "concrete_or_2" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allLeft" (formula "31") (inst "t=i_12"))
                                                (rule "eqSymm" (formula "31") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "45"))
                                                (rule "concrete_or_4" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                (rule "leq_literals" (formula "31") (term "0,1"))
                                                (rule "concrete_and_2" (formula "31") (term "1"))
                                                (rule "concrete_or_4" (formula "31"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "31") (term "0,0"))
                                                (rule "concrete_and_2" (formula "31") (term "0"))
                                                (rule "concrete_or_2" (formula "31"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "4"))
                                                (rule "andLeft" (formula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0"))
                                                (rule "add_zero_right" (formula "31") (term "0"))
                                                (rule "leq_literals" (formula "31"))
                                                (rule "closeFalse" (formula "31"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "notRight" (formula "37"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "34") (term "1") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_left" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (rule "concrete_and_2" (formula "34") (term "1"))
                                             (rule "concrete_and_4" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0,0,1,0"))
                                             (rule "allLeft" (formula "9") (inst "t=m_0_17"))
                                             (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "9") (term "0"))
                                             (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "9") (term "0"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (rule "concrete_or_1" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "cut_direct" (formula "2") (term "1,0,0,0,1,0"))
                                             (branch " CUT: self.highscores = m_0_17.highscores TRUE"
                                                (rule "concrete_and_3" (formula "3") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "13"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "14"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "mul_literals" (formula "7") (term "1"))
                                                (rule "allLeft" (formula "21") (inst "t=self"))
                                                (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "21") (term "1"))
                                                (rule "concrete_or_4" (formula "21"))
                                                (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "33"))
                                                (rule "concrete_or_4" (formula "21"))
                                                (rule "close" (formula "31") (ifseqformula "21"))
                                             )
                                             (branch " CUT: self.highscores = m_0_17.highscores FALSE"
                                                (rule "concrete_and_4" (formula "2") (term "0,0,0,1,0"))
                                                (rule "ifthenelse_false" (formula "2") (term "0,0,1,0"))
                                                (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "30"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_1" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,1,1,0") (ifseqformula "3") (ifseqformula "7") (ifseqformula "29"))
                                                (rule "allLeft" (formula "23") (inst "t=self"))
                                                (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "23") (term "0,0,0"))
                                                (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "8") (ifseqformula "2") (ifseqformula "31"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "26") (inst "t=m_0_17"))
                                                (rule "exLeft" (formula "26") (inst "sk=i_45"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                (rule "concrete_or_4" (formula "27") (term "0"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "27"))
                                                (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "26") (term "0"))
                                                (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "26") (term "0"))
                                                (rule "concrete_or_2" (formula "26"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "33"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "32"))
                                                (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                (rule "concrete_or_4" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "1"))
                                                (rule "concrete_or_3" (formula "30") (term "0"))
                                                (rule "concrete_or_1" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "42"))
                                                (rule "concrete_or_4" (formula "29") (term "0,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "29") (term "1"))
                                                (rule "concrete_or_4" (formula "29"))
                                                (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                (rule "concrete_or_4" (formula "28") (term "0"))
                                                (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "29") (term "1"))
                                                (rule "concrete_or_4" (formula "29"))
                                                (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "42"))
                                                (rule "concrete_or_2" (formula "30") (term "0"))
                                                (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "30") (term "0"))
                                                (rule "concrete_or_2" (formula "30"))
                                                (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "42"))
                                                (rule "concrete_or_4" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "times_zero_2" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "30"))
                                                (rule "times_zero_2" (formula "30") (term "1,0"))
                                                (rule "add_zero_right" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "26") (term "0,1"))
                                                (rule "eq_or" (formula "26"))
                                                (rule "notLeft" (formula "26"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "1"))
                                                (rule "add_literals" (formula "25") (term "0"))
                                                (rule "leq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                (rule "mul_literals" (formula "27") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "25"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0"))
                                                (rule "leq_literals" (formula "33") (term "0"))
                                                (rule "concrete_and_2" (formula "33"))
                                                (rule "false_right" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "25") (term "0"))
                                                (rule "concrete_and_2" (formula "25"))
                                                (rule "closeFalse" (formula "25"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " CUT: m_0_17.size >= 1 + m_0_17.min FALSE"
                                       (rule "concrete_and_2" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "inEqSimp_geqRight" (formula "34"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "cut_direct" (formula "34") (term "0"))
                                       (branch " CUT: self.highscores = m_0_17.highscores TRUE"
                                          (rule "concrete_and_1" (formula "35"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (rule "concrete_or_1" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "allLeft" (formula "24") (inst "t=m_0_17"))
                                          (rule "exLeft" (formula "24") (inst "sk=i_13"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "25"))
                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "24") (term "0"))
                                          (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "24") (term "0"))
                                          (rule "concrete_or_2" (formula "24"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "31") (term "0,0"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "30") (term "0,0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "30") (term "0,0"))
                                          (rule "concrete_or_2" (formula "30") (term "0"))
                                          (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "29") (term "0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0"))
                                          (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "27") (term "0,0"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "26") (term "1,0"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "28") (term "0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "29") (term "0,0"))
                                          (rule "concrete_or_2" (formula "29") (term "0"))
                                          (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "31") (term "0,0"))
                                          (rule "concrete_not_2" (formula "31") (term "0"))
                                          (rule "concrete_or_1" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (term "0,1") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,0,1"))
                                          (rule "concrete_and_2" (formula "27") (term "0,1"))
                                          (rule "concrete_not_2" (formula "27") (term "1"))
                                          (rule "concrete_or_3" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "28") (term "0,0"))
                                          (rule "concrete_not_2" (formula "28") (term "0"))
                                          (rule "concrete_or_1" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "28") (term "0,0"))
                                          (rule "concrete_not_2" (formula "28") (term "0"))
                                          (rule "concrete_or_1" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (term "0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                          (rule "leq_literals" (formula "27") (term "0,0"))
                                          (rule "concrete_and_2" (formula "27") (term "0"))
                                          (rule "concrete_or_2" (formula "27"))
                                          (rule "notLeft" (formula "27"))
                                          (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "31"))
                                          (rule "add_zero_right" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "15"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                          (rule "concrete_and_2" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "2"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_literals" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                       (branch " CUT: self.highscores = m_0_17.highscores FALSE"
                                          (rule "concrete_and_2" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "allLeft" (formula "8") (inst "t=m_0_17"))
                                          (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "8") (term "1,0"))
                                          (rule "concrete_or_4" (formula "8") (term "0"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (rule "concrete_or_1" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "allLeft" (formula "24") (inst "t=m_0_17"))
                                          (rule "exLeft" (formula "24") (inst "sk=i_14"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "25"))
                                          (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "24") (term "1,0"))
                                          (rule "concrete_or_4" (formula "24") (term "0"))
                                          (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "24"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "31") (term "0,0"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "30") (term "0,0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "30") (term "0,0"))
                                          (rule "concrete_or_2" (formula "30") (term "0"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "29") (term "0,0"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "28") (term "0,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "26") (term "1,0"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "40"))
                                          (rule "concrete_or_2" (formula "29") (term "0"))
                                          (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "40"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "40"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "28") (term "0,0"))
                                          (rule "concrete_or_2" (formula "28") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0"))
                                          (rule "concrete_not_2" (formula "30") (term "0"))
                                          (rule "concrete_or_1" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0"))
                                          (rule "concrete_and_2" (formula "28") (term "0"))
                                          (rule "concrete_or_2" (formula "28"))
                                          (rule "notLeft" (formula "28"))
                                          (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "34"))
                                          (rule "concrete_or_4" (formula "28"))
                                          (rule "notLeft" (formula "28"))
                                          (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "33"))
                                          (rule "concrete_not_2" (formula "28") (term "0"))
                                          (rule "concrete_or_1" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "32"))
                                          (rule "concrete_not_2" (formula "27") (term "1"))
                                          (rule "concrete_or_3" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "14"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                          (rule "concrete_and_2" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "31"))
                                          (rule "add_zero_right" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "15"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                          (rule "concrete_and_2" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "1"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0"))
                                          (rule "add_literals" (formula "25") (term "0"))
                                          (rule "leq_literals" (formula "25"))
                                          (rule "closeFalse" (formula "25"))
                                       )
                                    )
                                 )
                              )
                              (branch " CUT: m_0_17.min >= -1 FALSE"
                                 (rule "concrete_and_2" (formula "27") (term "0"))
                                 (rule "concrete_and_2" (formula "27"))
                                 (rule "false_right" (formula "27"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "18") (inst "t=m_0_17"))
                                 (rule "exLeft" (formula "18") (inst "sk=i_15"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "18") (term "1,0"))
                                 (rule "concrete_or_4" (formula "18") (term "0"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "19") (term "1,0"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "25") (term "0,0"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "25") (term "0,0"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "24") (term "0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "24") (term "0,0"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "22") (term "0,0"))
                                 (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "33"))
                                 (rule "concrete_or_4" (formula "20") (term "0,0"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "23") (term "0,0"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "33"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "25") (term "0,0"))
                                 (rule "concrete_not_2" (formula "25") (term "0"))
                                 (rule "concrete_or_1" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_contradEq3" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_and_2" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "28"))
                                 (rule "concrete_or_4" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "27"))
                                 (rule "concrete_not_2" (formula "21") (term "1"))
                                 (rule "concrete_or_3" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "26"))
                                 (rule "concrete_not_2" (formula "21") (term "0"))
                                 (rule "concrete_or_1" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                 (rule "concrete_and_2" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (rule "concrete_and_2" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                        )
                     )
                  )
                  (branch " self.size = self.min FALSE"
                     (rule "replace_known_right" (formula "25") (term "0,2") (ifseqformula "23"))
                     (rule "ifthenelse_false" (formula "25") (term "2"))
                     (rule "only_created_object_are_referenced_non_null" (formula "20") (term "0") (ifseqformula "18") (ifseqformula "3") (ifseqformula "20"))
                     (rule "methodBodyExpand" (formula "26") (term "6"))
                     (rule "methodCallReturn" (formula "26") (term "6"))
                     (rule "assignment_instance_field_of_this" (formula "26") (term "6"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "methodCallEmpty" (formula "26") (term "7"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "blockEmpty" (formula "26") (term "6"))
                     (rule "assignment_instance_field_of_this" (formula "26") (term "6"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "less_than_comparison_new" (formula "26") (term "6"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "assignment_instance_field_of_this" (formula "26") (term "4,1"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "assignment_instance_field_of_this" (formula "26") (term "4,2"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                     (rule "ifthenelse_split_for" (formula "26"))
                     (branch " self.highscores[self.min].score >= 1 + rec.score TRUE"
                        (rule "if" (formula "27") (term "5"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "boolean_equal" (formula "27") (term "0"))
                        (rule "ifthenelse_true_for" (formula "27"))
                        (rule "assignment_instance_field_of_this" (formula "27") (term "4"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "blockEmpty" (formula "27") (term "6"))
                        (rule "postincrement" (formula "27") (term "6"))
                        (rule "compound_int_cast_expression" (formula "27") (term "6") (inst "#v=j"))
                        (rule "variableDeclarationAssign" (formula "27") (term "6"))
                        (rule "variableDeclaration" (formula "27") (term "6") (newnames "j_5"))
                        (rule "remove_parentheses_right" (formula "27") (term "6"))
                        (rule "assignmentAdditionInt" (formula "27") (term "6"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "translateJavaAddInt" (formula "27") (term "1"))
                        (rule "polySimp_addComm0" (formula "27") (term "1"))
                        (rule "widening_identity_cast_5" (formula "27") (term "7"))
                        (rule "assignment_instance_field_of_this" (formula "27") (term "7"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "methodCallReturn" (formula "27") (term "8"))
                        (rule "assignment_instance_field_of_this" (formula "27") (term "8"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "methodCallEmpty" (formula "27") (term "8"))
                        (rule "tryEmpty" (formula "27") (term "8"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "castDelInt" (formula "27") (term "3"))
                        (rule "emptyModality" (formula "27") (term "7"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "andRight" (formula "27"))
                        (branch " Case 1"
                           (rule "andRight" (formula "27"))
                           (branch " Case 1"
                              (rule "andRight" (formula "27"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "27"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "27"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "27"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "27") (inst "sk=m_0_0"))
                                          (rule "orRight" (formula "27"))
                                          (rule "orRight" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "cut_direct" (formula "29") (term "0"))
                                          (branch " CUT: m_0_0.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "30"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0"))
                                             (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_0"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_0"))
                                             (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "33"))
                                             (rule "concrete_or_4" (formula "11"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "close" (formula "25") (ifseqformula "2"))
                                          )
                                          (branch " CUT: m_0_0.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "inEqSimp_geqRight" (formula "29"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "9") (inst "t=m_0_0"))
                                             (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "9") (term "1,0"))
                                             (rule "concrete_or_4" (formula "9") (term "0"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                             (rule "concrete_and_2" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "27") (inst "sk=m_0_1"))
                                          (rule "orRight" (formula "27"))
                                          (rule "orRight" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "eqSymm" (formula "29") (term "0,0,0"))
                                          (rule "eqSymm" (formula "29") (term "0,0,1"))
                                          (rule "ifthenelse_split" (formula "29") (term "0,0"))
                                          (branch " self = m_0_1 TRUE"
                                             (rule "castDelInt" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "30") (term "0,1"))
                                             (rule "castDelInt" (formula "30") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "21"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "21"))
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " self = m_0_1 FALSE"
                                             (rule "replace_known_right" (formula "30") (term "0,0,1") (ifseqformula "29"))
                                             (rule "ifthenelse_false" (formula "30") (term "0,1"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_1"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_1"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "14"))
                                             (rule "concrete_and_1" (formula "32"))
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_1"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_and_2" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "27") (inst "sk=m_0_2"))
                                       (rule "orRight" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "notRight" (formula "27"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_2"))
                                       (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "18") (term "0"))
                                       (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_2"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0"))
                                       (rule "add_literals" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "27") (inst "sk=m_0_3"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "27"))
                                    (rule "allRight" (formula "29") (inst "sk=i_0"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "31"))
                                    (rule "eqSymm" (formula "31") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "30"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " self = m_0_3 TRUE"
                                       (rule "castDelInt" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (rule "eqClose" (formula "4") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "13"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "13"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                                       (rule "times_zero_1" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_3"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "6"))
                                       (rule "concrete_not_1" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,0"))
                                       (rule "times_zero_1" (formula "19") (term "0"))
                                       (rule "qeq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " m_0_3.size = i_0 TRUE"
                                          (rule "close" (formula "29") (ifseqformula "6"))
                                       )
                                       (branch " m_0_3.size = i_0 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "27"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (rule "concrete_and_2" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "20") (inst "t=m_0_3"))
                                          (rule "replace_known_right" (formula "20") (term "1,0,0,0,0") (ifseqformula "32"))
                                          (rule "concrete_or_4" (formula "20") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "20") (term "0,1,0,0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "20") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                          (rule "allLeft" (formula "20") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                          (rule "concrete_and_2" (formula "20") (term "0"))
                                          (rule "concrete_or_2" (formula "20"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "20"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch " self = m_0_3 FALSE"
                                       (rule "allLeft" (formula "17") (inst "t=m_0_3"))
                                       (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_3"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "18"))
                                       (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,0"))
                                       (rule "times_zero_1" (formula "18") (term "0"))
                                       (rule "qeq_literals" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_3"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_3"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "0"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_3"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch " self.size = i_0 & self.highscores = m_0_3.highscores TRUE"
                                          (rule "close" (formula "35") (ifseqformula "5"))
                                       )
                                       (branch " self.size = i_0 & self.highscores = m_0_3.highscores FALSE"
                                          (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "38") (term "0") (ifseqformula "7") (ifseqformula "10") (ifseqformula "38"))
                                          (rule "allLeft" (formula "24") (inst "t=m_0_3"))
                                          (rule "replace_known_right" (formula "24") (term "1,0,0,0,0") (ifseqformula "41"))
                                          (rule "concrete_or_4" (formula "24") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "24") (term "0,1,0,0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "24") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                          (rule "allLeft" (formula "13") (inst "t=m_0_3"))
                                          (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "13") (term "1,0"))
                                          (rule "concrete_or_4" (formula "13") (term "0"))
                                          (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "42"))
                                          (rule "concrete_or_2" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (rule "concrete_or_1" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "26") (inst "t=m_0_3"))
                                          (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "42"))
                                          (rule "concrete_or_2" (formula "26") (term "0,0,0"))
                                          (rule "allLeft" (formula "24") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (rule "concrete_and_2" (formula "24") (term "1"))
                                          (rule "concrete_or_4" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (rule "concrete_and_2" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "27") (inst "sk=h_0"))
                                 (rule "orRight" (formula "27"))
                                 (rule "orRight" (formula "28"))
                                 (rule "allRight" (formula "28") (inst "sk=other_0"))
                                 (rule "orRight" (formula "28"))
                                 (rule "orRight" (formula "28"))
                                 (rule "notRight" (formula "28"))
                                 (rule "allLeft" (formula "16") (inst "t=h_0"))
                                 (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "16") (term "0,0,0"))
                                 (rule "allLeft" (formula "16") (inst "t=other_0"))
                                 (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "32"))
                                 (rule "concrete_or_4" (formula "16") (term "0"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "close" (formula "24") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "27") (inst "sk=m_0_4"))
                              (rule "orRight" (formula "27"))
                              (rule "notRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "notRight" (formula "28"))
                              (rule "allLeft" (formula "18") (inst "t=m_0_4"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "close" (formula "24") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "27") (inst "sk=m_0_5"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "notRight" (formula "27"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,1,0,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,1,1,1,0"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,0,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,1,2,0,1,1,0,1,1,1"))
                           (rule "ifthenelse_split" (formula "29") (term "1,1,1,0"))
                           (branch " self = m_0_5 TRUE"
                              (rule "replace_known_left" (formula "30") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "castDelInt" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "replace_known_left" (formula "30") (term "0,1,0,0,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "1,0,0,0,1,1,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,1,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,1,0,1"))
                              (rule "castDelInt" (formula "30") (term "0,1,0,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,1,0"))
                              (rule "castDelInt" (formula "30") (term "0,1,0"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0,0,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,0,0,1,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,0,0,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,1,0,0,1,1,0,1,1,1"))
                              (rule "eqClose" (formula "30") (term "1,0,0,1,1,0,1,1,1"))
                              (rule "concrete_and_3" (formula "30") (term "0,0,1,1,0,1,1,1"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,0"))
                              (rule "add_literals" (formula "30") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "30") (term "0,1,0"))
                              (rule "leq_literals" (formula "30") (term "1,0"))
                              (rule "concrete_and_3" (formula "30") (term "0"))
                              (rule "replace_known_left" (formula "30") (term "0,1,2,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "1,2,0,1,1,0,1,1,1"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0,1,0,0,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "29") (term "0,0,1,1,0,1,1,1"))
                              (rule "ifthenelse_true" (formula "29") (term "0,1,1,0,1,1,1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "29") (term "0,0,0,0,1,0,1,1,1"))
                              (rule "concrete_and_1" (formula "29") (term "0,0,0,1,0,1,1,1"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "1,1,0,1"))
                              (rule "eq_eq" (formula "28") (term "0,1"))
                              (rule "concrete_and_1" (formula "28") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,1") (ifseqformula "12"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "28") (term "0,0,1"))
                              (rule "concrete_not_2" (formula "28") (term "0,1"))
                              (rule "concrete_eq_1" (formula "28") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "12"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (rule "concrete_or_1" (formula "28") (term "0"))
                              (rule "concrete_and_1" (formula "28"))
                              (rule "allRight" (formula "28") (inst "sk=i_16"))
                              (rule "orRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "orRight" (formula "29"))
                              (rule "eqSymm" (formula "31") (term "0,0,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "28"))
                              (rule "ifthenelse_false" (formula "31") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "29"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "30"))
                              (rule "inEqSimp_geqRight" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "31"))
                              (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0"))
                              (rule "leq_literals" (formula "31") (term "0"))
                              (rule "concrete_and_2" (formula "31"))
                              (rule "false_right" (formula "31"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                              (rule "times_zero_1" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "allLeft" (formula "19") (inst "t=m_0_5"))
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "19") (term "1,0"))
                              (rule "concrete_or_4" (formula "19") (term "0"))
                              (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
                              (rule "concrete_or_2" (formula "19"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,0"))
                              (rule "times_zero_1" (formula "19") (term "0"))
                              (rule "qeq_literals" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "allLeft" (formula "20") (inst "t=m_0_5"))
                              (rule "replace_known_right" (formula "20") (term "1,0,0,0,0") (ifseqformula "32"))
                              (rule "concrete_or_4" (formula "20") (term "0,0,0,0"))
                              (rule "replace_known_left" (formula "20") (term "0,1,0,0,0") (ifseqformula "6"))
                              (rule "concrete_not_1" (formula "20") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                              (rule "allLeft" (formula "20") (inst "t=i_16"))
                              (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "20") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0,0"))
                              (rule "concrete_or_2" (formula "20") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0"))
                              (rule "leq_literals" (formula "20") (term "0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0"))
                              (rule "concrete_or_2" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "only_created_object_are_referenced_non_null" (formula "8") (term "0,0") (ifseqformula "6") (ifseqformula "11") (ifseqformula "29"))
                              (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "7") (term "0,0") (ifseqformula "8") (ifseqformula "11") (ifseqformula "32"))
                              (rule "array_length_non_negative_3" (formula "15") (term "0") (ifseqformula "12") (ifseqformula "9") (ifseqformula "30"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_1" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "1") (term "0,0") (ifseqformula "9") (ifseqformula "12") (ifseqformula "29"))
                              (rule "allLeft" (formula "27") (inst "t=m_0_5"))
                              (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "27") (term "1,0,0,0,0,0,0") (ifseqformula "36"))
                              (rule "concrete_or_4" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "replace_known_left" (formula "27") (term "0,1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "concrete_not_1" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "concrete_or_4" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                              (rule "inEqSimp_contradEq7" (formula "27") (term "1,0,0,0,0") (ifseqformula "12"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "27") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "27") (term "0,0,0,0"))
                              (rule "allLeft" (formula "27") (inst "t=i_16"))
                              (rule "eqSymm" (formula "27") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "27") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "27") (term "1,0"))
                              (rule "concrete_or_4" (formula "27") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "27") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "27") (term "0,0"))
                              (rule "concrete_or_2" (formula "27") (term "0"))
                              (rule "cut_direct" (formula "27") (term "1"))
                              (branch " CUT:    m_0_5.highscores[m_0_5.min].score
<= m_0_5.highscores[i_16].score TRUE"
                                 (rule "concrete_or_3" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "27"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1"))
                                 (rule "mul_literals" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "leq_literals" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                              (branch " CUT:    m_0_5.highscores[m_0_5.min].score
<= m_0_5.highscores[i_16].score FALSE"
                                 (rule "concrete_or_4" (formula "27"))
                                 (rule "inEqSimp_leqRight" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "28"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " self = m_0_5 FALSE"
                              (rule "replace_known_right" (formula "30") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "replace_known_right" (formula "30") (term "0,0,1,0,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,0,1"))
                              (rule "replace_known_right" (formula "30") (term "0,0,0,0,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,0,0,1,1"))
                              (rule "replace_known_right" (formula "30") (term "0,0,0,0,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,0,0,1"))
                              (rule "replace_known_right" (formula "30") (term "0,1,0,0,0,1,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "1,0,0,0,1,1,1"))
                              (rule "replace_known_right" (formula "30") (term "0,0,1,0") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,0"))
                              (rule "replace_known_right" (formula "30") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,0,0,1,1,0,1,1,1"))
                              (rule "eqSymm" (formula "30") (term "1,0,0,1,1,0,1,1,1"))
                              (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,0,0"))
                              (rule "replace_known_right" (formula "30") (term "0,1,2,0,1,1,0,1,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "1,2,0,1,1,0,1,1,1"))
                              (rule "allLeft" (formula "12") (inst "t=m_0_5"))
                              (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "12") (term "0"))
                              (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "12") (term "0"))
                              (rule "concrete_or_2" (formula "12"))
                              (rule "allLeft" (formula "14") (inst "t=m_0_5"))
                              (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "ifthenelse_split" (formula "33") (term "0,1,1,0,1,1,1"))
                              (branch "   self.highscores = m_0_5.highscores
& self.size = m_0_5.min TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                 (rule "concrete_and_1" (formula "35") (term "0,0,0,1,0,1,1,1"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "2"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "25"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "11"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "35") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (term "0,0,1") (ifseqformula "13"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,0,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0,0,1"))
                                 (rule "leq_literals" (formula "35") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "35") (term "0,0,1"))
                                 (rule "concrete_eq_2" (formula "35") (term "0,1"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (term "0,0,1,1") (ifseqformula "13"))
                                 (rule "add_zero_left" (formula "35") (term "0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "35") (term "0,0,0,0,1,1"))
                                 (rule "leq_literals" (formula "35") (term "0,0,0,1,1"))
                                 (rule "concrete_and_2" (formula "35") (term "0,0,1,1"))
                                 (rule "concrete_not_2" (formula "35") (term "0,1,1"))
                                 (rule "concrete_eq_1" (formula "35") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "35") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "35") (term "0,0"))
                                 (rule "concrete_and_1" (formula "35") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "allLeft" (formula "21") (inst "t=m_0_5"))
                                 (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                 (rule "allLeft" (formula "19") (inst "t=m_0_5"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "19") (term "1,0"))
                                 (rule "concrete_or_4" (formula "19") (term "0"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_1" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "14") (term "0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                 (rule "mul_literals" (formula "14") (term "1"))
                                 (rule "allLeft" (formula "13") (inst "t=m_0_5"))
                                 (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "13") (term "1,0"))
                                 (rule "concrete_or_4" (formula "13") (term "0"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "13"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "13"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,0"))
                                 (rule "times_zero_1" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1"))
                                 (rule "mul_literals" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "allLeft" (formula "21") (inst "t=self"))
                                 (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "21") (term "1"))
                                 (rule "concrete_or_4" (formula "21"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "32"))
                                 (rule "concrete_or_2" (formula "21"))
                                 (rule "close" (formula "36") (ifseqformula "21"))
                              )
                              (branch "   self.highscores = m_0_5.highscores
& self.size = m_0_5.min FALSE"
                                 (rule "cut_direct" (formula "34") (term "0,0"))
                                 (branch " CUT: m_0_5.min >= -1 TRUE"
                                    (rule "concrete_and_1" (formula "35") (term "0"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "31") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "31"))
                                    (rule "allLeft" (formula "19") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "allLeft" (formula "10") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "10") (term "0"))
                                    (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "10") (term "0"))
                                    (rule "concrete_or_2" (formula "10"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (rule "concrete_or_1" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "13") (inst "t=m_0_5"))
                                    (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "13") (term "1,0"))
                                    (rule "concrete_or_4" (formula "13") (term "0"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,0"))
                                    (rule "times_zero_1" (formula "20") (term "0"))
                                    (rule "qeq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "allLeft" (formula "22") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                    (rule "allLeft" (formula "24") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "36"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "24") (term "0"))
                                    (rule "concrete_or_2" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "cut_direct" (formula "38") (term "0"))
                                    (branch " CUT: self.highscores = m_0_5.highscores TRUE"
                                       (rule "concrete_and_1" (formula "39"))
                                       (rule "replace_known_left" (formula "40") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "concrete_and_1" (formula "40") (term "0,0,0,1,0,1,1,1"))
                                       (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "27"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "8") (term "0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "cut_direct" (formula "38") (term "0"))
                                       (branch " CUT: m_0_5.size >= 1 + m_0_5.min TRUE"
                                          (rule "concrete_and_1" (formula "39"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "andRight" (formula "40"))
                                          (branch " Case 1"
                                             (rule "equiv_right" (formula "40"))
                                             (branch " Case 1"
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_and_2" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "38"))
                                                (rule "add_literals" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "38") (term "0,0"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_and_2" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "allLeft" (formula "22") (inst "t=self"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "22") (term "0"))
                                                (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "37"))
                                                (rule "concrete_or_2" (formula "22"))
                                                (rule "notLeft" (formula "22"))
                                                (rule "close" (formula "30") (ifseqformula "2"))
                                             )
                                             (branch " Case 2"
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "21"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "40"))
                                                (rule "add_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "40") (term "1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                (rule "concrete_and_2" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (rule "concrete_and_2" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "equiv_right" (formula "40"))
                                             (branch " Case 1"
                                                (rule "notLeft" (formula "1"))
                                                (rule "allRight" (formula "41") (inst "sk=i_1"))
                                                (rule "orRight" (formula "41"))
                                                (rule "orRight" (formula "41"))
                                                (rule "orRight" (formula "42"))
                                                (rule "eqSymm" (formula "44") (term "0,0,0"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "inEqSimp_leqRight" (formula "42"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "43"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "35"))
                                                (rule "add_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "8"))
                                                (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (rule "concrete_and_2" (formula "35"))
                                                (rule "false_right" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "allLeft" (formula "28") (inst "t=self"))
                                                (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "43"))
                                                (rule "concrete_or_4" (formula "28") (term "0"))
                                                (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "39"))
                                                (rule "concrete_or_2" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "close" (formula "36") (ifseqformula "7"))
                                             )
                                             (branch " Case 2"
                                                (rule "notRight" (formula "41"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                (rule "add_literals" (formula "4") (term "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "39") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "17"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "39") (term "0,0"))
                                                (rule "leq_literals" (formula "39") (term "0"))
                                                (rule "concrete_and_2" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                                (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                (rule "allLeft" (formula "23") (inst "t=self"))
                                                (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "23") (term "0"))
                                                (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "close" (formula "31") (ifseqformula "3"))
                                             )
                                          )
                                       )
                                       (branch " CUT: m_0_5.size >= 1 + m_0_5.min FALSE"
                                          (rule "concrete_and_2" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "inEqSimp_geqRight" (formula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "26") (inst "t=m_0_5"))
                                          (rule "exLeft" (formula "26") (inst "sk=i_2"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "27") (term "0"))
                                          (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "27") (term "0"))
                                          (rule "concrete_or_2" (formula "27"))
                                          (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "26") (term "1,0"))
                                          (rule "concrete_or_4" (formula "26") (term "0"))
                                          (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "33") (term "0,0"))
                                          (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "33") (term "0"))
                                          (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "32") (term "0,0"))
                                          (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "32") (term "0,0"))
                                          (rule "concrete_or_2" (formula "32") (term "0"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "31") (term "0,0"))
                                          (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "30") (term "0,0"))
                                          (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "44"))
                                          (rule "concrete_or_4" (formula "29") (term "0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "28") (term "1,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "29") (term "1,0"))
                                          (rule "concrete_or_4" (formula "29") (term "0"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "44"))
                                          (rule "concrete_or_2" (formula "30") (term "0"))
                                          (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "44"))
                                          (rule "concrete_or_4" (formula "28") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "32") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "32") (term "0,0"))
                                          (rule "concrete_not_2" (formula "32") (term "0"))
                                          (rule "concrete_or_1" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "31") (term "0,0"))
                                          (rule "concrete_not_2" (formula "31") (term "0"))
                                          (rule "concrete_or_1" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,0"))
                                          (rule "concrete_and_2" (formula "30") (term "0"))
                                          (rule "concrete_or_2" (formula "30"))
                                          (rule "notLeft" (formula "30"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0"))
                                          (rule "concrete_not_2" (formula "30") (term "0"))
                                          (rule "concrete_or_1" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (term "0,1") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,0,1"))
                                          (rule "concrete_and_2" (formula "29") (term "0,1"))
                                          (rule "concrete_not_2" (formula "29") (term "1"))
                                          (rule "concrete_or_3" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "34"))
                                          (rule "add_zero_right" (formula "17") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "17"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (rule "concrete_and_2" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "1"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch " CUT: self.highscores = m_0_5.highscores FALSE"
                                       (rule "concrete_and_2" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "replace_known_right" (formula "39") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "38"))
                                       (rule "concrete_and_2" (formula "39") (term "0,0,0,1,0,1,1,1"))
                                       (rule "ifthenelse_false" (formula "39") (term "0,0,1,0,1,1,1"))
                                       (rule "cut_direct" (formula "39") (term "0"))
                                       (branch " CUT: m_0_5.size >= 1 + m_0_5.min TRUE"
                                          (rule "concrete_and_1" (formula "40"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "4") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "andRight" (formula "41"))
                                          (branch " Case 1"
                                             (rule "equiv_right" (formula "41"))
                                             (branch " Case 1"
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "40"))
                                                (rule "add_zero_right" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                (rule "concrete_and_2" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "array_length_non_negative_3" (formula "12") (term "0") (ifseqformula "8") (ifseqformula "5") (ifseqformula "31"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                (rule "concrete_or_1" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "only_created_object_are_referenced_non_null" (formula "13") (term "0,0") (ifseqformula "3") (ifseqformula "8") (ifseqformula "30"))
                                                (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "8") (ifseqformula "13") (ifseqformula "31"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "24") (inst "t=self"))
                                                (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "35"))
                                                (rule "concrete_or_2" (formula "24") (term "0,0,0"))
                                                (rule "allLeft" (formula "27") (inst "t=m_0_5"))
                                                (rule "exLeft" (formula "27") (inst "sk=i_3"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "46"))
                                                (rule "concrete_or_2" (formula "28") (term "0"))
                                                (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "28") (term "0"))
                                                (rule "concrete_or_2" (formula "28"))
                                                (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                (rule "concrete_or_4" (formula "27") (term "0"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "46"))
                                                (rule "concrete_or_2" (formula "27"))
                                                (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                (rule "concrete_or_4" (formula "34") (term "0"))
                                                (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                (rule "concrete_or_4" (formula "34") (term "0"))
                                                (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "46"))
                                                (rule "concrete_or_2" (formula "34"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "1"))
                                                (rule "concrete_or_3" (formula "31") (term "0"))
                                                (rule "concrete_or_1" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "45"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0"))
                                                (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "30") (term "1"))
                                                (rule "concrete_or_4" (formula "30"))
                                                (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                (rule "concrete_or_4" (formula "29") (term "0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "45"))
                                                (rule "concrete_or_2" (formula "32"))
                                                (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                (rule "concrete_or_2" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "31") (term "0"))
                                                (rule "concrete_or_2" (formula "31"))
                                                (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "45"))
                                                (rule "concrete_or_4" (formula "29") (term "0"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "times_zero_2" (formula "28") (term "1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0,0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "29") (term "0,1"))
                                                (rule "eq_or" (formula "29"))
                                                (rule "notLeft" (formula "29"))
                                                (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "30"))
                                                (rule "mul_literals" (formula "30") (term "1,0"))
                                                (rule "add_zero_right" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "17"))
                                                (rule "closeFalse" (formula "17"))
                                             )
                                             (branch " Case 2"
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "times_zero_2" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "41"))
                                                (rule "add_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "41") (term "1,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0"))
                                                (rule "qeq_literals" (formula "41") (term "0"))
                                                (rule "concrete_and_2" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                (rule "concrete_and_2" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "equiv_right" (formula "41"))
                                             (branch " Case 1"
                                                (rule "notLeft" (formula "1"))
                                                (rule "allRight" (formula "42") (inst "sk=i_4"))
                                                (rule "orRight" (formula "42"))
                                                (rule "orRight" (formula "42"))
                                                (rule "orRight" (formula "43"))
                                                (rule "eqSymm" (formula "42"))
                                                (rule "inEqSimp_geqRight" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "45"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "45"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "35"))
                                                (rule "add_literals" (formula "7") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "7"))
                                                (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (rule "concrete_and_2" (formula "35"))
                                                (rule "false_right" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "array_length_non_negative_3" (formula "18") (term "0") (ifseqformula "14") (ifseqformula "11") (ifseqformula "37"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                (rule "concrete_or_1" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "allLeft" (formula "27") (inst "t=m_0_5"))
                                                (rule "replace_known_left" (formula "27") (term "0,1,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "27") (term "1,0,0,0"))
                                                (rule "concrete_or_4" (formula "27") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "43"))
                                                (rule "concrete_or_4" (formula "27") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                                (rule "allLeft" (formula "33") (inst "t=m_0_5"))
                                                (rule "eqSymm" (formula "33") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0,0,0,0,0"))
                                                (rule "replace_known_right" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "44"))
                                                (rule "concrete_or_4" (formula "33") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "33") (term "1,0,0,0,0") (ifseqformula "8"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                                                (rule "allLeft" (formula "33") (inst "t=i_4"))
                                                (rule "eqSymm" (formula "33") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "48"))
                                                (rule "concrete_or_4" (formula "33") (term "0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "33") (term "0,0,1"))
                                                (rule "leq_literals" (formula "33") (term "0,1"))
                                                (rule "concrete_and_2" (formula "33") (term "1"))
                                                (rule "concrete_or_4" (formula "33"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "33") (term "0,0,1"))
                                                (rule "leq_literals" (formula "33") (term "0,1"))
                                                (rule "concrete_and_2" (formula "33") (term "1"))
                                                (rule "concrete_or_4" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (rule "concrete_and_2" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " Case 2"
                                                (rule "notRight" (formula "42"))
                                                (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                (rule "add_literals" (formula "4") (term "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                                (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                                (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "9") (ifseqformula "6") (ifseqformula "32"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                (rule "concrete_or_1" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,0,1,0") (ifseqformula "4") (ifseqformula "9") (ifseqformula "31"))
                                                (rule "array_length_non_negative_3" (formula "15") (term "0") (ifseqformula "10") (ifseqformula "2") (ifseqformula "32"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (rule "concrete_or_1" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "25") (inst "t=self"))
                                                (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "25") (term "0,0,0"))
                                                (rule "allLeft" (formula "28") (inst "t=m_0_5"))
                                                (rule "exLeft" (formula "28") (inst "sk=i_5"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "47"))
                                                (rule "concrete_or_2" (formula "28") (term "0"))
                                                (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "28") (term "0"))
                                                (rule "concrete_or_2" (formula "28"))
                                                (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                (rule "concrete_or_4" (formula "29") (term "0"))
                                                (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "47"))
                                                (rule "concrete_or_2" (formula "29"))
                                                (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "47"))
                                                (rule "concrete_or_2" (formula "34") (term "0,0"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "34") (term "0,0"))
                                                (rule "concrete_or_2" (formula "34") (term "0"))
                                                (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "34") (term "0"))
                                                (rule "concrete_or_2" (formula "34"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                (rule "concrete_or_4" (formula "35") (term "0"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0,0"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "47"))
                                                (rule "concrete_or_2" (formula "33"))
                                                (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "1"))
                                                (rule "concrete_or_3" (formula "32") (term "0"))
                                                (rule "concrete_or_1" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                (rule "concrete_or_4" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "31") (term "1"))
                                                (rule "concrete_or_4" (formula "31"))
                                                (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0"))
                                                (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "46"))
                                                (rule "concrete_or_2" (formula "34") (term "0"))
                                                (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "46"))
                                                (rule "concrete_or_4" (formula "31"))
                                                (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "34") (term "0"))
                                                (rule "concrete_or_2" (formula "34"))
                                                (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "46"))
                                                (rule "concrete_or_4" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "30") (term "0,1"))
                                                (rule "eq_or" (formula "30"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_commuteLeq" (formula "20"))
                                                (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "times_zero_2" (formula "28") (term "1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                (rule "times_zero_2" (formula "31") (term "1,0"))
                                                (rule "add_zero_right" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                                (rule "add_literals" (formula "27") (term "0"))
                                                (rule "leq_literals" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                (rule "mul_literals" (formula "29") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                (rule "mul_literals" (formula "30") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "27"))
                                                (rule "add_zero_left" (formula "36") (term "0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,0"))
                                                (rule "leq_literals" (formula "36") (term "0"))
                                                (rule "concrete_and_2" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (rule "concrete_or_1" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "28"))
                                                (rule "qeq_literals" (formula "26") (term "0"))
                                                (rule "concrete_and_2" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                          )
                                       )
                                       (branch " CUT: m_0_5.size >= 1 + m_0_5.min FALSE"
                                          (rule "concrete_and_2" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "26") (inst "t=m_0_5"))
                                          (rule "exLeft" (formula "26") (inst "sk=i_6"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "27") (term "1,0"))
                                          (rule "concrete_or_4" (formula "27") (term "0"))
                                          (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "27"))
                                          (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "26") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "26") (term "0"))
                                          (rule "concrete_or_2" (formula "26"))
                                          (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "33") (term "0,0"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "33") (term "0,0"))
                                          (rule "concrete_or_2" (formula "33") (term "0"))
                                          (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                          (rule "concrete_or_4" (formula "32") (term "0,0"))
                                          (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "32") (term "0"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "31") (term "0,0"))
                                          (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "45"))
                                          (rule "concrete_or_2" (formula "30") (term "0,0"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "29") (term "1,0"))
                                          (rule "concrete_or_4" (formula "29") (term "0"))
                                          (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "45"))
                                          (rule "concrete_or_4" (formula "28") (term "0,0"))
                                          (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "28") (term "1,0"))
                                          (rule "concrete_or_4" (formula "28") (term "0"))
                                          (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "31") (term "0,0"))
                                          (rule "concrete_or_2" (formula "31") (term "0"))
                                          (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "45"))
                                          (rule "concrete_or_4" (formula "29") (term "0"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "30") (term "0,0"))
                                          (rule "concrete_or_2" (formula "30") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "33") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "33") (term "0,0"))
                                          (rule "concrete_not_2" (formula "33") (term "0"))
                                          (rule "concrete_or_1" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (term "0,1") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,0,1"))
                                          (rule "concrete_and_2" (formula "29") (term "0,1"))
                                          (rule "concrete_not_2" (formula "29") (term "1"))
                                          (rule "concrete_or_3" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "31") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "31") (term "0,0"))
                                          (rule "concrete_not_2" (formula "31") (term "0"))
                                          (rule "concrete_or_1" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "16"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0"))
                                          (rule "concrete_not_2" (formula "30") (term "0"))
                                          (rule "concrete_or_1" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (term "0") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,0"))
                                          (rule "concrete_and_2" (formula "29") (term "0"))
                                          (rule "concrete_or_2" (formula "29"))
                                          (rule "notLeft" (formula "29"))
                                          (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "34"))
                                          (rule "add_zero_right" (formula "17") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "17"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0"))
                                          (rule "leq_literals" (formula "34") (term "0"))
                                          (rule "concrete_and_2" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "1"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                 )
                                 (branch " CUT: m_0_5.min >= -1 FALSE"
                                    (rule "concrete_and_2" (formula "35") (term "0"))
                                    (rule "concrete_and_2" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "inEqSimp_geqRight" (formula "34"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "31") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "31"))
                                    (rule "allLeft" (formula "19") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "allLeft" (formula "10") (inst "t=m_0_5"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "10") (term "0"))
                                    (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "10") (term "0"))
                                    (rule "concrete_or_2" (formula "10"))
                                    (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "15") (term "0"))
                                    (rule "concrete_or_1" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "allLeft" (formula "13") (inst "t=m_0_5"))
                                    (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "13") (term "1,0"))
                                    (rule "concrete_or_4" (formula "13") (term "0"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq0" (formula "20"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,0"))
                                    (rule "times_zero_1" (formula "20") (term "0"))
                                    (rule "qeq_literals" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "allLeft" (formula "24") (inst "t=m_0_5"))
                                    (rule "exLeft" (formula "24") (inst "sk=i_7"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "25") (term "1,0"))
                                    (rule "concrete_or_4" (formula "25") (term "0"))
                                    (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "25"))
                                    (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "24") (term "1,0"))
                                    (rule "concrete_or_4" (formula "24") (term "0"))
                                    (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "24"))
                                    (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "31") (term "0,0"))
                                    (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "31") (term "0"))
                                    (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "30") (term "0,0"))
                                    (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "30") (term "0,0"))
                                    (rule "concrete_or_2" (formula "30") (term "0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "29") (term "0,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "28") (term "0,0"))
                                    (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "42"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "26") (term "1,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0"))
                                    (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "42"))
                                    (rule "concrete_or_4" (formula "26") (term "0"))
                                    (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "29") (term "0,0"))
                                    (rule "concrete_or_2" (formula "29") (term "0"))
                                    (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "42"))
                                    (rule "concrete_or_2" (formula "28") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "30") (term "0,0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "30") (term "0,0"))
                                    (rule "concrete_not_2" (formula "30") (term "0"))
                                    (rule "concrete_or_1" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "inEqSimp_contradEq3" (formula "27") (term "0,1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "27") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "27") (term "0,1"))
                                    (rule "concrete_not_2" (formula "27") (term "1"))
                                    (rule "concrete_or_3" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_contradEq3" (formula "29") (term "0,0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0"))
                                    (rule "concrete_not_2" (formula "29") (term "0"))
                                    (rule "concrete_or_1" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "inEqSimp_contradEq3" (formula "27") (term "0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0,0"))
                                    (rule "concrete_and_2" (formula "27") (term "0"))
                                    (rule "concrete_or_2" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "33"))
                                    (rule "concrete_or_4" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0"))
                                    (rule "concrete_and_2" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "32"))
                                    (rule "add_zero_right" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "16"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (rule "concrete_and_2" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "24") (term "0"))
                                    (rule "concrete_and_2" (formula "24"))
                                    (rule "closeFalse" (formula "24"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " self.highscores[self.min].score >= 1 + rec.score FALSE"
                        (rule "inEqSimp_geqRight" (formula "26"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "if" (formula "27") (term "5"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "boolean_not_equal_2" (formula "27") (term "0"))
                        (rule "ifthenelse_false_for" (formula "27"))
                        (rule "postincrement" (formula "27") (term "4"))
                        (rule "compound_int_cast_expression" (formula "27") (term "4") (inst "#v=j"))
                        (rule "variableDeclarationAssign" (formula "27") (term "4"))
                        (rule "variableDeclaration" (formula "27") (term "4") (newnames "j_6"))
                        (rule "remove_parentheses_right" (formula "27") (term "4"))
                        (rule "assignmentAdditionInt" (formula "27") (term "4"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "translateJavaAddInt" (formula "27") (term "1"))
                        (rule "polySimp_addComm0" (formula "27") (term "1"))
                        (rule "widening_identity_cast_5" (formula "27") (term "5"))
                        (rule "assignment_instance_field_of_this" (formula "27") (term "5"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "methodCallReturn" (formula "27") (term "6"))
                        (rule "assignment_instance_field_of_this" (formula "27") (term "6"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "methodCallEmpty" (formula "27") (term "6"))
                        (rule "tryEmpty" (formula "27") (term "6"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "castDelInt" (formula "27") (term "1"))
                        (rule "emptyModality" (formula "27") (term "5"))
                        (builtin "Update Simplification" (formula "27"))
                        (rule "andRight" (formula "27"))
                        (branch " Case 1"
                           (rule "andRight" (formula "27"))
                           (branch " Case 1"
                              (rule "andRight" (formula "27"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "27"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "27"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "27"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "27") (inst "sk=m_0_6"))
                                          (rule "orRight" (formula "27"))
                                          (rule "orRight" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "cut_direct" (formula "29") (term "0"))
                                          (branch " CUT: m_0_6.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "30"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_6"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_6"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "16") (term "0"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "16") (term "0"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "inEqSimp_strengthen0" (formula "16") (ifseqformula "32"))
                                             (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "16"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0"))
                                             (rule "qeq_literals" (formula "32") (term "0"))
                                             (rule "concrete_and_2" (formula "32"))
                                             (rule "false_right" (formula "32"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_6"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                             (rule "times_zero_1" (formula "13") (term "0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_6"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "18"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0"))
                                             (rule "add_literals" (formula "18") (term "0"))
                                             (rule "qeq_literals" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                          (branch " CUT: m_0_6.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "inEqSimp_geqRight" (formula "29"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_6"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "allLeft" (formula "15") (inst "t=m_0_6"))
                                             (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "15") (term "1,0"))
                                             (rule "concrete_or_4" (formula "15") (term "0"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "allLeft" (formula "9") (inst "t=m_0_6"))
                                             (rule "replace_known_left" (formula "9") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "9") (term "1,0"))
                                             (rule "concrete_or_4" (formula "9") (term "0"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "27") (inst "sk=m_0_7"))
                                          (rule "orRight" (formula "27"))
                                          (rule "orRight" (formula "27"))
                                          (rule "notRight" (formula "27"))
                                          (rule "eqSymm" (formula "29") (term "0,0,0"))
                                          (rule "eqSymm" (formula "29") (term "0,0,1"))
                                          (rule "ifthenelse_split" (formula "29") (term "0,0"))
                                          (branch " self = m_0_7 TRUE"
                                             (rule "castDelInt" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,1") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "30") (term "0,1"))
                                             (rule "castDelInt" (formula "30") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                             (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1"))
                                             (rule "mul_literals" (formula "28") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                             (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "21"))
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (rule "concrete_and_2" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                          (branch " self = m_0_7 FALSE"
                                             (rule "replace_known_right" (formula "30") (term "0,0,1") (ifseqformula "29"))
                                             (rule "ifthenelse_false" (formula "30") (term "0,1"))
                                             (rule "cut_direct" (formula "30") (term "0"))
                                             (branch " CUT: m_0_7.size <= m_0_7.capacity TRUE"
                                                (rule "concrete_and_1" (formula "31"))
                                                (rule "inEqSimp_geqRight" (formula "31"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_7"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "31"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "allLeft" (formula "15") (inst "t=m_0_7"))
                                                (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "15") (term "0"))
                                                (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "3"))
                                                (rule "concrete_not_1" (formula "15") (term "0"))
                                                (rule "concrete_or_2" (formula "15"))
                                                (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "15") (term "0"))
                                                (rule "concrete_and_2" (formula "15"))
                                                (rule "closeFalse" (formula "15"))
                                             )
                                             (branch " CUT: m_0_7.size <= m_0_7.capacity FALSE"
                                                (rule "concrete_and_2" (formula "31"))
                                                (rule "false_right" (formula "31"))
                                                (rule "inEqSimp_leqRight" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "14") (inst "t=m_0_7"))
                                                (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "14") (term "1,0"))
                                                (rule "concrete_or_4" (formula "14") (term "0"))
                                                (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "14"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "14"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_literals" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "27") (inst "sk=m_0_8"))
                                       (rule "orRight" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "notRight" (formula "27"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "14") (inst "t=m_0_8"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_8"))
                                       (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "11") (term "1,0"))
                                       (rule "concrete_or_4" (formula "11") (term "0"))
                                       (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "27") (inst "sk=m_0_9"))
                                    (rule "orRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "27"))
                                    (rule "allRight" (formula "29") (inst "sk=i_8"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "31"))
                                    (rule "eqSymm" (formula "31") (term "0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "30"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " self = m_0_9 TRUE"
                                       (rule "castDelInt" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (rule "eqClose" (formula "4") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                       (rule "times_zero_1" (formula "15") (term "0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                                       (rule "times_zero_1" (formula "10") (term "0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch " m_0_9.size = i_8 TRUE"
                                          (rule "close" (formula "29") (ifseqformula "6"))
                                       )
                                       (branch " m_0_9.size = i_8 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "27"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                          (rule "concrete_and_2" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "19") (inst "t=m_0_9"))
                                          (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "19") (term "1,0"))
                                          (rule "concrete_or_4" (formula "19") (term "0"))
                                          (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
                                          (rule "concrete_or_2" (formula "19"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq0" (formula "19"))
                                          (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,0"))
                                          (rule "times_zero_1" (formula "19") (term "0"))
                                          (rule "qeq_literals" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "20") (inst "t=m_0_9"))
                                          (rule "replace_known_right" (formula "20") (term "1,0,0,0,0") (ifseqformula "32"))
                                          (rule "concrete_or_4" (formula "20") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "20") (term "0,1,0,0,0") (ifseqformula "6"))
                                          (rule "concrete_not_1" (formula "20") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                          (rule "allLeft" (formula "20") (inst "t=i_8"))
                                          (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                          (rule "leq_literals" (formula "20") (term "0,1"))
                                          (rule "concrete_and_2" (formula "20") (term "1"))
                                          (rule "concrete_or_4" (formula "20"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "20"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (rule "concrete_and_2" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch " self = m_0_9 FALSE"
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " self.size = i_8 & self.highscores = m_0_9.highscores TRUE"
                                          (rule "close" (formula "29") (ifseqformula "4"))
                                       )
                                       (branch " self.size = i_8 & self.highscores = m_0_9.highscores FALSE"
                                          (rule "allLeft" (formula "18") (inst "t=m_0_9"))
                                          (rule "replace_known_right" (formula "18") (term "1,0,0,0,0") (ifseqformula "34"))
                                          (rule "concrete_or_4" (formula "18") (term "0,0,0,0"))
                                          (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0_9"))
                                          (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "35"))
                                          (rule "concrete_or_2" (formula "17") (term "0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "17") (term "0"))
                                          (rule "concrete_or_2" (formula "17"))
                                          (rule "allLeft" (formula "22") (inst "t=m_0_9"))
                                          (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "22") (term "1,0"))
                                          (rule "concrete_or_4" (formula "22") (term "0"))
                                          (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "36"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_9"))
                                          (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "37"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "allLeft" (formula "16") (inst "t=m_0_9"))
                                          (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "16") (term "1,0"))
                                          (rule "concrete_or_4" (formula "16") (term "0"))
                                          (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "39"))
                                          (rule "concrete_or_2" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                          (rule "times_zero_1" (formula "16") (term "0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0"))
                                          (rule "allLeft" (formula "14") (inst "t=m_0_9"))
                                          (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "14") (term "1,0"))
                                          (rule "concrete_or_4" (formula "14") (term "0"))
                                          (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "14"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,0"))
                                          (rule "times_zero_1" (formula "22") (term "0"))
                                          (rule "qeq_literals" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "allLeft" (formula "25") (inst "t=m_0_9"))
                                          (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "41"))
                                          (rule "concrete_or_2" (formula "25") (term "0,0,0"))
                                          (rule "allLeft" (formula "23") (inst "t=i_8"))
                                          (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "23") (term "1"))
                                          (rule "concrete_or_4" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (rule "concrete_and_2" (formula "23") (term "0"))
                                          (rule "concrete_or_2" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "27") (inst "sk=h_1"))
                                 (rule "orRight" (formula "27"))
                                 (rule "orRight" (formula "28"))
                                 (rule "allRight" (formula "28") (inst "sk=other_1"))
                                 (rule "orRight" (formula "28"))
                                 (rule "orRight" (formula "28"))
                                 (rule "notRight" (formula "28"))
                                 (rule "allLeft" (formula "16") (inst "t=h_1"))
                                 (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "16") (term "0,0,0"))
                                 (rule "allLeft" (formula "16") (inst "t=other_1"))
                                 (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "1"))
                                 (rule "concrete_not_1" (formula "16") (term "1"))
                                 (rule "concrete_or_4" (formula "16"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "close" (formula "32") (ifseqformula "16"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "27") (inst "sk=m_0_10"))
                              (rule "orRight" (formula "27"))
                              (rule "notRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "notRight" (formula "28"))
                              (rule "allLeft" (formula "11") (inst "t=m_0_10"))
                              (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "11") (term "0"))
                              (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "11") (term "0"))
                              (rule "concrete_or_2" (formula "11"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "11"))
                              (rule "allLeft" (formula "15") (inst "t=m_0_10"))
                              (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "15") (term "1,0"))
                              (rule "concrete_or_4" (formula "15") (term "0"))
                              (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                              (rule "allLeft" (formula "14") (inst "t=m_0_10"))
                              (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "32"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "allLeft" (formula "22") (inst "t=m_0_10"))
                              (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "34"))
                              (rule "concrete_or_2" (formula "22") (term "0"))
                              (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "22") (term "0"))
                              (rule "concrete_or_2" (formula "22"))
                              (rule "notLeft" (formula "22"))
                              (rule "close" (formula "28") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "27") (inst "sk=m_0_11"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "notRight" (formula "27"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,1,0,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,0,1,1,1"))
                           (rule "eqSymm" (formula "29") (term "0,0,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,1,1"))
                           (rule "ifthenelse_split" (formula "29") (term "0,1,0"))
                           (branch " self = m_0_11 TRUE"
                              (rule "castDelInt" (formula "30") (term "0,1,0"))
                              (rule "replace_known_left" (formula "30") (term "0,0,1,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "0,1,0,1"))
                              (rule "castDelInt" (formula "30") (term "0,1,0,1"))
                              (rule "replace_known_left" (formula "30") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "ifthenelse_true" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "castDelInt" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1,0"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "5") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0,0,0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "30") (term "0,0,0,0,1,0,1,1,1"))
                              (rule "concrete_and_1" (formula "30") (term "0,0,0,1,0,1,1,1"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,0,0,0,0,1,1,0,1,1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "29") (term "0,0,0,1,1,0,1,1,1"))
                              (rule "concrete_and_1" (formula "29") (term "0,0,1,1,0,1,1,1"))
                              (rule "applyEq" (formula "29") (term "0,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,1,0,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "28") (term "0,0,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "replace_known_right" (formula "28") (term "0,0,1,1,0,1,1,1") (ifseqformula "25"))
                              (rule "ifthenelse_false" (formula "28") (term "0,1,1,0,1,1,1"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "10"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "1,0,1") (ifseqformula "12"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,1,0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,1,0,1"))
                              (rule "concrete_and_2" (formula "28") (term "1,0,1"))
                              (rule "concrete_eq_4" (formula "28") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,1,1") (ifseqformula "6"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0,0,1,1"))
                              (rule "leq_literals" (formula "28") (term "0,0,0,1,1"))
                              (rule "concrete_and_2" (formula "28") (term "0,0,1,1"))
                              (rule "concrete_not_2" (formula "28") (term "0,1,1"))
                              (rule "concrete_eq_1" (formula "28") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,1") (ifseqformula "6"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,0,0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "28") (term "0,0,1"))
                              (rule "concrete_not_2" (formula "28") (term "0,1"))
                              (rule "concrete_and_1" (formula "28") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "6"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "28") (term "0,0"))
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "6") (term "0,0"))
                              (rule "add_zero_left" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch " CUT: m_0_11.size >= m_0_11.min TRUE"
                                 (rule "concrete_and_1" (formula "29"))
                                 (rule "allRight" (formula "29") (inst "sk=i_17"))
                                 (rule "orRight" (formula "29"))
                                 (rule "orRight" (formula "29"))
                                 (rule "orRight" (formula "30"))
                                 (rule "eqSymm" (formula "32") (term "0,0,0"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "inEqSimp_leqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "31"))
                                 (rule "inEqSimp_geqRight" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "29"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_1" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "25"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "11") (term "0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "mul_literals" (formula "11") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_1" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "allLeft" (formula "20") (inst "t=m_0_11"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "8"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "32"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,0"))
                                 (rule "times_zero_1" (formula "20") (term "0"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                 (branch " m_0_11.size = i_17 TRUE"
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "27"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0"))
                                    (rule "qeq_literals" (formula "30") (term "0"))
                                    (rule "concrete_and_2" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "2"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "leq_literals" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                                 (branch " m_0_11.size = i_17 FALSE"
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "28"))
                                    (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "3"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "leq_literals" (formula "28") (term "0"))
                                    (rule "concrete_and_2" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "26"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "allLeft" (formula "22") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "22") (term "1,0,0,0,0") (ifseqformula "33"))
                                    (rule "concrete_or_4" (formula "22") (term "0,0,0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0,0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0,0,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                    (rule "allLeft" (formula "27") (inst "t=m_0_11"))
                                    (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                                    (rule "replace_known_right" (formula "27") (term "1,0,0,0,0,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "27") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                    (rule "concrete_not_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "27") (term "1,0,0,0,0") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "27") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0,0,0"))
                                    (rule "allLeft" (formula "27") (inst "t=i_17"))
                                    (rule "eqSymm" (formula "27") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "36"))
                                    (rule "concrete_or_4" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "27") (term "0,0"))
                                    (rule "concrete_or_2" (formula "27") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                    (rule "leq_literals" (formula "27") (term "0,1"))
                                    (rule "concrete_and_2" (formula "27") (term "1"))
                                    (rule "concrete_or_4" (formula "27"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "27"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch " CUT: m_0_11.size >= m_0_11.min FALSE"
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0"))
                                 (rule "qeq_literals" (formula "26") (term "0"))
                                 (rule "concrete_and_2" (formula "26"))
                                 (rule "false_right" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "12") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_1" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "allLeft" (formula "16") (inst "t=m_0_11"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "16") (term "1,0"))
                                 (rule "concrete_or_4" (formula "16") (term "0"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "28"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq0" (formula "16"))
                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0"))
                                 (rule "qeq_literals" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "allLeft" (formula "20") (inst "t=m_0_11"))
                                 (rule "exLeft" (formula "20") (inst "sk=i_18"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "21"))
                                 (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "20") (term "1,0"))
                                 (rule "concrete_or_4" (formula "20") (term "0"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "27") (term "0,0"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "27") (term "0,0"))
                                 (rule "concrete_or_2" (formula "27") (term "0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "26") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "26") (term "0,0"))
                                 (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "26") (term "0"))
                                 (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "25") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "25") (term "0,0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "24") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "23") (term "1,0"))
                                 (rule "concrete_or_4" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "35"))
                                 (rule "concrete_or_4" (formula "22") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "3"))
                                 (rule "concrete_not_1" (formula "22") (term "1,0"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "35"))
                                 (rule "concrete_or_4" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "35"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "27") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "27") (term "0,0"))
                                 (rule "concrete_not_2" (formula "27") (term "0"))
                                 (rule "concrete_or_1" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_contradEq7" (formula "23") (term "0,1") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "leq_literals" (formula "23") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "23") (term "0,1"))
                                 (rule "concrete_not_2" (formula "23") (term "1"))
                                 (rule "concrete_or_3" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "25") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "25") (term "0,0"))
                                 (rule "concrete_not_2" (formula "25") (term "0"))
                                 (rule "concrete_or_1" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "24") (term "0,0"))
                                 (rule "concrete_not_2" (formula "24") (term "0"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_contradEq7" (formula "23") (term "0") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                 (rule "concrete_and_2" (formula "23") (term "0"))
                                 (rule "concrete_or_2" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "27"))
                                 (rule "add_zero_right" (formula "13") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "13"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                 (rule "concrete_and_2" (formula "27"))
                                 (rule "false_right" (formula "27"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                 (rule "concrete_or_1" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " self = m_0_11 FALSE"
                              (rule "replace_known_right" (formula "30") (term "0,0,1,0,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "0,1,0,1"))
                              (rule "replace_known_right" (formula "30") (term "0,1,1,1,0,0,1,1,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "30") (term "1,1,1,0,0,1,1,1"))
                              (rule "cut_direct" (formula "30") (term "0,0"))
                              (branch " CUT: m_0_11.min >= -1 TRUE"
                                 (rule "concrete_and_1" (formula "31") (term "0"))
                                 (rule "ifthenelse_split" (formula "31") (term "0,1,1,0,1,1,1"))
                                 (branch "   self.highscores = m_0_11.highscores
& self.size = m_0_11.min TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "33") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "concrete_and_1" (formula "33") (term "0,0,0,1,0,1,1,1"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "23"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                    (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1"))
                                    (rule "mul_literals" (formula "23") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,1,1") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "33") (term "0,0,0,1,1"))
                                    (rule "concrete_and_2" (formula "33") (term "0,0,1,1"))
                                    (rule "concrete_not_2" (formula "33") (term "0,1,1"))
                                    (rule "concrete_eq_1" (formula "33") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "33") (term "0,0,1") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,0,0,1"))
                                    (rule "concrete_and_2" (formula "33") (term "0,0,1"))
                                    (rule "concrete_eq_2" (formula "33") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "allLeft" (formula "18") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "18") (term "0,0,0,0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "18") (term "0,0,0"))
                                    (rule "cut_direct" (formula "33") (term "0"))
                                    (branch " CUT: m_0_11.size >= 1 + m_0_11.min TRUE"
                                       (rule "concrete_and_1" (formula "34"))
                                       (rule "allLeft" (formula "19") (inst "t=self"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "close" (formula "27") (ifseqformula "2"))
                                    )
                                    (branch " CUT: m_0_11.size >= 1 + m_0_11.min FALSE"
                                       (rule "concrete_and_2" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "19") (inst "t=self"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "close" (formula "27") (ifseqformula "2"))
                                    )
                                 )
                                 (branch "   self.highscores = m_0_11.highscores
& self.size = m_0_11.min FALSE"
                                    (rule "allLeft" (formula "17") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0,0") (ifseqformula "30"))
                                    (rule "concrete_or_2" (formula "17") (term "0,0,0"))
                                    (rule "allLeft" (formula "13") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "13") (term "0"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "13") (term "0"))
                                    (rule "concrete_or_2" (formula "13"))
                                    (rule "allLeft" (formula "11") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "11") (term "0"))
                                    (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "11") (term "0"))
                                    (rule "concrete_or_2" (formula "11"))
                                    (rule "allLeft" (formula "21") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "33"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "allLeft" (formula "17") (inst "t=m_0_11"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "17") (term "0"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "17") (term "0"))
                                    (rule "concrete_or_2" (formula "17"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,0"))
                                    (rule "times_zero_1" (formula "17") (term "0"))
                                    (rule "qeq_literals" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "19") (inst "t=self"))
                                    (rule "replace_known_right" (formula "19") (term "1,0") (ifseqformula "35"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "27"))
                                    (rule "concrete_and_2" (formula "36"))
                                    (rule "false_right" (formula "36"))
                                    (rule "replace_known_right" (formula "36") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "27"))
                                    (rule "concrete_and_2" (formula "36") (term "0,0,0,1,0,1,1,1"))
                                    (rule "ifthenelse_false" (formula "36") (term "0,0,1,0,1,1,1"))
                                    (rule "allLeft" (formula "16") (inst "t=m_0_11"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0"))
                                    (rule "concrete_or_4" (formula "16") (term "0"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                    (rule "times_zero_1" (formula "14") (term "0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0"))
                                    (rule "cut_direct" (formula "38") (term "0"))
                                    (branch " CUT: m_0_11.size >= 1 + m_0_11.min TRUE"
                                       (rule "concrete_and_1" (formula "39"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "andRight" (formula "40"))
                                       (branch " Case 1"
                                          (rule "equiv_right" (formula "40"))
                                          (branch " Case 1"
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "38"))
                                             (rule "add_zero_right" (formula "15") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "15"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0"))
                                             (rule "leq_literals" (formula "38") (term "0"))
                                             (rule "concrete_and_2" (formula "38"))
                                             (rule "false_right" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                             (rule "mul_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                             (rule "concrete_or_1" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "35") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "35"))
                                             (rule "array_length_non_negative_3" (formula "11") (term "0") (ifseqformula "8") (ifseqformula "5") (ifseqformula "32"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_1" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "30") (term "1") (ifseqformula "3") (ifseqformula "8") (ifseqformula "31"))
                                             (rule "allLeft" (formula "24") (inst "t=self"))
                                             (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "36"))
                                             (rule "concrete_or_2" (formula "24") (term "0,0,0"))
                                             (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "9") (ifseqformula "1") (ifseqformula "33"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "allLeft" (formula "27") (inst "t=m_0_11"))
                                             (rule "exLeft" (formula "27") (inst "sk=i_46"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "28") (term "1,0"))
                                             (rule "concrete_or_4" (formula "28") (term "0"))
                                             (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "47"))
                                             (rule "concrete_or_2" (formula "28"))
                                             (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "47"))
                                             (rule "concrete_or_2" (formula "27") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "27") (term "0"))
                                             (rule "concrete_or_2" (formula "27"))
                                             (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "34") (term "1,0"))
                                             (rule "concrete_or_4" (formula "34") (term "0"))
                                             (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "34") (term "1,0"))
                                             (rule "concrete_or_4" (formula "34") (term "0"))
                                             (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "47"))
                                             (rule "concrete_or_2" (formula "34"))
                                             (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "33") (term "1,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0,0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0"))
                                             (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "47"))
                                             (rule "concrete_or_2" (formula "32"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0,0"))
                                             (rule "replace_known_left" (formula "31") (term "1,0") (ifseqformula "3"))
                                             (rule "concrete_or_3" (formula "31") (term "0"))
                                             (rule "concrete_or_1" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "30") (term "1,0"))
                                             (rule "concrete_or_4" (formula "30") (term "0"))
                                             (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "30") (term "1"))
                                             (rule "concrete_or_4" (formula "30"))
                                             (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "46"))
                                             (rule "concrete_or_4" (formula "29") (term "0,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0"))
                                             (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "46"))
                                             (rule "concrete_or_2" (formula "32"))
                                             (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "46"))
                                             (rule "concrete_or_4" (formula "30"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "times_zero_2" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1,0"))
                                             (rule "add_zero_right" (formula "31") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "30"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                          (branch " Case 2"
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "times_zero_2" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "39"))
                                             (rule "add_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "leq_literals" (formula "39") (term "0"))
                                             (rule "concrete_and_2" (formula "39"))
                                             (rule "false_right" (formula "39"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (rule "concrete_and_2" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "equiv_right" (formula "40"))
                                          (branch " Case 1"
                                             (rule "notLeft" (formula "1"))
                                             (rule "allRight" (formula "41") (inst "sk=i_19"))
                                             (rule "orRight" (formula "41"))
                                             (rule "orRight" (formula "41"))
                                             (rule "orRight" (formula "42"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "inEqSimp_geqRight" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "43"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "44"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "34"))
                                             (rule "add_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "6"))
                                             (rule "add_zero_left" (formula "34") (term "0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                             (rule "concrete_and_2" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                             (rule "concrete_or_1" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "41") (term "0") (ifseqformula "11") (ifseqformula "14") (ifseqformula "41"))
                                             (rule "allLeft" (formula "27") (inst "t=m_0_11"))
                                             (rule "replace_known_right" (formula "27") (term "1,0,0,0,0") (ifseqformula "44"))
                                             (rule "concrete_or_4" (formula "27") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "27") (term "0,1,0,0,0") (ifseqformula "10"))
                                             (rule "concrete_not_1" (formula "27") (term "1,0,0,0"))
                                             (rule "concrete_or_4" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
                                             (rule "allLeft" (formula "33") (inst "t=m_0_11"))
                                             (rule "eqSymm" (formula "33") (term "1,0,0,0"))
                                             (rule "replace_known_left" (formula "33") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                             (rule "concrete_not_1" (formula "33") (term "1,0,0,0,0,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "45"))
                                             (rule "concrete_or_4" (formula "33") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (term "1,0,0,0,0") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "33") (term "1,0,0,0,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0,0,0,0"))
                                             (rule "allLeft" (formula "33") (inst "t=i_19"))
                                             (rule "eqSymm" (formula "33") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "48"))
                                             (rule "concrete_or_4" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                             (rule "concrete_and_2" (formula "33") (term "1"))
                                             (rule "concrete_or_4" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "33") (term "0,0"))
                                             (rule "concrete_and_2" (formula "33") (term "0"))
                                             (rule "concrete_or_2" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "3"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "inEqSimp_homoInEq1" (formula "33"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0"))
                                             (rule "add_zero_right" (formula "33") (term "0"))
                                             (rule "leq_literals" (formula "33"))
                                             (rule "closeFalse" (formula "33"))
                                          )
                                          (branch " Case 2"
                                             (rule "notRight" (formula "41"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "36") (term "0") (ifseqformula "5") (ifseqformula "8") (ifseqformula "36"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_11"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "39"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (rule "concrete_or_1" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "9") (ifseqformula "6") (ifseqformula "33"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "14") (term "0,0") (ifseqformula "4") (ifseqformula "9") (ifseqformula "32"))
                                             (rule "allLeft" (formula "25") (inst "t=self"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "37"))
                                             (rule "concrete_or_2" (formula "25") (term "0,0,0"))
                                             (rule "array_length_non_negative_3" (formula "15") (term "0") (ifseqformula "9") (ifseqformula "14") (ifseqformula "34"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (rule "concrete_or_1" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "allLeft" (formula "28") (inst "t=self"))
                                             (rule "exLeft" (formula "28") (inst "sk=i_20"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "28") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "28") (term "0"))
                                             (rule "concrete_or_2" (formula "28"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0"))
                                             (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "29"))
                                             (rule "replace_known_left" (formula "35") (term "0,1,0,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "35") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "35") (term "0,0"))
                                             (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "35") (term "0"))
                                             (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "34") (term "0,0"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "34") (term "0,0"))
                                             (rule "concrete_or_2" (formula "34") (term "0"))
                                             (rule "replace_known_left" (formula "33") (term "0,1,0,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "33") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0,0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0,0"))
                                             (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "45"))
                                             (rule "concrete_or_4" (formula "31") (term "0,0"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "45"))
                                             (rule "concrete_or_4" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "39"))
                                             (rule "concrete_not_1" (formula "30") (term "1,0"))
                                             (rule "concrete_or_4" (formula "30") (term "0"))
                                             (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "33") (term "0"))
                                             (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                             (rule "concrete_or_2" (formula "32") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "35") (term "0,0") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "35") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "35") (term "0,0"))
                                             (rule "concrete_not_2" (formula "35") (term "0"))
                                             (rule "concrete_or_1" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (term "0") (ifseqformula "8"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0"))
                                             (rule "leq_literals" (formula "32") (term "0,0"))
                                             (rule "concrete_and_2" (formula "32") (term "0"))
                                             (rule "concrete_or_2" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "39"))
                                             (rule "concrete_or_4" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "38"))
                                             (rule "concrete_not_2" (formula "32") (term "0"))
                                             (rule "concrete_or_1" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "37"))
                                             (rule "concrete_not_2" (formula "31") (term "1"))
                                             (rule "concrete_or_3" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "29"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (rule "concrete_and_2" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                             (rule "concrete_and_2" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "36"))
                                             (rule "add_zero_right" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "17"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                             (rule "concrete_and_2" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (rule "concrete_or_1" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "32"))
                                             (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (rule "concrete_or_1" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "32"))
                                             (rule "mul_literals" (formula "16") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "27"))
                                             (rule "times_zero_1" (formula "7") (term "0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "cut_direct" (formula "29") (term "0,1"))
                                             (branch " CUT: self.min = i_20 TRUE"
                                                (rule "concrete_not_1" (formula "30") (term "1"))
                                                (rule "concrete_or_4" (formula "30"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "29"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "29"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq0" (formula "27"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "29"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "7"))
                                                (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (rule "concrete_and_2" (formula "35"))
                                                (rule "false_right" (formula "35"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "32"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                (rule "allLeft" (formula "30") (inst "t=m_0_11"))
                                                (rule "exLeft" (formula "30") (inst "sk=i_93"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "andLeft" (formula "30"))
                                                (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "31") (term "0"))
                                                (rule "concrete_or_2" (formula "31"))
                                                (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "30") (term "0"))
                                                (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "30") (term "0"))
                                                (rule "concrete_or_2" (formula "30"))
                                                (rule "replace_known_left" (formula "37") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "37") (term "1,0"))
                                                (rule "concrete_or_4" (formula "37") (term "0"))
                                                (rule "replace_known_left" (formula "37") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "37") (term "1,0"))
                                                (rule "concrete_or_4" (formula "37") (term "0"))
                                                (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "37"))
                                                (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "36") (term "0,0"))
                                                (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "36") (term "1,0"))
                                                (rule "concrete_or_4" (formula "36") (term "0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "36") (term "0"))
                                                (rule "concrete_or_2" (formula "36"))
                                                (rule "replace_known_right" (formula "35") (term "0,0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "35") (term "0,0"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                (rule "concrete_or_4" (formula "35") (term "0"))
                                                (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "2"))
                                                (rule "concrete_or_3" (formula "34") (term "0"))
                                                (rule "concrete_or_1" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "48"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "33") (term "1"))
                                                (rule "concrete_or_4" (formula "33"))
                                                (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "34") (term "0"))
                                                (rule "concrete_or_2" (formula "34"))
                                                (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "48"))
                                                (rule "concrete_or_4" (formula "33"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                (rule "times_zero_2" (formula "31") (term "1,0"))
                                                (rule "add_zero_right" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "32") (term "0,0,1") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "32") (term "0,1"))
                                                (rule "eq_or" (formula "32"))
                                                (rule "notLeft" (formula "32"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "33"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "33"))
                                                (rule "qeq_literals" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "times_zero_2" (formula "32") (term "1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0"))
                                                (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "2"))
                                                (rule "add_literals" (formula "29") (term "0"))
                                                (rule "leq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                (rule "mul_literals" (formula "32") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "29"))
                                                (rule "add_zero_left" (formula "38") (term "0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,0"))
                                                (rule "leq_literals" (formula "38") (term "0"))
                                                (rule "concrete_and_2" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                (rule "concrete_or_1" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                (rule "concrete_and_2" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                             (branch " CUT: self.min = i_20 FALSE"
                                                (rule "concrete_not_2" (formula "29") (term "1"))
                                                (rule "concrete_or_3" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "allLeft" (formula "29") (inst "t=m_0_11"))
                                                (rule "exLeft" (formula "29") (inst "sk=i_65"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                (rule "concrete_or_4" (formula "29") (term "0"))
                                                (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "29"))
                                                (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "30") (term "1,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0"))
                                                (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "30"))
                                                (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "36") (term "1,0"))
                                                (rule "concrete_or_4" (formula "36") (term "0"))
                                                (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "36") (term "0"))
                                                (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "36") (term "0"))
                                                (rule "concrete_or_2" (formula "36"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "35") (term "1,0"))
                                                (rule "concrete_or_4" (formula "35") (term "0"))
                                                (rule "replace_known_left" (formula "34") (term "0,1,0") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "34") (term "1,0"))
                                                (rule "concrete_or_4" (formula "34") (term "0"))
                                                (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "49"))
                                                (rule "concrete_or_2" (formula "33") (term "0,0"))
                                                (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "2"))
                                                (rule "concrete_or_3" (formula "33") (term "0"))
                                                (rule "concrete_or_1" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "32") (term "1"))
                                                (rule "concrete_or_4" (formula "32"))
                                                (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                (rule "concrete_or_4" (formula "31") (term "0"))
                                                (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "48"))
                                                (rule "concrete_or_2" (formula "34") (term "0"))
                                                (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "34") (term "0"))
                                                (rule "concrete_or_2" (formula "34"))
                                                (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "48"))
                                                (rule "concrete_or_4" (formula "32"))
                                                (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "33") (term "1,0"))
                                                (rule "concrete_or_4" (formula "33") (term "0"))
                                                (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "48"))
                                                (rule "concrete_or_2" (formula "33"))
                                                (rule "replace_known_right" (formula "31") (term "1,0") (ifseqformula "48"))
                                                (rule "concrete_or_4" (formula "31") (term "0"))
                                                (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "35"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                                                (rule "inEqSimp_homoInEq1" (formula "30"))
                                                (rule "times_zero_2" (formula "30") (term "1,0"))
                                                (rule "add_zero_right" (formula "30") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "33"))
                                                (rule "times_zero_2" (formula "33") (term "1,0"))
                                                (rule "add_zero_right" (formula "33") (term "0"))
                                                (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "30") (term "0,1"))
                                                (rule "eq_or" (formula "30"))
                                                (rule "notLeft" (formula "30"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "31"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_commuteLeq" (formula "19"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "31"))
                                                (rule "qeq_literals" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "add_literals" (formula "28") (term "0"))
                                                (rule "leq_literals" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                (rule "mul_literals" (formula "31") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                (rule "mul_literals" (formula "30") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "28"))
                                                (rule "add_zero_left" (formula "37") (term "0,0"))
                                                (rule "mul_literals" (formula "37") (term "0,0"))
                                                (rule "leq_literals" (formula "37") (term "0"))
                                                (rule "concrete_and_2" (formula "37"))
                                                (rule "false_right" (formula "37"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "30"))
                                                (rule "qeq_literals" (formula "28") (term "0"))
                                                (rule "concrete_and_2" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " CUT: m_0_11.size >= 1 + m_0_11.min FALSE"
                                       (rule "concrete_and_2" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "inEqSimp_geqRight" (formula "38"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "36") (term "0") (ifseqformula "4") (ifseqformula "7") (ifseqformula "36"))
                                       (rule "allLeft" (formula "10") (inst "t=m_0_11"))
                                       (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "39"))
                                       (rule "concrete_or_2" (formula "10") (term "0"))
                                       (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "10") (term "0"))
                                       (rule "concrete_or_2" (formula "10"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "allLeft" (formula "26") (inst "t=m_0_11"))
                                       (rule "exLeft" (formula "26") (inst "sk=i_21"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "27") (term "1,0"))
                                       (rule "concrete_or_4" (formula "27") (term "0"))
                                       (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "27"))
                                       (rule "replace_known_right" (formula "33") (term "0,0,0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "33") (term "0,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "33") (term "0,0"))
                                       (rule "concrete_or_2" (formula "33") (term "0"))
                                       (rule "replace_known_left" (formula "32") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "32") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "32") (term "0,0"))
                                       (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "32") (term "0"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "31") (term "0,0"))
                                       (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "30") (term "0,0"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0") (ifseqformula "46"))
                                       (rule "concrete_or_4" (formula "29") (term "0,0"))
                                       (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "46"))
                                       (rule "concrete_or_4" (formula "28") (term "0,0"))
                                       (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "29") (term "1,0"))
                                       (rule "concrete_or_4" (formula "29") (term "0"))
                                       (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "28") (term "1,0"))
                                       (rule "concrete_or_4" (formula "28") (term "0"))
                                       (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "46"))
                                       (rule "concrete_or_2" (formula "30") (term "0"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "31") (term "0,0"))
                                       (rule "concrete_or_2" (formula "31") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "33") (term "0,0") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "33") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "33") (term "0,0"))
                                       (rule "concrete_not_2" (formula "33") (term "0"))
                                       (rule "concrete_or_1" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "31") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "31") (term "0,0"))
                                       (rule "concrete_not_2" (formula "31") (term "0"))
                                       (rule "concrete_or_1" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_contradEq7" (formula "30") (term "0") (ifseqformula "16"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "0"))
                                       (rule "concrete_or_2" (formula "30"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "30") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "30") (term "0,0"))
                                       (rule "concrete_not_2" (formula "30") (term "0"))
                                       (rule "concrete_or_1" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "inEqSimp_contradEq7" (formula "29") (term "0,1") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,0,1"))
                                       (rule "concrete_and_2" (formula "29") (term "0,1"))
                                       (rule "concrete_not_2" (formula "29") (term "1"))
                                       (rule "concrete_or_3" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "34"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "17"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                       (rule "concrete_and_2" (formula "34"))
                                       (rule "false_right" (formula "34"))
                                       (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "2"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0"))
                                       (rule "add_zero_right" (formula "27") (term "0"))
                                       (rule "leq_literals" (formula "27"))
                                       (rule "closeFalse" (formula "27"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_11.min >= -1 FALSE"
                                 (rule "concrete_and_2" (formula "31") (term "0"))
                                 (rule "concrete_and_2" (formula "31"))
                                 (rule "false_right" (formula "31"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "19") (inst "t=m_0_11"))
                                 (rule "exLeft" (formula "19") (inst "sk=i_9"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "20") (term "0"))
                                 (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "20") (term "0"))
                                 (rule "concrete_or_2" (formula "20"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "19") (term "0"))
                                 (rule "concrete_or_2" (formula "19"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "26") (term "0,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0"))
                                 (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "25") (term "0,0"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "25") (term "0,0"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "24") (term "0,0"))
                                 (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "23") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "23") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "22") (term "1,0"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "21") (term "1,0"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "37"))
                                 (rule "concrete_or_4" (formula "22") (term "0"))
                                 (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "37"))
                                 (rule "concrete_or_4" (formula "21") (term "0"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "23") (term "0"))
                                 (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "37"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "26") (term "0,0"))
                                 (rule "concrete_not_2" (formula "26") (term "0"))
                                 (rule "concrete_or_1" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "inEqSimp_contradEq3" (formula "23") (term "0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                 (rule "concrete_and_2" (formula "23") (term "0"))
                                 (rule "concrete_or_2" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "30"))
                                 (rule "concrete_or_4" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
                                 (rule "concrete_not_2" (formula "23") (term "0"))
                                 (rule "concrete_or_1" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "28"))
                                 (rule "concrete_not_2" (formula "22") (term "1"))
                                 (rule "concrete_or_3" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                 (rule "concrete_and_2" (formula "27"))
                                 (rule "false_right" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_and_2" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch " Null Reference (v_Record_1 = null)"
                  (builtin "Update Simplification" (formula "24"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " self.size = self.min TRUE"
                     (rule "close" (formula "23") (ifseqformula "2"))
                  )
                  (branch " self.size = self.min FALSE"
                     (rule "allLeft" (formula "13") (inst "t=self"))
                     (rule "replace_known_left" (formula "13") (term "0,1,0,0,0") (ifseqformula "20"))
                     (rule "concrete_not_1" (formula "13") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "13") (term "0,0,0"))
                     (rule "replace_known_right" (formula "13") (term "1,0,0,0") (ifseqformula "25"))
                     (rule "concrete_or_4" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                     (rule "allLeft" (formula "13") (inst "t=self.min@(maze.Highscore)"))
                     (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "1"))
                     (rule "concrete_not_1" (formula "13") (term "1"))
                     (rule "concrete_or_4" (formula "13"))
                     (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "13") (term "0,0"))
                     (rule "concrete_and_2" (formula "13") (term "0"))
                     (rule "concrete_or_2" (formula "13"))
                     (rule "inEqSimp_strengthen0" (formula "13") (ifseqformula "23"))
                     (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0"))
                     (rule "qeq_literals" (formula "23") (term "0"))
                     (rule "concrete_and_2" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                     (rule "times_zero_1" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                     (rule "mul_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "allLeft" (formula "18") (inst "t=self"))
                     (rule "exLeft" (formula "18") (inst "sk=i_22"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "19") (term "1,0"))
                     (rule "concrete_or_4" (formula "19") (term "0"))
                     (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "19"))
                     (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "18") (term "1,0"))
                     (rule "concrete_or_4" (formula "18") (term "0"))
                     (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "18"))
                     (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "25") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "25") (term "0,0"))
                     (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "25") (term "0"))
                     (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "24") (term "0,0"))
                     (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "24") (term "0"))
                     (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "23") (term "1,0,0"))
                     (rule "concrete_or_4" (formula "23") (term "0,0"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "22") (term "0,0"))
                     (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "21") (term "1,0"))
                     (rule "concrete_or_4" (formula "21") (term "0"))
                     (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "20") (term "1,0"))
                     (rule "concrete_or_4" (formula "20") (term "0"))
                     (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "29"))
                     (rule "concrete_not_1" (formula "22") (term "0,0"))
                     (rule "concrete_or_2" (formula "22") (term "0"))
                     (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "33"))
                     (rule "concrete_or_2" (formula "23") (term "0"))
                     (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "33"))
                     (rule "concrete_or_4" (formula "20") (term "0"))
                     (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "33"))
                     (rule "concrete_or_4" (formula "21") (term "0"))
                     (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                     (rule "mul_literals" (formula "25") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "21") (term "0,1") (ifseqformula "8"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1"))
                     (rule "leq_literals" (formula "21") (term "0,0,1"))
                     (rule "concrete_and_2" (formula "21") (term "0,1"))
                     (rule "concrete_not_2" (formula "21") (term "1"))
                     (rule "concrete_or_3" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "24") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "24") (term "0,0"))
                     (rule "concrete_not_2" (formula "24") (term "0"))
                     (rule "concrete_or_1" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_contradEq7" (formula "22") (term "0,0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "22") (term "0,0"))
                     (rule "concrete_not_2" (formula "22") (term "0"))
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "inEqSimp_contradEq7" (formula "21") (term "0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                     (rule "concrete_and_2" (formula "21") (term "0"))
                     (rule "concrete_or_2" (formula "21"))
                     (rule "notLeft" (formula "21"))
                     (rule "inEqSimp_contradEq7" (formula "21") (term "0,0") (ifseqformula "8"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "21") (term "0,0"))
                     (rule "concrete_not_2" (formula "21") (term "0"))
                     (rule "concrete_or_1" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "26"))
                     (rule "add_zero_right" (formula "9") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "9"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0"))
                     (rule "leq_literals" (formula "26") (term "0"))
                     (rule "concrete_and_2" (formula "26"))
                     (rule "false_right" (formula "26"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "13"))
                     (rule "andLeft" (formula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "1,1,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0"))
                     (rule "add_literals" (formula "18") (term "0"))
                     (rule "leq_literals" (formula "18"))
                     (rule "closeFalse" (formula "18"))
                  )
               )
            )
            (branch " Null Reference (highscores = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close" (formula "19") (ifseqformula "1"))
            )
            (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
               (builtin "Update Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "cut_direct" (formula "1") (term "0"))
               (branch " CUT: self.min >= self.capacity TRUE"
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "only_created_object_are_referenced_non_null" (formula "19") (term "0") (ifseqformula "17") (ifseqformula "2") (ifseqformula "19"))
                  (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "1") (ifseqformula "20"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (rule "concrete_or_1" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "throwUnfold" (formula "23") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "23") (term "5"))
                  (rule "variableDeclaration" (formula "23") (term "5") (newnames "v_ArrayIndexOutOfBoundsException"))
                  (rule "instanceCreationAssignment" (formula "23") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_1"))
                  (rule "variableDeclarationAssign" (formula "23") (term "5"))
                  (rule "variableDeclaration" (formula "23") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_2"))
                  (rule "variableDeclaration" (formula "23") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_2"))
                  (rule "methodBodyExpand" (formula "23") (term "5"))
                  (rule "variableDeclaration" (formula "23") (term "5") (newnames "__NEW__"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_3"))
                  (rule "variableDeclaration" (formula "23") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_3"))
                  (rule "allocateInstance" (formula "23") (term "5") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "blockEmpty" (formula "23") (term "9"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "9"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "polySimp_addComm0" (formula "23") (term "3"))
                  (rule "methodBodyExpand" (formula "23") (term "9"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "9"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "assignment_instance_field_of_this" (formula "23") (term "11"))
                  (builtin "Update Simplification" (formula "23"))
                  (rule "methodCallWithinClass" (formula "23") (term "13"))
                  (rule "methodBodyExpand" (formula "23") (term "13"))
                  (rule "methodCallSuper" (formula "23") (term "13"))
                  (rule "nextToCreate_non_negative" (formula "23") (term "0,6") (ifseqformula "3"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallSuper" (formula "24") (term "13"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallSuper" (formula "24") (term "13"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallSuper" (formula "24") (term "13"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallSuper" (formula "24") (term "13"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallEmpty" (formula "24") (term "13"))
                  (rule "blockEmpty" (formula "24") (term "13"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "13"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "blockEmpty" (formula "24") (term "17"))
                  (rule "methodCallReturnIgnoreResult" (formula "24") (term "17"))
                  (rule "methodCallReturn" (formula "24") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "blockEmpty" (formula "24") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallSuper" (formula "24") (term "17"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallSuper" (formula "24") (term "17"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallSuper" (formula "24") (term "17"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallSuper" (formula "24") (term "17"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallSuper" (formula "24") (term "17"))
                  (rule "methodBodyExpand" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "blockEmpty" (formula "24") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "methodCallEmpty" (formula "24") (term "17"))
                  (rule "blockEmpty" (formula "24") (term "17"))
                  (rule "assignment_write_attribute_primitive" (formula "24") (term "17"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_1 != null)"
                     (builtin "Update Simplification" (formula "25"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "methodCallParamThrow" (formula "24") (term "17"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "tryCatchThrow" (formula "24") (term "16"))
                     (rule "ifElseUnfold" (formula "24") (term "16") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "24") (term "16") (newnames "b_6"))
                     (rule "equality_comparison_new" (formula "24") (term "16"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "repository_object_non_null" (formula "24") (term "0,0"))
                     (rule "concrete_not_2" (formula "24") (term "0"))
                     (rule "ifthenelse_true_for" (formula "24"))
                     (rule "assignment_instance_field_of_this" (formula "24") (term "16"))
                     (builtin "Update Simplification" (formula "24"))
                     (rule "ifElseSplit" (formula "24"))
                     (branch " if b_6 true"
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_6 false"
                        (rule "false_to_not_true" (formula "1") (term "17"))
                        (builtin "Update Simplification" (formula "25"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "24") (term "16"))
                        (rule "ifElse" (formula "24") (term "16"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "repository_object_non_null" (formula "24") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "24") (term "0,0"))
                        (rule "elim_double_block" (formula "24") (term "16,1"))
                        (rule "variableDeclaration" (formula "24") (term "16,1") (newnames "e"))
                        (rule "assignment" (formula "24") (term "16,1"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "assignment_instance_field_of_this" (formula "24") (term "16,1"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "blockThrow" (formula "24") (term "15,2"))
                        (rule "throwBox" (formula "24") (term "15,2"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "instanceof_static_type" (formula "24") (term "0,0"))
                        (rule "boolean_equal" (formula "24") (term "0"))
                        (rule "ifthenelse_true_for" (formula "24"))
                        (rule "emptyModality" (formula "24") (term "14"))
                        (builtin "Update Simplification" (formula "24"))
                        (rule "andRight" (formula "24"))
                        (branch " Case 1"
                           (rule "andRight" (formula "24"))
                           (branch " Case 1"
                              (rule "andRight" (formula "24"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "24"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "24"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "24"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "24") (inst "sk=m_0_18"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch " CUT: m_0_18.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "27"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_18"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_strengthen0" (formula "14") (ifseqformula "28"))
                                             (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "14"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_18"))
                                             (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "1,0"))
                                             (rule "concrete_or_4" (formula "13") (term "0"))
                                             (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "allLeft" (formula "10") (inst "t=m_0_18"))
                                             (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "16"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0"))
                                             (rule "add_literals" (formula "16") (term "0"))
                                             (rule "qeq_literals" (formula "16"))
                                             (rule "closeFalse" (formula "16"))
                                          )
                                          (branch " CUT: m_0_18.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "26"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_18"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (rule "concrete_and_2" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "24") (inst "sk=m_0_19"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "cut_direct" (formula "26") (term "0"))
                                          (branch " CUT: m_0_19.size <= m_0_19.capacity TRUE"
                                             (rule "concrete_and_1" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_19"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch " CUT: m_0_19.size <= m_0_19.capacity FALSE"
                                             (rule "concrete_and_2" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "inEqSimp_leqRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_19"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_or_2" (formula "12") (term "0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_19"))
                                             (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "8") (term "0"))
                                             (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "allLeft" (formula "15") (inst "t=m_0_19"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "15") (term "0"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "15") (term "0"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "24") (inst "sk=m_0_20"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "notRight" (formula "24"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "8") (inst "t=m_0_20"))
                                       (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "8") (term "1,0"))
                                       (rule "concrete_or_4" (formula "8") (term "0"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "27"))
                                       (rule "concrete_or_2" (formula "8"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_20"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "24") (inst "sk=m_0_21"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "notRight" (formula "24"))
                                    (rule "allRight" (formula "26") (inst "sk=i_23"))
                                    (rule "orRight" (formula "26"))
                                    (rule "notRight" (formula "27"))
                                    (rule "orRight" (formula "27"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " self.size = i_23 & self.highscores = m_0_21.highscores TRUE"
                                       (rule "close" (formula "27") (ifseqformula "4"))
                                    )
                                    (branch " self.size = i_23 & self.highscores = m_0_21.highscores FALSE"
                                       (rule "allLeft" (formula "14") (inst "t=m_0_21"))
                                       (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "14") (term "1,0"))
                                       (rule "concrete_or_4" (formula "14") (term "0"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0_21"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "18") (term "1,0,0,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0_21"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "12") (term "0"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "12") (term "0"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "allLeft" (formula "22") (inst "t=m_0_21"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "0"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_21"))
                                       (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "34"))
                                       (rule "concrete_or_2" (formula "17") (term "0"))
                                       (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "17") (term "0"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_21"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "21"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "times_zero_1" (formula "21") (term "0"))
                                       (rule "qeq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "cut_direct" (formula "32") (term "0"))
                                       (branch " CUT: self.size = i_23 TRUE"
                                          (rule "concrete_and_1" (formula "33"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "29"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1"))
                                          (rule "mul_literals" (formula "28") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                          (rule "allLeft" (formula "22") (inst "t=i_23"))
                                          (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "5"))
                                          (rule "concrete_not_1" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (rule "concrete_and_2" (formula "22") (term "0"))
                                          (rule "concrete_or_2" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "22"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch " CUT: self.size = i_23 FALSE"
                                          (rule "concrete_and_2" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "allLeft" (formula "22") (inst "t=i_23"))
                                          (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (rule "concrete_and_2" (formula "22") (term "1"))
                                          (rule "concrete_or_4" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                          (rule "concrete_and_2" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "24") (inst "sk=h_3"))
                                 (rule "orRight" (formula "24"))
                                 (rule "orRight" (formula "25"))
                                 (rule "allRight" (formula "25") (inst "sk=other_3"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "allLeft" (formula "15") (inst "t=h_3"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "26"))
                                 (rule "concrete_or_2" (formula "15") (term "0,0,0"))
                                 (rule "allLeft" (formula "15") (inst "t=other_3"))
                                 (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "28"))
                                 (rule "concrete_or_2" (formula "15") (term "0"))
                                 (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "close" (formula "23") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "24") (inst "sk=m_0_22"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "25"))
                              (rule "allLeft" (formula "14") (inst "t=m_0_22"))
                              (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "27"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "2"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "allLeft" (formula "8") (inst "t=m_0_22"))
                              (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "8") (term "1,0"))
                              (rule "concrete_or_4" (formula "8") (term "0"))
                              (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "8"))
                              (rule "allLeft" (formula "14") (inst "t=m_0_22"))
                              (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "14") (term "1,0"))
                              (rule "concrete_or_4" (formula "14") (term "0"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "allLeft" (formula "13") (inst "t=m_0_22"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "13") (term "1,0"))
                              (rule "concrete_or_4" (formula "13") (term "0"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (rule "concrete_or_1" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "21") (inst "t=m_0_22"))
                              (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "21") (term "1,0"))
                              (rule "concrete_or_4" (formula "21") (term "0"))
                              (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "close" (formula "27") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "24") (inst "sk=m_0_23"))
                           (rule "orRight" (formula "24"))
                           (rule "orRight" (formula "24"))
                           (rule "notRight" (formula "24"))
                           (rule "eqSymm" (formula "26") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "eqSymm" (formula "26") (term "0,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "26") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "26") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,1,1"))
                           (rule "ifthenelse_split" (formula "26") (term "0,1,1,0,1,1,1"))
                           (branch "   self.highscores = m_0_23.highscores
& self.size = m_0_23.min TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "concrete_and_1" (formula "28") (term "0,0,0,1,0,1,1,1"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "10"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
                              (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "10"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,1,1") (ifseqformula "12"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,0,1,1"))
                              (rule "add_literals" (formula "28") (term "0,0,0,0,1,1"))
                              (rule "leq_literals" (formula "28") (term "0,0,0,1,1"))
                              (rule "concrete_and_2" (formula "28") (term "0,0,1,1"))
                              (rule "concrete_not_2" (formula "28") (term "0,1,1"))
                              (rule "concrete_eq_1" (formula "28") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "28") (term "0,0,1") (ifseqformula "12"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "28") (term "0,0,0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "28") (term "0,0,1"))
                              (rule "concrete_eq_2" (formula "28") (term "0,1"))
                              (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "12"))
                              (rule "leq_literals" (formula "28") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "28") (term "0,0"))
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "allLeft" (formula "17") (inst "t=m_0_23"))
                              (rule "replace_known_right" (formula "17") (term "0,0,0,0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "17") (term "0,0,0"))
                              (rule "allLeft" (formula "13") (inst "t=m_0_23"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "13") (term "1,0"))
                              (rule "concrete_or_4" (formula "13") (term "0"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "allLeft" (formula "11") (inst "t=m_0_23"))
                              (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "11") (term "1,0"))
                              (rule "concrete_or_4" (formula "11") (term "0"))
                              (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "11"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "11"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_23"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "16") (term "1,0"))
                              (rule "concrete_or_4" (formula "16") (term "0"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                              (rule "leq_literals" (formula "14") (term "0"))
                              (rule "concrete_or_1" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "allLeft" (formula "17") (inst "t=self"))
                              (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "27"))
                              (rule "concrete_not_1" (formula "17") (term "1,0"))
                              (rule "concrete_or_4" (formula "17") (term "0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "17"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "10"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                              (rule "concrete_or_1" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "allLeft" (formula "18") (inst "t=m_0_23"))
                              (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "32"))
                              (rule "concrete_or_2" (formula "18") (term "0"))
                              (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,0"))
                              (rule "times_zero_1" (formula "18") (term "0"))
                              (rule "qeq_literals" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "cut_direct" (formula "32") (term "0"))
                              (branch " CUT: m_0_23.size >= 1 + m_0_23.min TRUE"
                                 (rule "concrete_and_1" (formula "33"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "21") (inst "t=self"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "32"))
                                 (rule "concrete_or_2" (formula "21") (term "0"))
                                 (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "21") (term "1"))
                                 (rule "concrete_or_4" (formula "21"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "21"))
                                 (rule "eqClose" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "20"))
                                 (rule "eqClose" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "29") (term "1,1,1,0,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " CUT: m_0_23.size >= 1 + m_0_23.min FALSE"
                                 (rule "concrete_and_2" (formula "33"))
                                 (rule "false_right" (formula "33"))
                                 (rule "inEqSimp_geqRight" (formula "32"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "15") (term "0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0"))
                                 (rule "allLeft" (formula "24") (inst "t=m_0_23"))
                                 (rule "exLeft" (formula "24") (inst "sk=i_64"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "25") (term "0"))
                                 (rule "concrete_or_2" (formula "25"))
                                 (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "24") (term "0"))
                                 (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "24") (term "0"))
                                 (rule "concrete_or_2" (formula "24"))
                                 (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "31") (term "0,0"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "31") (term "0,0"))
                                 (rule "concrete_or_2" (formula "31") (term "0"))
                                 (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "30") (term "0,0"))
                                 (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "29") (term "0,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "40"))
                                 (rule "concrete_or_2" (formula "28") (term "0,0"))
                                 (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "40"))
                                 (rule "concrete_or_4" (formula "27") (term "0,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "26") (term "1,0"))
                                 (rule "concrete_or_4" (formula "26") (term "0"))
                                 (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "27") (term "1,0"))
                                 (rule "concrete_or_4" (formula "27") (term "0"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "29") (term "0,0"))
                                 (rule "concrete_or_2" (formula "29") (term "0"))
                                 (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "28") (term "0,0"))
                                 (rule "concrete_or_2" (formula "28") (term "0"))
                                 (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "40"))
                                 (rule "concrete_or_4" (formula "26") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "31") (term "0,0"))
                                 (rule "concrete_not_2" (formula "31") (term "0"))
                                 (rule "concrete_or_1" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (term "0,0") (ifseqformula "14"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0,0"))
                                 (rule "concrete_not_2" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "14"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (rule "concrete_and_2" (formula "28") (term "0"))
                                 (rule "concrete_or_2" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "28") (term "0,0"))
                                 (rule "concrete_not_2" (formula "28") (term "0"))
                                 (rule "concrete_or_1" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "inEqSimp_contradEq7" (formula "27") (term "0,1") (ifseqformula "14"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "27") (term "0,1"))
                                 (rule "concrete_not_2" (formula "27") (term "1"))
                                 (rule "concrete_or_3" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "32"))
                                 (rule "add_zero_right" (formula "15") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0"))
                                 (rule "leq_literals" (formula "32") (term "0"))
                                 (rule "concrete_and_2" (formula "32"))
                                 (rule "false_right" (formula "32"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                           )
                           (branch "   self.highscores = m_0_23.highscores
& self.size = m_0_23.min FALSE"
                              (rule "cut_direct" (formula "27") (term "0,0"))
                              (branch " CUT: m_0_23.min >= -1 TRUE"
                                 (rule "concrete_and_1" (formula "28") (term "0"))
                                 (rule "cut_direct" (formula "27") (term "1"))
                                 (branch " CUT: self.size = m_0_23.min TRUE"
                                    (rule "concrete_and_3" (formula "28"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "28"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,0,1,0,1,1,1"))
                                    (rule "ifthenelse_false" (formula "29") (term "0,0,1,0,1,1,1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0,1"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,1"))
                                    (rule "concrete_eq_2" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1,1") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "29") (term "0,0,0,1,1"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,1,1"))
                                    (rule "concrete_not_2" (formula "29") (term "0,1,1"))
                                    (rule "concrete_eq_1" (formula "29") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "cut_direct" (formula "28") (term "0"))
                                    (branch " CUT: m_0_23.size >= 1 + m_0_23.min TRUE"
                                       (rule "concrete_and_1" (formula "29"))
                                       (rule "allLeft" (formula "11") (inst "t=m_0_23"))
                                       (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "11") (term "0"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "11") (term "0"))
                                       (rule "concrete_or_2" (formula "11"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                       (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_23"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "14") (term "0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "allLeft" (formula "18") (inst "t=self"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "27"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0"))
                                       (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "18"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "26"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                       (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "19"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,0"))
                                       (rule "times_zero_1" (formula "19") (term "0"))
                                       (rule "qeq_literals" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "allLeft" (formula "16") (inst "t=m_0_23"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "16") (term "1,0"))
                                       (rule "concrete_or_4" (formula "16") (term "0"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "33"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "16") (term "0"))
                                       (rule "concrete_or_1" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "cut_direct" (formula "35") (term "0,0"))
                                       (branch " CUT: m_0_23.size = 0 TRUE"
                                          (rule "concrete_not_1" (formula "36") (term "0"))
                                          (rule "concrete_and_2" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "times_zero_2" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (rule "concrete_and_2" (formula "16"))
                                          (rule "closeFalse" (formula "16"))
                                       )
                                       (branch " CUT: m_0_23.size = 0 FALSE"
                                          (rule "concrete_not_2" (formula "36") (term "0"))
                                          (rule "concrete_and_1" (formula "36"))
                                          (rule "allRight" (formula "36") (inst "sk=i_94"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "36"))
                                          (rule "orRight" (formula "37"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "38"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "38"))
                                          (rule "add_zero_right" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (rule "concrete_and_2" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                          (rule "mul_literals" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "allLeft" (formula "29") (inst "t=m_0_23"))
                                          (rule "eqSymm" (formula "29") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                                          (rule "concrete_not_1" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "38"))
                                          (rule "concrete_or_4" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0,0,0") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                          (rule "concrete_and_2" (formula "29") (term "1,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "29") (term "0,0,0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=m_0_23"))
                                          (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "8"))
                                          (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "39"))
                                          (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=i_94"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                          (rule "concrete_and_2" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (rule "concrete_and_2" (formula "25") (term "0"))
                                          (rule "concrete_or_2" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "allLeft" (formula "25") (inst "t=m_0_23.min@(maze.Highscore)"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                          (rule "concrete_and_2" (formula "25") (term "1,0"))
                                          (rule "concrete_or_4" (formula "25") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                          (rule "concrete_and_2" (formula "25") (term "0"))
                                          (rule "concrete_or_2" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "allLeft" (formula "30") (inst "t=i_94"))
                                          (rule "eqSymm" (formula "30") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "44"))
                                          (rule "concrete_or_4" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "30") (term "0,0"))
                                          (rule "concrete_or_2" (formula "30") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "30") (term "0,0,1"))
                                          (rule "leq_literals" (formula "30") (term "0,1"))
                                          (rule "concrete_and_2" (formula "30") (term "1"))
                                          (rule "concrete_or_4" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch " CUT: m_0_23.size >= 1 + m_0_23.min FALSE"
                                       (rule "concrete_and_2" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "inEqSimp_geqRight" (formula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                       (rule "exLeft" (formula "19") (inst "sk=i_24"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "20") (term "0"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "replace_known_left" (formula "25") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "25") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "25") (term "0,0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "24") (term "0,0"))
                                       (rule "concrete_or_2" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0"))
                                       (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_4" (formula "22") (term "0,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "35"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (term "0,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,0,1"))
                                       (rule "concrete_and_2" (formula "22") (term "0,1"))
                                       (rule "concrete_not_2" (formula "22") (term "1"))
                                       (rule "concrete_or_3" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_contradEq7" (formula "24") (term "0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "24") (term "0,0"))
                                       (rule "concrete_not_2" (formula "24") (term "0"))
                                       (rule "concrete_or_1" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (rule "concrete_and_2" (formula "22") (term "0"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "29"))
                                       (rule "concrete_or_4" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_not_2" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                       (rule "concrete_and_2" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (rule "concrete_or_1" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " CUT: self.size = m_0_23.min FALSE"
                                    (rule "concrete_and_4" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "cut_direct" (formula "28") (term "0"))
                                    (branch " CUT: m_0_23.size >= 1 + m_0_23.min TRUE"
                                       (rule "concrete_and_1" (formula "29"))
                                       (rule "andRight" (formula "29"))
                                       (branch " Case 1"
                                          (rule "equiv_right" (formula "29"))
                                          (branch " Case 1"
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "12"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,0"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "28"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_23"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "14") (term "1,0"))
                                             (rule "concrete_or_4" (formula "14") (term "0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "12") (term "0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "18"))
                                             (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,0"))
                                             (rule "times_zero_1" (formula "18") (term "0"))
                                             (rule "qeq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "21") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "21") (term "0"))
                                             (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "21") (term "0"))
                                             (rule "concrete_or_2" (formula "21"))
                                             (rule "notLeft" (formula "21"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "12") (term "0,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "27"))
                                             (rule "array_length_non_negative_3" (formula "13") (term "0") (ifseqformula "8") (ifseqformula "12") (ifseqformula "28"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "allLeft" (formula "23") (inst "t=m_0_23"))
                                             (rule "exLeft" (formula "23") (inst "sk=i_25"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "23") (term "1,0"))
                                             (rule "concrete_or_4" (formula "23") (term "0"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "40"))
                                             (rule "concrete_or_2" (formula "23"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "24") (term "1,0"))
                                             (rule "concrete_or_4" (formula "24") (term "0"))
                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "40"))
                                             (rule "concrete_or_2" (formula "24"))
                                             (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "40"))
                                             (rule "concrete_or_2" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "30") (term "0,0"))
                                             (rule "concrete_or_2" (formula "30") (term "0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "30") (term "0"))
                                             (rule "concrete_or_2" (formula "30"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0"))
                                             (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "40"))
                                             (rule "concrete_or_2" (formula "29"))
                                             (rule "replace_known_left" (formula "28") (term "0,1,0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "28") (term "1,0,0"))
                                             (rule "concrete_or_4" (formula "28") (term "0,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "28") (term "1,0"))
                                             (rule "concrete_or_4" (formula "28") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "27") (term "0"))
                                             (rule "concrete_or_1" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "26") (term "1"))
                                             (rule "concrete_or_4" (formula "26"))
                                             (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "25") (term "1,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "39"))
                                             (rule "concrete_or_2" (formula "27"))
                                             (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "39"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "26") (term "1"))
                                             (rule "concrete_or_4" (formula "26"))
                                             (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "39"))
                                             (rule "concrete_or_4" (formula "26"))
                                             (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "25") (term "0,1"))
                                             (rule "eq_or" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "times_zero_2" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "times_zero_2" (formula "24") (term "1,0"))
                                             (rule "add_zero_right" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_commuteLeq" (formula "17"))
                                             (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch " Case 2"
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "times_zero_2" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "30"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "3"))
                                             (rule "mul_literals" (formula "30") (term "1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "equiv_right" (formula "29"))
                                          (branch " Case 1"
                                             (rule "notLeft" (formula "1"))
                                             (rule "allRight" (formula "30") (inst "sk=i_26"))
                                             (rule "orRight" (formula "30"))
                                             (rule "orRight" (formula "30"))
                                             (rule "orRight" (formula "31"))
                                             (rule "eqSymm" (formula "33") (term "1,0,0,0"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "32"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "27"))
                                             (rule "add_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                             (rule "concrete_and_2" (formula "27"))
                                             (rule "false_right" (formula "27"))
                                             (rule "commute_and" (formula "1") (term "0,0,0"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "18"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "allLeft" (formula "22") (inst "t=m_0_23"))
                                             (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "22") (term "1,0"))
                                             (rule "concrete_or_4" (formula "22") (term "0"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "22"))
                                             (rule "allLeft" (formula "24") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "24") (term "1,0,0,0,0") (ifseqformula "36"))
                                             (rule "concrete_or_4" (formula "24") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,0,0,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "24") (term "1,0,0,0"))
                                             (rule "concrete_or_4" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "37"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq0" (formula "23"))
                                             (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,0"))
                                             (rule "times_zero_1" (formula "23") (term "0"))
                                             (rule "qeq_literals" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "allLeft" (formula "27") (inst "t=m_0_23"))
                                             (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "37"))
                                             (rule "concrete_or_2" (formula "27") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "27") (term "0"))
                                             (rule "concrete_or_2" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "allLeft" (formula "20") (inst "t=m_0_23"))
                                             (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "20") (term "1,0"))
                                             (rule "concrete_or_4" (formula "20") (term "0"))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "38"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                             (rule "mul_literals" (formula "20") (term "0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                             (rule "concrete_or_1" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                             (branch " self.size = i_26 & self.highscores = m_0_23.highscores TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "33"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "18"))
                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "19"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                                (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                (rule "mul_literals" (formula "31") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                (rule "allLeft" (formula "27") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "37"))
                                                (rule "concrete_or_2" (formula "27") (term "0,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_23.min@(maze.Highscore)"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                (rule "concrete_or_2" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allLeft" (formula "23") (inst "t=self"))
                                                (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "23") (term "0"))
                                                (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_not_1" (formula "23") (term "0"))
                                                (rule "concrete_or_2" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                (rule "concrete_or_1" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "allLeft" (formula "27") (inst "t=self"))
                                                (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "27") (term "1"))
                                                (rule "concrete_or_4" (formula "27"))
                                                (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "27"))
                                                (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "27"))
                                                (rule "eqClose" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "26"))
                                                (rule "eqClose" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch " self.size = i_26 & self.highscores = m_0_23.highscores FALSE"
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "30") (inst "t=m_0_23"))
                                                (rule "eqSymm" (formula "30") (term "1,0,0,0"))
                                                (rule "replace_known_right" (formula "30") (term "1,0,0,0,0,0,0") (ifseqformula "40"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "30") (term "1,0,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                                (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,0,0,0") (ifseqformula "8"))
                                                (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=i_26"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "25") (term "1,0"))
                                                (rule "concrete_or_4" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_23.min@(maze.Highscore)"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0,0"))
                                                (rule "concrete_or_2" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "cut_direct" (formula "37") (term "0"))
                                                (branch " CUT: self.size = i_26 TRUE"
                                                   (rule "concrete_and_1" (formula "38"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "32"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                   (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                   (rule "mul_literals" (formula "32") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                   (rule "allLeft" (formula "23") (inst "t=self"))
                                                   (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "42"))
                                                   (rule "concrete_or_2" (formula "23") (term "0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "34"))
                                                   (rule "concrete_not_1" (formula "23") (term "0"))
                                                   (rule "concrete_or_2" (formula "23"))
                                                   (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "33"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "0"))
                                                   (rule "concrete_or_1" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_26"))
                                                   (rule "eqSymm" (formula "30") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "44"))
                                                   (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "30") (term "1"))
                                                   (rule "concrete_or_4" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "30") (term "0"))
                                                   (rule "concrete_or_2" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                                (branch " CUT: self.size = i_26 FALSE"
                                                   (rule "concrete_and_2" (formula "38"))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_26"))
                                                   (rule "eqSymm" (formula "30") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "30") (term "1,0,0") (ifseqformula "45"))
                                                   (rule "concrete_or_4" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "30") (term "1"))
                                                   (rule "concrete_or_4" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "30") (term "1"))
                                                   (rule "concrete_or_4" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (rule "concrete_and_2" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "notRight" (formula "30"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (rule "concrete_and_2" (formula "29"))
                                             (rule "false_right" (formula "29"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0,0,1,0"))
                                             (rule "cut_direct" (formula "2") (term "1,0,0,0,1,0"))
                                             (branch " CUT: self.highscores = m_0_23.highscores TRUE"
                                                (rule "concrete_and_3" (formula "3") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "12"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "14") (term "0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "allLeft" (formula "13") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "8") (term "1") (ifseqformula "13"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "13"))
                                                (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "15") (term "0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                (rule "mul_literals" (formula "15") (term "1"))
                                                (rule "allLeft" (formula "17") (inst "t=m_0_23"))
                                                (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "17") (term "1,0"))
                                                (rule "concrete_or_4" (formula "17") (term "0"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (rule "concrete_or_1" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "19") (term "0"))
                                                (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "19") (term "0"))
                                                (rule "concrete_or_2" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "21") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                                (rule "allLeft" (formula "18") (inst "t=self"))
                                                (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "28"))
                                                (rule "concrete_not_1" (formula "18") (term "1,0"))
                                                (rule "concrete_or_4" (formula "18") (term "0"))
                                                (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "18"))
                                                (rule "applyEq" (formula "18") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "27"))
                                                (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                (rule "concrete_or_1" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "allLeft" (formula "21") (inst "t=self"))
                                                (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "21") (term "0"))
                                                (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "2"))
                                                (rule "concrete_not_1" (formula "21") (term "1"))
                                                (rule "concrete_or_4" (formula "21"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "21"))
                                                (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "21"))
                                                (rule "eqClose" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "19"))
                                                (rule "eqClose" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "7"))
                                                (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "24"))
                                                (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                (rule "concrete_and_2" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                             (branch " CUT: self.highscores = m_0_23.highscores FALSE"
                                                (rule "concrete_and_4" (formula "2") (term "0,0,0,1,0"))
                                                (rule "ifthenelse_false" (formula "2") (term "0,0,1,0"))
                                                (rule "allLeft" (formula "12") (inst "t=m_0_23"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "12") (term "1,0"))
                                                (rule "concrete_or_4" (formula "12") (term "0"))
                                                (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "30"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "31"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "notLeft" (formula "20"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "32"))
                                                (rule "concrete_or_2" (formula "16") (term "0"))
                                                (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "4"))
                                                (rule "concrete_not_1" (formula "16") (term "0"))
                                                (rule "concrete_or_2" (formula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0"))
                                                (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                                (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "19") (term "0"))
                                                (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "19") (term "0"))
                                                (rule "concrete_or_2" (formula "19"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "11") (inst "t=m_0_23"))
                                                (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "11") (term "1,0"))
                                                (rule "concrete_or_4" (formula "11") (term "0"))
                                                (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "only_created_object_are_referenced_non_null" (formula "2") (term "0,0,1,1,0") (ifseqformula "4") (ifseqformula "8") (ifseqformula "28"))
                                                (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "9") (ifseqformula "2") (ifseqformula "29"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "22") (inst "t=self"))
                                                (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_23"))
                                                (rule "exLeft" (formula "25") (inst "sk=i_27"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "25") (term "1,0"))
                                                (rule "concrete_or_4" (formula "25") (term "0"))
                                                (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "26") (term "0"))
                                                (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "26") (term "0"))
                                                (rule "concrete_or_2" (formula "26"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0"))
                                                (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "32") (term "0"))
                                                (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "32") (term "0"))
                                                (rule "concrete_or_2" (formula "32"))
                                                (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "31") (term "0,0"))
                                                (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "31") (term "1,0"))
                                                (rule "concrete_or_4" (formula "31") (term "0"))
                                                (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "31") (term "0"))
                                                (rule "concrete_or_2" (formula "31"))
                                                (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "43"))
                                                (rule "concrete_or_2" (formula "30") (term "0,0"))
                                                (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "1"))
                                                (rule "concrete_or_3" (formula "29") (term "0"))
                                                (rule "concrete_or_1" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "42"))
                                                (rule "concrete_or_4" (formula "28") (term "0,0"))
                                                (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "28") (term "1,0"))
                                                (rule "concrete_or_4" (formula "28") (term "0"))
                                                (rule "replace_known_right" (formula "27") (term "1,0,0") (ifseqformula "42"))
                                                (rule "concrete_or_4" (formula "27") (term "0,0"))
                                                (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "27") (term "1,0"))
                                                (rule "concrete_or_4" (formula "27") (term "0"))
                                                (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "29") (term "1,0"))
                                                (rule "concrete_or_4" (formula "29") (term "0"))
                                                (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "28") (term "1"))
                                                (rule "concrete_or_4" (formula "28"))
                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
                                                (rule "concrete_not_1" (formula "29") (term "0"))
                                                (rule "concrete_or_2" (formula "29"))
                                                (rule "applyEq" (formula "27") (term "0,0,1") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "27") (term "0,1"))
                                                (rule "eq_or" (formula "27"))
                                                (rule "notLeft" (formula "27"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "mul_literals" (formula "29") (term "1,0"))
                                                (rule "add_zero_right" (formula "29") (term "0"))
                                                (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                                (rule "add_literals" (formula "26") (term "1"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "27"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                (rule "mul_literals" (formula "26") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "24"))
                                                (rule "add_zero_left" (formula "33") (term "0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,0"))
                                                (rule "leq_literals" (formula "33") (term "0"))
                                                (rule "concrete_and_2" (formula "33"))
                                                (rule "false_right" (formula "33"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "26"))
                                                (rule "qeq_literals" (formula "24") (term "0"))
                                                (rule "concrete_and_2" (formula "24"))
                                                (rule "closeFalse" (formula "24"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " CUT: m_0_23.size >= 1 + m_0_23.min FALSE"
                                       (rule "concrete_and_2" (formula "29"))
                                       (rule "false_right" (formula "29"))
                                       (rule "inEqSimp_geqRight" (formula "28"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "13") (inst "t=m_0_23"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "13") (term "0"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "13") (term "0"))
                                       (rule "concrete_or_2" (formula "13"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "allLeft" (formula "20") (inst "t=m_0_23"))
                                       (rule "exLeft" (formula "20") (inst "sk=i_28"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "20") (term "1,0"))
                                       (rule "concrete_or_4" (formula "20") (term "0"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "27") (term "0,0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "27") (term "0,0"))
                                       (rule "concrete_or_2" (formula "27") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "25") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0,0"))
                                       (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0"))
                                       (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_4" (formula "22") (term "0,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "25") (term "0,0"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "27") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "27") (term "0,0"))
                                       (rule "concrete_not_2" (formula "27") (term "0"))
                                       (rule "concrete_or_1" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "inEqSimp_contradEq7" (formula "23") (term "0,1") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                       (rule "leq_literals" (formula "23") (term "0,0,1"))
                                       (rule "concrete_and_2" (formula "23") (term "0,1"))
                                       (rule "concrete_not_2" (formula "23") (term "1"))
                                       (rule "concrete_or_3" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_contradEq7" (formula "25") (term "0,0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "25") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "25") (term "0,0"))
                                       (rule "concrete_not_2" (formula "25") (term "0"))
                                       (rule "concrete_or_1" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "inEqSimp_contradEq7" (formula "23") (term "0") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (rule "concrete_and_2" (formula "23") (term "0"))
                                       (rule "concrete_or_2" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "29"))
                                       (rule "concrete_or_4" (formula "23"))
                                       (rule "notLeft" (formula "23"))
                                       (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_and_2" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "28"))
                                       (rule "add_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                       (rule "concrete_and_2" (formula "28"))
                                       (rule "false_right" (formula "28"))
                                       (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                       (rule "concrete_or_1" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_23.min >= -1 FALSE"
                                 (rule "concrete_and_2" (formula "28") (term "0"))
                                 (rule "concrete_and_2" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "cut_direct" (formula "27") (term "0"))
                                 (branch " CUT: self.highscores = m_0_23.highscores TRUE"
                                    (rule "concrete_and_1" (formula "28"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "10"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "21"))
                                    (rule "times_zero_1" (formula "12") (term "0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "allLeft" (formula "19") (inst "t=m_0_23"))
                                    (rule "exLeft" (formula "19") (inst "sk=i_29"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "19") (term "1,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "20") (term "1,0"))
                                    (rule "concrete_or_4" (formula "20") (term "0"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "20"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "26") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "26") (term "0,0"))
                                    (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "26") (term "0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "25") (term "0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "25") (term "0,0"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "24") (term "0,0"))
                                    (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                    (rule "concrete_not_1" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "35"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "26") (term "0,0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "26") (term "0,0"))
                                    (rule "concrete_not_2" (formula "26") (term "0"))
                                    (rule "concrete_or_1" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0,1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "22") (term "0,1"))
                                    (rule "concrete_not_2" (formula "22") (term "1"))
                                    (rule "concrete_or_3" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "29"))
                                    (rule "concrete_or_4" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "28"))
                                    (rule "concrete_not_2" (formula "22") (term "0"))
                                    (rule "concrete_or_1" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0"))
                                    (rule "qeq_literals" (formula "27") (term "0"))
                                    (rule "concrete_and_2" (formula "27"))
                                    (rule "false_right" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (rule "concrete_and_2" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch " CUT: self.highscores = m_0_23.highscores FALSE"
                                    (rule "concrete_and_2" (formula "28"))
                                    (rule "false_right" (formula "28"))
                                    (rule "allLeft" (formula "18") (inst "t=m_0_23"))
                                    (rule "exLeft" (formula "18") (inst "sk=i_30"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "18") (term "1,0"))
                                    (rule "concrete_or_4" (formula "18") (term "0"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "19") (term "1,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "25") (term "0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "25") (term "0,0"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "24") (term "0,0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0,0"))
                                    (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "34"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "20") (term "1,0"))
                                    (rule "concrete_or_4" (formula "20") (term "0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "22") (term "0"))
                                    (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "34"))
                                    (rule "concrete_or_4" (formula "20") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "21") (term "0,1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "21") (term "0,1"))
                                    (rule "concrete_not_2" (formula "21") (term "1"))
                                    (rule "concrete_or_3" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "24") (term "0,0"))
                                    (rule "concrete_not_2" (formula "24") (term "0"))
                                    (rule "concrete_or_1" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0,0"))
                                    (rule "concrete_not_2" (formula "22") (term "0"))
                                    (rule "concrete_or_1" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0,0"))
                                    (rule "concrete_not_2" (formula "22") (term "0"))
                                    (rule "concrete_or_1" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "21") (term "0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,0"))
                                    (rule "concrete_and_2" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_1 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " CUT: self.min >= self.capacity FALSE"
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "only_created_object_are_referenced_non_null" (formula "6") (term "0,0") (ifseqformula "18") (ifseqformula "3") (ifseqformula "20"))
                  (rule "array_length_non_negative_3" (formula "7") (term "0") (ifseqformula "3") (ifseqformula "6") (ifseqformula "21"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                  (rule "leq_literals" (formula "7") (term "0"))
                  (rule "concrete_or_1" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "throwUnfold" (formula "24") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
                  (rule "variableDeclarationAssign" (formula "24") (term "5"))
                  (rule "variableDeclaration" (formula "24") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_4"))
                  (rule "instanceCreationAssignment" (formula "24") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_5"))
                  (rule "variableDeclarationAssign" (formula "24") (term "5"))
                  (rule "variableDeclaration" (formula "24") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_5"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_6"))
                  (rule "variableDeclaration" (formula "24") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_6"))
                  (rule "methodBodyExpand" (formula "24") (term "5"))
                  (rule "variableDeclaration" (formula "24") (term "5") (newnames "__NEW___1"))
                  (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "5") (inst "#v0=v_ArrayIndexOutOfBoundsException_7"))
                  (rule "variableDeclaration" (formula "24") (term "5") (newnames "v_ArrayIndexOutOfBoundsException_7"))
                  (rule "allocateInstance" (formula "24") (term "5") (inst "#v0=var"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "blockEmpty" (formula "24") (term "9"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "9"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "polySimp_addComm0" (formula "24") (term "3"))
                  (rule "methodBodyExpand" (formula "24") (term "9"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "9"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "11"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "methodCallWithinClass" (formula "24") (term "13"))
                  (rule "methodBodyExpand" (formula "24") (term "13"))
                  (rule "methodCallSuper" (formula "24") (term "13"))
                  (rule "nextToCreate_non_negative" (formula "24") (term "0,4") (ifseqformula "3"))
                  (rule "methodBodyExpand" (formula "25") (term "13"))
                  (rule "methodCallSuper" (formula "25") (term "13"))
                  (rule "methodBodyExpand" (formula "25") (term "13"))
                  (rule "methodCallSuper" (formula "25") (term "13"))
                  (rule "methodBodyExpand" (formula "25") (term "13"))
                  (rule "methodCallSuper" (formula "25") (term "13"))
                  (rule "methodBodyExpand" (formula "25") (term "13"))
                  (rule "methodCallSuper" (formula "25") (term "13"))
                  (rule "methodBodyExpand" (formula "25") (term "13"))
                  (rule "methodCallEmpty" (formula "25") (term "13"))
                  (rule "blockEmpty" (formula "25") (term "13"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "13"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "15"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "blockEmpty" (formula "25") (term "17"))
                  (rule "methodCallReturnIgnoreResult" (formula "25") (term "17"))
                  (rule "methodCallReturn" (formula "25") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "17"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "blockEmpty" (formula "25") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "17"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallSuper" (formula "25") (term "17"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallSuper" (formula "25") (term "17"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallSuper" (formula "25") (term "17"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallSuper" (formula "25") (term "17"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallSuper" (formula "25") (term "17"))
                  (rule "methodBodyExpand" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "blockEmpty" (formula "25") (term "17"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "17"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "assignment_instance_field_of_this" (formula "25") (term "17"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "methodCallEmpty" (formula "25") (term "17"))
                  (rule "blockEmpty" (formula "25") (term "17"))
                  (rule "assignment_write_attribute_primitive" (formula "25") (term "17"))
                  (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_5 != null)"
                     (builtin "Update Simplification" (formula "26"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25"))
                     (rule "false_right" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "17"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "methodCallParamThrow" (formula "25") (term "17"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "tryCatchThrow" (formula "25") (term "16"))
                     (rule "ifElseUnfold" (formula "25") (term "16") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "25") (term "16") (newnames "b_12"))
                     (rule "equality_comparison_new" (formula "25") (term "16"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "repository_object_non_null" (formula "25") (term "0,0"))
                     (rule "concrete_not_2" (formula "25") (term "0"))
                     (rule "ifthenelse_true_for" (formula "25"))
                     (rule "assignment_instance_field_of_this" (formula "25") (term "16"))
                     (builtin "Update Simplification" (formula "25"))
                     (rule "ifElseSplit" (formula "25"))
                     (branch " if b_12 true"
                        (builtin "Update Simplification" (formula "26"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch " if b_12 false"
                        (rule "false_to_not_true" (formula "1") (term "17"))
                        (builtin "Update Simplification" (formula "26"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "elim_double_block" (formula "25") (term "16"))
                        (rule "ifElse" (formula "25") (term "16"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "repository_object_non_null" (formula "25") (term "0,0,0"))
                        (rule "ifthenelse_false" (formula "25") (term "0,0"))
                        (rule "elim_double_block" (formula "25") (term "16,1"))
                        (rule "variableDeclaration" (formula "25") (term "16,1") (newnames "e_4"))
                        (rule "assignment_instance_field_of_this" (formula "25") (term "16,1"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "assignment_instance_field_of_this" (formula "25") (term "16,1"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "blockThrow" (formula "25") (term "15,2"))
                        (rule "throwBox" (formula "25") (term "15,2"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "instanceof_static_type" (formula "25") (term "0,0"))
                        (rule "boolean_equal" (formula "25") (term "0"))
                        (rule "ifthenelse_true_for" (formula "25"))
                        (rule "emptyModality" (formula "25") (term "14"))
                        (builtin "Update Simplification" (formula "25"))
                        (rule "andRight" (formula "25"))
                        (branch " Case 1"
                           (rule "andRight" (formula "25"))
                           (branch " Case 1"
                              (rule "andRight" (formula "25"))
                              (branch " Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch " Case 1"
                                    (rule "andRight" (formula "25"))
                                    (branch " Case 1"
                                       (rule "andRight" (formula "25"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_48"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_48.capacity >= 1 TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_48"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0"))
                                             (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_48"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_48"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                                             (rule "times_zero_1" (formula "13") (term "0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_or_1" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_48"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "close" (formula "32") (ifseqformula "11"))
                                          )
                                          (branch " CUT: m_0_48.capacity >= 1 FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_48"))
                                             (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "1,0"))
                                             (rule "concrete_or_4" (formula "8") (term "0"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                             (rule "concrete_and_2" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "allRight" (formula "25") (inst "sk=m_0_49"))
                                          (rule "orRight" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "cut_direct" (formula "27") (term "0"))
                                          (branch " CUT: m_0_49.size <= m_0_49.capacity TRUE"
                                             (rule "concrete_and_1" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_49"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "14") (term "0"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "14") (term "0"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_and_2" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                          (branch " CUT: m_0_49.size <= m_0_49.capacity FALSE"
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_49"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "allLeft" (formula "8") (inst "t=m_0_49"))
                                             (rule "replace_known_left" (formula "8") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "8") (term "1,0"))
                                             (rule "concrete_or_4" (formula "8") (term "0"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_49"))
                                             (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "16") (term "0"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "16") (term "0"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "16"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0"))
                                             (rule "leq_literals" (formula "16"))
                                             (rule "closeFalse" (formula "16"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "allRight" (formula "25") (inst "sk=m_0_50"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "allLeft" (formula "8") (inst "t=m_0_50"))
                                       (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "28"))
                                       (rule "concrete_or_2" (formula "8") (term "0"))
                                       (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "8") (term "0"))
                                       (rule "concrete_or_2" (formula "8"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_50"))
                                       (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "19") (term "1,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0"))
                                       (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "notLeft" (formula "19"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0_50"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0"))
                                       (rule "concrete_or_4" (formula "15") (term "0"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "17") (inst "t=m_0_50"))
                                       (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "17") (term "1,0"))
                                       (rule "concrete_or_4" (formula "17") (term "0"))
                                       (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "17"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " Case 2"
                                    (rule "allRight" (formula "25") (inst "sk=m_0_51"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "allRight" (formula "27") (inst "sk=i_57"))
                                    (rule "orRight" (formula "27"))
                                    (rule "notRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " self.size = i_57 & self.highscores = m_0_51.highscores TRUE"
                                       (rule "close" (formula "28") (ifseqformula "4"))
                                    )
                                    (branch " self.size = i_57 & self.highscores = m_0_51.highscores FALSE"
                                       (rule "allLeft" (formula "15") (inst "t=m_0_51"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "31"))
                                       (rule "concrete_or_2" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0_51"))
                                       (rule "replace_known_right" (formula "19") (term "1,0,0,0,0") (ifseqformula "32"))
                                       (rule "concrete_or_4" (formula "19") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "19") (term "0,1,0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "19") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                       (rule "cut_direct" (formula "28") (term "0"))
                                       (branch " CUT: self.size = i_57 TRUE"
                                          (rule "concrete_and_1" (formula "29"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "26"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "allLeft" (formula "19") (inst "t=i_57"))
                                          (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "4"))
                                          (rule "concrete_not_1" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                          (rule "concrete_and_2" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "19"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (rule "concrete_and_2" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch " CUT: self.size = i_57 FALSE"
                                          (rule "concrete_and_2" (formula "29"))
                                          (rule "false_right" (formula "29"))
                                          (rule "allLeft" (formula "19") (inst "t=i_57"))
                                          (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "3"))
                                          (rule "concrete_not_1" (formula "19") (term "1"))
                                          (rule "concrete_or_4" (formula "19"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                          (rule "concrete_and_2" (formula "19") (term "0"))
                                          (rule "concrete_or_2" (formula "19"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch " Case 2"
                                 (rule "allRight" (formula "25") (inst "sk=h_8"))
                                 (rule "orRight" (formula "25"))
                                 (rule "orRight" (formula "26"))
                                 (rule "allRight" (formula "26") (inst "sk=other_8"))
                                 (rule "orRight" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "notRight" (formula "26"))
                                 (rule "allLeft" (formula "16") (inst "t=h_8"))
                                 (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "27"))
                                 (rule "concrete_or_2" (formula "16") (term "0,0,0"))
                                 (rule "allLeft" (formula "16") (inst "t=other_8"))
                                 (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "29"))
                                 (rule "concrete_or_2" (formula "16") (term "0"))
                                 (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "close" (formula "24") (ifseqformula "1"))
                              )
                           )
                           (branch " Case 2"
                              (rule "allRight" (formula "25") (inst "sk=m_0_52"))
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "allLeft" (formula "18") (inst "t=m_0_52"))
                              (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "1"))
                              (rule "concrete_not_1" (formula "18") (term "1,0"))
                              (rule "concrete_or_4" (formula "18") (term "0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "28"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "close" (formula "24") (ifseqformula "2"))
                           )
                        )
                        (branch " Case 2"
                           (rule "allRight" (formula "25") (inst "sk=m_0_53"))
                           (rule "orRight" (formula "25"))
                           (rule "orRight" (formula "25"))
                           (rule "notRight" (formula "25"))
                           (rule "eqSymm" (formula "27") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "eqSymm" (formula "27") (term "0,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "27") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "eqSymm" (formula "27") (term "0,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,1,1"))
                           (rule "ifthenelse_split" (formula "27") (term "0,1,1,0,1,1,1"))
                           (branch "   self.highscores = m_0_53.highscores
& self.size = m_0_53.min TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "29") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                              (rule "concrete_and_1" (formula "29") (term "0,0,0,1,0,1,1,1"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "11"))
                              (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "11"))
                              (rule "applyEq" (formula "29") (term "1,0,0,0,1,0,1,1,1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "29") (term "0,0,1"))
                              (rule "concrete_eq_2" (formula "29") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,1,1") (ifseqformula "13"))
                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1,1"))
                              (rule "add_zero_left" (formula "29") (term "0,0,0,0,1,1"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,1,1"))
                              (rule "concrete_and_2" (formula "29") (term "0,0,1,1"))
                              (rule "concrete_not_2" (formula "29") (term "0,1,1"))
                              (rule "concrete_eq_1" (formula "29") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "29") (term "0,0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "29") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "29") (term "0,0"))
                              (rule "concrete_and_1" (formula "29") (term "0"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_53"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "16") (term "1,0"))
                              (rule "concrete_or_4" (formula "16") (term "0"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "16"))
                              (rule "mul_literals" (formula "8") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "mul_literals" (formula "8") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "24"))
                              (rule "times_zero_1" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "allLeft" (formula "13") (inst "t=m_0_53"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "13") (term "1,0"))
                              (rule "concrete_or_4" (formula "13") (term "0"))
                              (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "32"))
                              (rule "concrete_or_2" (formula "13"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "17"))
                              (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,0"))
                              (rule "times_zero_1" (formula "17") (term "0"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                              (rule "allLeft" (formula "16") (inst "t=self"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "25"))
                              (rule "concrete_not_1" (formula "16") (term "1,0"))
                              (rule "concrete_or_4" (formula "16") (term "0"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "11"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_1" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "allLeft" (formula "16") (inst "t=m_0_53"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "16") (term "1,0"))
                              (rule "concrete_or_4" (formula "16") (term "0"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                              (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "31"))
                              (rule "concrete_or_2" (formula "20") (term "0,0,0"))
                              (rule "allLeft" (formula "15") (inst "t=m_0_53"))
                              (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "15") (term "1,0"))
                              (rule "concrete_or_4" (formula "15") (term "0"))
                              (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "32"))
                              (rule "concrete_or_2" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_1" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "cut_direct" (formula "33") (term "0"))
                              (branch " CUT: m_0_53.size >= 1 + m_0_53.min TRUE"
                                 (rule "concrete_and_1" (formula "34"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "allLeft" (formula "22") (inst "t=self"))
                                 (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "33"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "22") (term "1"))
                                 (rule "concrete_or_4" (formula "22"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "22"))
                                 (rule "eqClose" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "20"))
                                 (rule "eqClose" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "30") (term "1,1,1,0,0,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " CUT: m_0_53.size >= 1 + m_0_53.min FALSE"
                                 (rule "concrete_and_2" (formula "34"))
                                 (rule "false_right" (formula "34"))
                                 (rule "inEqSimp_geqRight" (formula "33"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=m_0_53"))
                                 (rule "exLeft" (formula "25") (inst "sk=i_100"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "25") (term "0"))
                                 (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "25") (term "0"))
                                 (rule "concrete_or_2" (formula "25"))
                                 (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "26") (term "0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "26") (term "0"))
                                 (rule "concrete_or_2" (formula "26"))
                                 (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "32") (term "0,0"))
                                 (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "32") (term "0,0"))
                                 (rule "concrete_or_2" (formula "32") (term "0"))
                                 (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "31") (term "0,0"))
                                 (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "31") (term "0,0"))
                                 (rule "concrete_or_2" (formula "31") (term "0"))
                                 (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "30") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "30") (term "0,0"))
                                 (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "29") (term "0,0"))
                                 (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "41"))
                                 (rule "concrete_or_4" (formula "28") (term "0,0"))
                                 (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "28") (term "1,0"))
                                 (rule "concrete_or_4" (formula "28") (term "0"))
                                 (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "27") (term "1,0"))
                                 (rule "concrete_or_4" (formula "27") (term "0"))
                                 (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "41"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "41"))
                                 (rule "concrete_or_4" (formula "27") (term "0"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                 (rule "concrete_not_1" (formula "29") (term "0,0"))
                                 (rule "concrete_or_2" (formula "29") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "28") (term "0,1") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                 (rule "leq_literals" (formula "28") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "28") (term "0,1"))
                                 (rule "concrete_not_2" (formula "28") (term "1"))
                                 (rule "concrete_or_3" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0"))
                                 (rule "concrete_or_1" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "30") (term "0,0"))
                                 (rule "concrete_not_2" (formula "30") (term "0"))
                                 (rule "concrete_or_1" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "inEqSimp_contradEq7" (formula "28") (term "0") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                 (rule "leq_literals" (formula "28") (term "0,0"))
                                 (rule "concrete_and_2" (formula "28") (term "0"))
                                 (rule "concrete_or_2" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "34"))
                                 (rule "concrete_or_4" (formula "28"))
                                 (rule "notLeft" (formula "28"))
                                 (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                 (rule "concrete_and_2" (formula "33"))
                                 (rule "false_right" (formula "33"))
                                 (rule "inEqSimp_strengthen1" (formula "16") (ifseqformula "33"))
                                 (rule "add_zero_right" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "16"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0"))
                                 (rule "leq_literals" (formula "33") (term "0"))
                                 (rule "concrete_and_2" (formula "33"))
                                 (rule "false_right" (formula "33"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (rule "concrete_or_1" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "1"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0"))
                                 (rule "add_zero_right" (formula "25") (term "0"))
                                 (rule "leq_literals" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                           )
                           (branch "   self.highscores = m_0_53.highscores
& self.size = m_0_53.min FALSE"
                              (rule "cut_direct" (formula "28") (term "0,0"))
                              (branch " CUT: m_0_53.min >= -1 TRUE"
                                 (rule "concrete_and_1" (formula "29") (term "0"))
                                 (rule "cut_direct" (formula "28") (term "0"))
                                 (branch " CUT: self.highscores = m_0_53.highscores TRUE"
                                    (rule "concrete_and_1" (formula "29"))
                                    (rule "replace_known_left" (formula "30") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "concrete_and_1" (formula "30") (term "0,0,0,1,0,1,1,1"))
                                    (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "11"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "22"))
                                    (rule "times_zero_1" (formula "13") (term "0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "cut_direct" (formula "30") (term "0"))
                                    (branch " CUT: m_0_53.size >= 1 + m_0_53.min TRUE"
                                       (rule "concrete_and_1" (formula "31"))
                                       (rule "andRight" (formula "31"))
                                       (branch " Case 1"
                                          (rule "equiv_right" (formula "31"))
                                          (branch " Case 1"
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "30") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "14"))
                                             (rule "add_zero_left" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "30"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "17") (term "1,0"))
                                             (rule "concrete_or_4" (formula "17") (term "0"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "17"))
                                             (rule "mul_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                             (rule "mul_literals" (formula "9") (term "1"))
                                             (rule "allLeft" (formula "14") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "14") (term "1,0"))
                                             (rule "concrete_or_4" (formula "14") (term "0"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "14"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq0" (formula "18"))
                                             (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,0"))
                                             (rule "times_zero_1" (formula "18") (term "0"))
                                             (rule "qeq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                             (rule "times_zero_1" (formula "15") (term "0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1"))
                                             (rule "allLeft" (formula "17") (inst "t=self"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "26"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "12"))
                                             (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0"))
                                             (rule "qeq_literals" (formula "17") (term "0"))
                                             (rule "concrete_or_1" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "allLeft" (formula "21") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "21") (term "0,0,0"))
                                             (rule "allLeft" (formula "21") (inst "t=self"))
                                             (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "21") (term "1"))
                                             (rule "concrete_or_4" (formula "21"))
                                             (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "21"))
                                             (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "21"))
                                             (rule "eqClose" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "31") (term "0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "20"))
                                             (rule "eqClose" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_or_1" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (rule "concrete_or_1" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                             (rule "concrete_or_1" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                             (rule "concrete_or_1" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "8") (term "0,0") (ifseqformula "4") (ifseqformula "6") (ifseqformula "23"))
                                             (rule "allLeft" (formula "19") (inst "t=m_0_53"))
                                             (rule "exLeft" (formula "19") (inst "sk=i_79"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "19") (term "1,0"))
                                             (rule "concrete_or_4" (formula "19") (term "0"))
                                             (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "19"))
                                             (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "20") (term "1,0"))
                                             (rule "concrete_or_4" (formula "20") (term "0"))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "26") (term "1,0"))
                                             (rule "concrete_or_4" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "26") (term "1,0"))
                                             (rule "concrete_or_4" (formula "26") (term "0"))
                                             (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "26"))
                                             (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "25") (term "1,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "24") (term "1,0"))
                                             (rule "concrete_or_4" (formula "24") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "23") (term "0"))
                                             (rule "concrete_or_1" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "32"))
                                             (rule "concrete_or_4" (formula "22") (term "0,0"))
                                             (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "22") (term "1,0"))
                                             (rule "concrete_or_4" (formula "22") (term "0"))
                                             (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "21") (term "1,0"))
                                             (rule "concrete_or_4" (formula "21") (term "0"))
                                             (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "22") (term "1"))
                                             (rule "concrete_or_4" (formula "22"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "24") (term "1,0"))
                                             (rule "concrete_or_4" (formula "24") (term "0"))
                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "24"))
                                             (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "23") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "23") (term "0"))
                                             (rule "concrete_or_2" (formula "23"))
                                             (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "32"))
                                             (rule "concrete_or_4" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "23"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch " Case 2"
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "32"))
                                             (rule "add_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0"))
                                             (rule "leq_literals" (formula "32") (term "0"))
                                             (rule "concrete_and_2" (formula "32"))
                                             (rule "false_right" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "equiv_right" (formula "31"))
                                          (branch " Case 1"
                                             (rule "notLeft" (formula "1"))
                                             (rule "allRight" (formula "32") (inst "sk=i_58"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "32"))
                                             (rule "orRight" (formula "33"))
                                             (rule "eqSymm" (formula "35") (term "0,0,0"))
                                             (rule "eqSymm" (formula "32"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_geqRight" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "29"))
                                             (rule "add_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "6"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                             (rule "concrete_and_2" (formula "29"))
                                             (rule "false_right" (formula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                             (branch " self.size = i_58 TRUE"
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "27"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "33"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "8"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "20"))
                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                (rule "allLeft" (formula "18") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "18") (term "0"))
                                                (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "8"))
                                                (rule "concrete_not_1" (formula "18") (term "0"))
                                                (rule "concrete_or_2" (formula "18"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,0"))
                                                (rule "times_zero_1" (formula "22") (term "0"))
                                                (rule "qeq_literals" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "17"))
                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                                (rule "allLeft" (formula "20") (inst "t=self"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "33"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "29"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (rule "concrete_or_1" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "8"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "25") (term "0,0,0"))
                                                (rule "allLeft" (formula "24") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "24") (term "1,0,0,0,0") (ifseqformula "37"))
                                                (rule "concrete_or_4" (formula "24") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "24") (term "0,1,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "24") (term "1,0,0,0"))
                                                (rule "concrete_or_4" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                                (rule "times_zero_1" (formula "20") (term "0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                (rule "concrete_or_1" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_53.min@(maze.Highscore)"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "25") (term "1,0"))
                                                (rule "concrete_or_4" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "25") (term "0,0"))
                                                (rule "concrete_and_2" (formula "25") (term "0"))
                                                (rule "concrete_or_2" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allLeft" (formula "27") (inst "t=self"))
                                                (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "39"))
                                                (rule "concrete_or_2" (formula "27") (term "0"))
                                                (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "7"))
                                                (rule "concrete_not_1" (formula "27") (term "1"))
                                                (rule "concrete_or_4" (formula "27"))
                                                (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "27"))
                                                (rule "eqClose" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "25"))
                                                (rule "eqClose" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_commuteLeq" (formula "18"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch " self.size = i_58 FALSE"
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "7"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "20"))
                                                (rule "mul_literals" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1"))
                                                (rule "allLeft" (formula "17") (inst "t=m_0_53"))
                                                (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "7"))
                                                (rule "concrete_not_1" (formula "17") (term "1,0"))
                                                (rule "concrete_or_4" (formula "17") (term "0"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "36"))
                                                (rule "concrete_or_2" (formula "17"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq0" (formula "22"))
                                                (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,0"))
                                                (rule "times_zero_1" (formula "22") (term "0"))
                                                (rule "qeq_literals" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "17"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "27"))
                                                (rule "mul_literals" (formula "18") (term "0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                (rule "mul_literals" (formula "18") (term "1"))
                                                (rule "allLeft" (formula "20") (inst "t=self"))
                                                (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "29"))
                                                (rule "concrete_not_1" (formula "20") (term "1,0"))
                                                (rule "concrete_or_4" (formula "20") (term "0"))
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "34"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "applyEq" (formula "20") (term "1") (ifseqformula "15"))
                                                (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (rule "concrete_or_1" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "35"))
                                                (rule "concrete_or_2" (formula "20") (term "0"))
                                                (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "7"))
                                                (rule "concrete_not_1" (formula "20") (term "0"))
                                                (rule "concrete_or_2" (formula "20"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "21"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "allLeft" (formula "26") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "26") (term "0,0,0"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0_53"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,0,0,0") (ifseqformula "39"))
                                                (rule "concrete_or_4" (formula "25") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                                (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                (rule "allLeft" (formula "21") (inst "t=m_0_53"))
                                                (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "21") (term "1,0"))
                                                (rule "concrete_or_4" (formula "21") (term "0"))
                                                (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
                                                (rule "concrete_or_2" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                (rule "concrete_or_1" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "allLeft" (formula "32") (inst "t=m_0_53"))
                                                (rule "eqSymm" (formula "32") (term "1,0,0,0"))
                                                (rule "replace_known_right" (formula "32") (term "1,0,0,0,0,0,0") (ifseqformula "41"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "32") (term "0,1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "concrete_not_1" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0,0,0") (ifseqformula "8"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                                                (rule "allLeft" (formula "32") (inst "t=i_58"))
                                                (rule "eqSymm" (formula "32") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "44"))
                                                (rule "concrete_or_4" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "32") (term "0,0"))
                                                (rule "concrete_or_2" (formula "32") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (rule "concrete_and_2" (formula "32") (term "1"))
                                                (rule "concrete_or_4" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "3"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0"))
                                                (rule "add_literals" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "notRight" (formula "32"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "31") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "15"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (rule "concrete_and_2" (formula "31"))
                                             (rule "false_right" (formula "31"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0"))
                                             (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "18"))
                                             (rule "mul_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "allLeft" (formula "15") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "15") (term "1,0"))
                                             (rule "concrete_or_4" (formula "15") (term "0"))
                                             (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq0" (formula "20"))
                                             (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,0"))
                                             (rule "times_zero_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "13") (term "1") (ifseqformula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "25"))
                                             (rule "times_zero_1" (formula "16") (term "0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "allLeft" (formula "18") (inst "t=self"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "27"))
                                             (rule "concrete_not_1" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "applyEq" (formula "18") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "qeq_literals" (formula "18") (term "0"))
                                             (rule "concrete_or_1" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "18") (term "0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (rule "concrete_or_1" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "allLeft" (formula "22") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "22") (term "0,0,0"))
                                             (rule "allLeft" (formula "22") (inst "t=self"))
                                             (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "22") (term "1"))
                                             (rule "concrete_or_4" (formula "22"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "22"))
                                             (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "21"))
                                             (rule "eqClose" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0,0,1,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "20"))
                                             (rule "eqClose" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (rule "concrete_or_1" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                             (rule "concrete_or_1" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "22"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "9") (term "0,0") (ifseqformula "4") (ifseqformula "6") (ifseqformula "24"))
                                             (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                             (rule "exLeft" (formula "20") (inst "sk=i_80"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "20") (term "1,0"))
                                             (rule "concrete_or_4" (formula "20") (term "0"))
                                             (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "20"))
                                             (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "21") (term "1,0"))
                                             (rule "concrete_or_4" (formula "21") (term "0"))
                                             (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "21"))
                                             (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "27") (term "1,0"))
                                             (rule "concrete_or_4" (formula "27") (term "0"))
                                             (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "27") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "27") (term "0"))
                                             (rule "concrete_or_2" (formula "27"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "26") (term "1,0"))
                                             (rule "concrete_or_4" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "25") (term "1,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "1"))
                                             (rule "concrete_or_3" (formula "24") (term "0"))
                                             (rule "concrete_or_1" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "33"))
                                             (rule "concrete_or_4" (formula "23") (term "0,0"))
                                             (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "23") (term "1,0"))
                                             (rule "concrete_or_4" (formula "23") (term "0"))
                                             (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "22") (term "1,0"))
                                             (rule "concrete_or_4" (formula "22") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "23") (term "1"))
                                             (rule "concrete_or_4" (formula "23"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "25") (term "0"))
                                             (rule "concrete_or_2" (formula "25"))
                                             (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "24") (term "0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "24") (term "0"))
                                             (rule "concrete_or_2" (formula "24"))
                                             (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "33"))
                                             (rule "concrete_or_4" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "20") (term "1"))
                                             (rule "applyEq" (formula "20") (term "0,0,1") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "20") (term "0,1"))
                                             (rule "eq_or" (formula "20"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "times_zero_2" (formula "22") (term "1,0"))
                                             (rule "add_zero_right" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq0" (formula "26"))
                                             (rule "times_zero_2" (formula "26") (term "1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                             (rule "mul_literals" (formula "25") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "19"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                             (rule "concrete_and_2" (formula "26"))
                                             (rule "false_right" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "19"))
                                             (rule "qeq_literals" (formula "21") (term "0"))
                                             (rule "concrete_and_2" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                       )
                                    )
                                    (branch " CUT: m_0_53.size >= 1 + m_0_53.min FALSE"
                                       (rule "concrete_and_2" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "30"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "21") (inst "t=m_0_53"))
                                       (rule "exLeft" (formula "21") (inst "sk=i_59"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "0"))
                                       (rule "concrete_or_2" (formula "22"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "21"))
                                       (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "27") (term "0,0"))
                                       (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "27") (term "0,0"))
                                       (rule "concrete_or_2" (formula "27") (term "0"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "25") (term "0,0"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "24") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "36"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "36"))
                                       (rule "concrete_or_4" (formula "23") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "36"))
                                       (rule "concrete_or_2" (formula "24") (term "0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "25") (term "0,0"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch " CUT: self.highscores = m_0_53.highscores FALSE"
                                    (rule "concrete_and_2" (formula "29"))
                                    (rule "false_right" (formula "29"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,0,1,0,1,1,1") (ifseqformula "28"))
                                    (rule "concrete_and_2" (formula "29") (term "0,0,0,1,0,1,1,1"))
                                    (rule "ifthenelse_false" (formula "29") (term "0,0,1,0,1,1,1"))
                                    (rule "cut_direct" (formula "29") (term "0"))
                                    (branch " CUT: m_0_53.size >= 1 + m_0_53.min TRUE"
                                       (rule "concrete_and_1" (formula "30"))
                                       (rule "andRight" (formula "30"))
                                       (branch " Case 1"
                                          (rule "equiv_right" (formula "30"))
                                          (branch " Case 1"
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "2") (term "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "30"))
                                             (rule "add_zero_right" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                             (rule "concrete_and_2" (formula "30"))
                                             (rule "false_right" (formula "30"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "16") (term "1,0"))
                                             (rule "concrete_or_4" (formula "16") (term "0"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "allLeft" (formula "12") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "12") (term "0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,0"))
                                             (rule "times_zero_1" (formula "17") (term "0"))
                                             (rule "qeq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "16") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "3"))
                                             (rule "concrete_not_1" (formula "16") (term "1,0"))
                                             (rule "concrete_or_4" (formula "16") (term "0"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "16"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "allLeft" (formula "22") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "22") (term "1,0"))
                                             (rule "concrete_or_4" (formula "22") (term "0"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "32"))
                                             (rule "concrete_or_2" (formula "22"))
                                             (rule "notLeft" (formula "22"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "33") (term "1") (ifseqformula "4") (ifseqformula "8") (ifseqformula "28"))
                                             (rule "array_length_non_negative_3" (formula "14") (term "0") (ifseqformula "9") (ifseqformula "1") (ifseqformula "29"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                             (rule "concrete_or_1" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "allLeft" (formula "24") (inst "t=m_0_53"))
                                             (rule "exLeft" (formula "24") (inst "sk=i_81"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "andLeft" (formula "24"))
                                             (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "24") (term "1,0"))
                                             (rule "concrete_or_4" (formula "24") (term "0"))
                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "24"))
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "25") (term "0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "25") (term "0"))
                                             (rule "concrete_or_2" (formula "25"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "31"))
                                             (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "30") (term "0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "30") (term "1,0"))
                                             (rule "concrete_or_4" (formula "30") (term "0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "30") (term "0"))
                                             (rule "concrete_or_2" (formula "30"))
                                             (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "41"))
                                             (rule "concrete_or_2" (formula "29") (term "0,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "2"))
                                             (rule "concrete_or_3" (formula "28") (term "0"))
                                             (rule "concrete_or_1" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "27") (term "1,0"))
                                             (rule "concrete_or_4" (formula "27") (term "0"))
                                             (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "40"))
                                             (rule "concrete_or_4" (formula "26") (term "0,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "26") (term "1,0"))
                                             (rule "concrete_or_4" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "27") (term "1"))
                                             (rule "concrete_or_4" (formula "27"))
                                             (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "28") (term "0"))
                                             (rule "concrete_or_2" (formula "28"))
                                             (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "40"))
                                             (rule "concrete_or_4" (formula "27"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                          (branch " Case 2"
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "times_zero_2" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "31"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "3"))
                                             (rule "add_zero_left" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                             (rule "concrete_and_2" (formula "31"))
                                             (rule "false_right" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "equiv_right" (formula "30"))
                                          (branch " Case 1"
                                             (rule "notLeft" (formula "1"))
                                             (rule "allRight" (formula "31") (inst "sk=i_60"))
                                             (rule "orRight" (formula "31"))
                                             (rule "orRight" (formula "31"))
                                             (rule "orRight" (formula "32"))
                                             (rule "eqSymm" (formula "31"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "28"))
                                             (rule "add_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "20") (term "1,0,0,0,0") (ifseqformula "32"))
                                             (rule "concrete_or_4" (formula "20") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "20") (term "0,1,0,0,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "20") (term "1,0,0,0"))
                                             (rule "concrete_or_4" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=m_0_53"))
                                             (rule "eqSymm" (formula "25") (term "1,0,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,0,0,0,0,0") (ifseqformula "33"))
                                             (rule "concrete_or_4" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "25") (term "0,1,0,0,0,0,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "25") (term "1,0,0,0,0") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "25") (term "1,0,0,0,0"))
                                             (rule "concrete_or_4" (formula "25") (term "0,0,0,0"))
                                             (rule "allLeft" (formula "19") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "19") (term "0"))
                                             (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "19") (term "0"))
                                             (rule "concrete_or_2" (formula "19"))
                                             (rule "allLeft" (formula "15") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "15") (term "0"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "15") (term "0"))
                                             (rule "concrete_or_2" (formula "15"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq0" (formula "20"))
                                             (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,0"))
                                             (rule "times_zero_1" (formula "20") (term "0"))
                                             (rule "qeq_literals" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "allLeft" (formula "19") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "19") (term "1,0"))
                                             (rule "concrete_or_4" (formula "19") (term "0"))
                                             (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "19"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "7") (term "0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "allLeft" (formula "28") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "39"))
                                             (rule "concrete_or_2" (formula "28") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "28") (term "0"))
                                             (rule "concrete_or_2" (formula "28"))
                                             (rule "notLeft" (formula "28"))
                                             (rule "allLeft" (formula "21") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "9"))
                                             (rule "concrete_not_1" (formula "21") (term "1,0"))
                                             (rule "concrete_or_4" (formula "21") (term "0"))
                                             (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
                                             (rule "concrete_or_2" (formula "21"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                                             (rule "times_zero_1" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                             (rule "concrete_or_1" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "31") (inst "t=i_60"))
                                             (rule "eqSymm" (formula "31") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_4" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "31") (term "0,1,0"))
                                             (rule "concrete_and_2" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (rule "concrete_and_2" (formula "31") (term "1"))
                                             (rule "concrete_or_4" (formula "31"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (rule "concrete_and_2" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch " Case 2"
                                             (rule "notRight" (formula "31"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                             (rule "add_literals" (formula "3") (term "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "shift_paren_or" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "2") (term "0,0,0"))
                                             (rule "greater_literals" (formula "2") (term "0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_or_2" (formula "2") (term "0,0,0"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "30"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "allLeft" (formula "13") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "13") (term "0,1,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "13") (term "1,0"))
                                             (rule "concrete_or_4" (formula "13") (term "0"))
                                             (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq0" (formula "18"))
                                             (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,0"))
                                             (rule "times_zero_1" (formula "18") (term "0"))
                                             (rule "qeq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "17") (inst "t=m_0_53"))
                                             (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "31"))
                                             (rule "concrete_or_2" (formula "17") (term "0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "4"))
                                             (rule "concrete_not_1" (formula "17") (term "0"))
                                             (rule "concrete_or_2" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "allLeft" (formula "23") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "23") (term "1,0"))
                                             (rule "concrete_or_4" (formula "23") (term "0"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "33"))
                                             (rule "concrete_or_2" (formula "23"))
                                             (rule "notLeft" (formula "23"))
                                             (rule "allLeft" (formula "11") (inst "t=m_0_53"))
                                             (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "11") (term "1,0"))
                                             (rule "concrete_or_4" (formula "11") (term "0"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (rule "concrete_or_1" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "only_created_object_are_referenced_non_null" (formula "34") (term "1") (ifseqformula "4") (ifseqformula "8") (ifseqformula "29"))
                                             (rule "array_length_non_negative_3" (formula "15") (term "0") (ifseqformula "9") (ifseqformula "1") (ifseqformula "30"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (rule "concrete_or_1" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "allLeft" (formula "23") (inst "t=self"))
                                             (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "34"))
                                             (rule "concrete_or_2" (formula "23") (term "0,0,0"))
                                             (rule "allLeft" (formula "26") (inst "t=m_0_53"))
                                             (rule "exLeft" (formula "26") (inst "sk=i_61"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "26") (term "0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "26") (term "0"))
                                             (rule "concrete_or_2" (formula "26"))
                                             (rule "replace_known_left" (formula "27") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "27") (term "1,0"))
                                             (rule "concrete_or_4" (formula "27") (term "0"))
                                             (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "27"))
                                             (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "33") (term "1,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0"))
                                             (rule "replace_known_left" (formula "33") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "33") (term "1,0"))
                                             (rule "concrete_or_4" (formula "33") (term "0"))
                                             (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "33"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "32") (term "1,0"))
                                             (rule "concrete_or_4" (formula "32") (term "0"))
                                             (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "43"))
                                             (rule "concrete_or_2" (formula "31") (term "0,0"))
                                             (rule "replace_known_left" (formula "31") (term "0,1,0") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "31") (term "1,0"))
                                             (rule "concrete_or_4" (formula "31") (term "0"))
                                             (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "31") (term "0"))
                                             (rule "concrete_or_2" (formula "31"))
                                             (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "2"))
                                             (rule "concrete_or_3" (formula "30") (term "0"))
                                             (rule "concrete_or_1" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "29") (term "1,0"))
                                             (rule "concrete_or_4" (formula "29") (term "0"))
                                             (rule "replace_known_left" (formula "28") (term "0,1,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "28") (term "1,0"))
                                             (rule "concrete_or_4" (formula "28") (term "0"))
                                             (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "2"))
                                             (rule "concrete_not_1" (formula "29") (term "1"))
                                             (rule "concrete_or_4" (formula "29"))
                                             (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "42"))
                                             (rule "concrete_or_2" (formula "31") (term "0"))
                                             (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "42"))
                                             (rule "concrete_or_4" (formula "29"))
                                             (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "5"))
                                             (rule "concrete_not_1" (formula "31") (term "0"))
                                             (rule "concrete_or_2" (formula "31"))
                                             (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "42"))
                                             (rule "concrete_or_4" (formula "28") (term "0"))
                                             (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "2"))
                                             (rule "add_literals" (formula "27") (term "1"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "26") (term "0,1"))
                                             (rule "eq_or" (formula "26"))
                                             (rule "notLeft" (formula "26"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "mul_literals" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                             (rule "mul_literals" (formula "28") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                             (rule "mul_literals" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "25"))
                                             (rule "add_zero_left" (formula "34") (term "0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                             (rule "concrete_and_2" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "25") (term "0"))
                                             (rule "concrete_and_2" (formula "25"))
                                             (rule "closeFalse" (formula "25"))
                                          )
                                       )
                                    )
                                    (branch " CUT: m_0_53.size >= 1 + m_0_53.min FALSE"
                                       (rule "concrete_and_2" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "29"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "20") (inst "t=m_0_53"))
                                       (rule "exLeft" (formula "20") (inst "sk=i_62"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                                       (rule "concrete_or_3" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "20") (term "1,0"))
                                       (rule "concrete_or_4" (formula "20") (term "0"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "20"))
                                       (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "26") (term "0,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "25") (term "0,0"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "25") (term "0,0"))
                                       (rule "concrete_or_2" (formula "25") (term "0"))
                                       (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "24") (term "0,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "22") (term "1,0"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "replace_known_left" (formula "23") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "23") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "23") (term "0,0"))
                                       (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "21") (term "1,0"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "35"))
                                       (rule "concrete_or_4" (formula "21") (term "0"))
                                       (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "35"))
                                       (rule "concrete_or_2" (formula "23") (term "0"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (rule "concrete_not_1" (formula "24") (term "0,0"))
                                       (rule "concrete_or_2" (formula "24") (term "0"))
                                       (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "35"))
                                       (rule "concrete_or_4" (formula "22") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_literals" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                              )
                              (branch " CUT: m_0_53.min >= -1 FALSE"
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_and_2" (formula "29"))
                                 (rule "false_right" (formula "29"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "cut_direct" (formula "28") (term "1"))
                                 (branch " CUT: self.size = m_0_53.min TRUE"
                                    (rule "concrete_and_3" (formula "29"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                    (rule "mul_literals" (formula "22") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (rule "concrete_and_2" (formula "13"))
                                    (rule "closeFalse" (formula "13"))
                                 )
                                 (branch " CUT: self.size = m_0_53.min FALSE"
                                    (rule "concrete_and_4" (formula "29"))
                                    (rule "false_right" (formula "29"))
                                    (rule "allLeft" (formula "19") (inst "t=m_0_53"))
                                    (rule "exLeft" (formula "19") (inst "sk=i_63"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "19") (term "1,0"))
                                    (rule "concrete_or_4" (formula "19") (term "0"))
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "20") (term "1,0"))
                                    (rule "concrete_or_4" (formula "20") (term "0"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "20"))
                                    (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "26") (term "0,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "26") (term "0,0"))
                                    (rule "concrete_or_2" (formula "26") (term "0"))
                                    (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "25") (term "0,0"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "25") (term "0,0"))
                                    (rule "concrete_or_2" (formula "25") (term "0"))
                                    (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "24") (term "0,0"))
                                    (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_2" (formula "23") (term "0,0"))
                                    (rule "replace_known_left" (formula "22") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "22") (term "1,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "35"))
                                    (rule "concrete_or_4" (formula "21") (term "0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "21") (term "1,0"))
                                    (rule "concrete_or_4" (formula "21") (term "0"))
                                    (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "24") (term "0,0"))
                                    (rule "concrete_or_2" (formula "24") (term "0"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "23") (term "0,0"))
                                    (rule "concrete_or_2" (formula "23") (term "0"))
                                    (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "35"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0,1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "22") (term "0,1"))
                                    (rule "concrete_not_2" (formula "22") (term "1"))
                                    (rule "concrete_or_3" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "25") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "25") (term "0,0"))
                                    (rule "concrete_not_2" (formula "25") (term "0"))
                                    (rule "concrete_or_1" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "23") (term "0,0"))
                                    (rule "concrete_not_2" (formula "23") (term "0"))
                                    (rule "concrete_or_1" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "inEqSimp_contradEq3" (formula "22") (term "0,0") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "22") (term "0,0"))
                                    (rule "concrete_not_2" (formula "22") (term "0"))
                                    (rule "concrete_or_1" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch " Null Reference (v_ArrayIndexOutOfBoundsException_5 = null)"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "repository_object_non_null" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch " Null Reference (v_Record = null)"
            (builtin "Update Simplification" (formula "22"))
            (builtin "Update Simplification" (formula "1"))
            (rule "close" (formula "20") (ifseqformula "1"))
         )
      )
      (branch " Null Reference (highscores = null)"
         (builtin "Update Simplification" (formula "1"))
         (rule "close" (formula "19") (ifseqformula "1"))
      )
      (branch " Index Out of Bounds (highscores != null, but size Out of Bounds!)"
         (builtin "Update Simplification" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (rule "concrete_and_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
         (rule "andLeft" (formula "16"))
         (rule "inEqSimp_homoInEq1" (formula "16"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "1,1,0"))
         (rule "times_zero_1" (formula "16") (term "1,0"))
         (rule "add_zero_right" (formula "16") (term "0"))
         (rule "leq_literals" (formula "16"))
         (rule "closeFalse" (formula "16"))
      )
   )
   (branch " Null Reference (highscores = null)"
      (builtin "Update Simplification" (formula "22"))
      (builtin "Update Simplification" (formula "1"))
      (rule "close" (formula "19") (ifseqformula "1"))
   )
   (branch " Index Out of Bounds (highscores != null, but size Out of Bounds!)"
      (builtin "Update Simplification" (formula "22"))
      (builtin "Update Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0"))
      (rule "concrete_and_2" (formula "1") (term "0"))
      (rule "concrete_or_2" (formula "1"))
      (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
      (rule "qeq_literals" (formula "7") (term "0"))
      (rule "concrete_and_2" (formula "7"))
      (rule "closeFalse" (formula "7"))
   )
   (branch " Array Store Exception (incompatible dynamic element type of highscores and _rec)"
      (builtin "Update Simplification" (formula "22"))
      (builtin "Update Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "2"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "array_store_static_analyse" (formula "18") (ifseqformula "19"))
      (rule "closeTrue" (formula "18"))
   )
)
)

}
