\settings {
"#Proof-Settings-Config-File
#Wed Feb 15 11:53:32 CET 2012
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[DecisionProcedure]showSMTResDialog=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[DecisionProcedure]ActiveRule=SIMPLIFY_PROVER
[DecisionProcedure]multprovers=Z3\\=true\\:Simplify\\=true\\:Yices\\=true\\:CVC3\\=true
[Choice]DefaultChoices=transactions-transactions\\:transactionsOff , throughout-throughout\\:toutOff , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOff , rtsj-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool , memory-memory\\:off , javacard-javacard\\:jcOff
[TacletTranslation]filename=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[View]HideIntermediateProofsteps=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[DecisionProcedure]WeakenSMTTranslation=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DecisionProcedure]savefile_path=
[General]StupidMode=true
[DecisionProcedure]SolverTimeout=60
[General]UseJML=true
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[DecisionProcedure]pd_mode=0
[DecisionProcedure]Exec=Z3\\=z3 -smt -m %f\\:Simplify\\=simplify.exe %f\\:Yices\\=yices -tc -e -smt %f\\:CVC3\\=cvc3 -lang smt +model %f
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[General]SoundNotification=false
[DecisionProcedure]cache_goals=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , assertions-assertions\\:on-assertions\\:off-assertions\\:safe , programRules-programRules\\:Java-programRules\\:ODL , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , rtsj-rtsj\\:on-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool-stringRules\\:withoutStringPool , memory-memory\\:off-memory\\:on , javacard-javacard\\:jcOff-javacard\\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[TacletTranslation]maxGeneric=3
"
}

\javaSource "C:\\Users\\dome\\UNI\\WS_11_12\\SEFM\\SEFM_Git\\Lab_2\\MazeLab";



\programVariables {
java.lang.Throwable exc;
maze.Highscore self;
maze.Record _rec;
maze.Record rec;
maze.Record result;
}

\functions {
\nonRigid[LocationNoHeap] maze.Record getAtPre_0(maze.Record[],int);
\nonRigid[LocationNoHeap] jint minAtPre_0(maze.Highscore);
\nonRigid[LocationNoHeap] maze.Record[] highscoresAtPre_0(maze.Highscore);
\nonRigid[LocationNoHeap] maze.Record recAtPre_0;
}

\predicates {
}

\problem {
     inReachableState
   & (  \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.capacity@(maze.Highscore)
                >  (jint)(0)
              &   m_0.capacity@(maze.Highscore)
                = m_0.highscores@(maze.Highscore).length)
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.size@(maze.Highscore)
                <= m_0.capacity@(maze.Highscore)
              & m_0.size@(maze.Highscore) >= (jint)(0))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->    m_0.highscores@(maze.Highscore).length
              <= m_0.capacity@(maze.Highscore))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> \forall jint i; 
                (     i >= (jint)(0)
                    & i <  m_0.size@(maze.Highscore)
                    & inInt(i)
                 -> !  m_0.highscores@(maze.Highscore)[i]
                     = null))
      & \forall maze.Highscore h; 
          (   !h = null
           ->   h = null
              | \forall maze.Highscore other; 
                  (       h.highscores@(maze.Highscore)
                        = other.highscores@(maze.Highscore)
                      & !other = null
                   -> h = other))
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> !m_0.highscores@(maze.Highscore) = null)
      & \forall maze.Highscore m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           ->      m_0.min@(maze.Highscore)
                >= (jint)-((jint)(1))
              &    m_0.min@(maze.Highscore)
                <  m_0.size@(maze.Highscore)
              & (  (      m_0.min@(maze.Highscore)
                        = (jint)-((jint)(1))
                    <->   m_0.size@(maze.Highscore)
                        = (jint)(0))
                 & (    !  m_0.min@(maze.Highscore)
                         = (jint)-((jint)(1))
                    <-> !\exists jint i; 
                           (  !  i
                               = m_0.min@(maze.Highscore)
                            & (  i >= (jint)(0)
                               &    i
                                 <  m_0.size@(maze.Highscore))
                            & inInt(i)
                            &    m_0.highscores@(maze.Highscore)[i].score@(maze.Record)
                              <  m_0.highscores@(maze.Highscore)[m_0.min@(maze.Highscore)].score@(maze.Record))))))
   & (  self.<created>@(java.lang.Object) = TRUE
      & !self = null)
   & (  rec.<created>@(java.lang.Object) = TRUE
      | rec = null)
   & (     self.size@(maze.Highscore)
        >= self.capacity@(maze.Highscore)
      &    rec.score@(maze.Record)
        >  self.highscores@(maze.Highscore)[self.min@(maze.Highscore)].score@(maze.Record)
      & !rec = null)
-> {_rec:=rec ||
     \for (int x1; maze.Record[] x0) getAtPre_0(x0,x1):=
     x0[x1] ||
     \for maze.Highscore x; highscoresAtPre_0(x):=x.highscores@(maze.Highscore) ||
     \for maze.Highscore x; minAtPre_0(x):=x.min@(maze.Highscore) ||
     recAtPre_0:=rec}
     \<{
         exc=null;try {
           result=self.add(_rec)@maze.Highscore;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\> (    result
              = getAtPre_0(highscoresAtPre_0(self),
                           minAtPre_0(self))
            &   self.highscores@(maze.Highscore)[minAtPre_0(self)]
              = recAtPre_0
            & exc = null)

}

\proof {
(keyLog "0" (keyUser "dome" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "dome" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "31075")

(branch "dummy ID"
(rule "inInt" (formula "1") (term "1,0,0,1,0,1,0,0,0,1,0,0,0,0"))
(rule "inInt" (formula "1") (term "1,0,0,0,1,1,1,1,0,1,1,0,0,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,0,1,0,0,0,1,0,0,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0,0,1,1,1,1,0,1,1,0,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "assignment_instance_field_of_this" (formula "15") (term "9"))
(builtin "Update Simplification" (formula "15"))
(rule "castDelInt" (formula "8") (term "1,0,1,0,0,0,1,1,1,1,0"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,1,0"))
(rule "castDelInt" (formula "8") (term "0,0,1,0,0,1,0"))
(rule "neg_literal" (formula "8") (term "0,1,0,0,1,0"))
(rule "castDelInt" (formula "8") (term "0,0,1,0,0,1,1,1,0"))
(rule "neg_literal" (formula "8") (term "0,1,0,0,1,1,1,0"))
(rule "castDelInt" (formula "8") (term "1,1,0,1,1,0"))
(rule "castDelInt" (formula "5") (term "1,0,0,0,1,0"))
(rule "castDelInt" (formula "2") (term "1,0,1,0"))
(rule "castDelInt" (formula "3") (term "1,1,1,0"))
(rule "castDelInt" (formula "8") (term "0,1,0,0,1,1,0"))
(rule "neg_literal" (formula "8") (term "1,0,0,1,1,0"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,0"))
(rule "castDelInt" (formula "8") (term "1,0,0,1,1,1,0"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,0,1,1,1,1,0"))
(rule "eqSymm" (formula "6") (term "1,0,1,1,0"))
(rule "eqSymm" (formula "6") (term "0,0,0,1,1,0"))
(rule "eqSymm" (formula "2") (term "1,1,0"))
(rule "eqSymm" (formula "15") (term "0,0,0,10"))
(rule "replace_known_right" (formula "10") (term "1") (ifseqformula "14"))
(rule "concrete_or_4" (formula "10"))
(rule "inEqSimp_gtToGeq" (formula "12"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,1,0,0,0,1,1,1,1,0"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_gtToGeq" (formula "2") (term "0,1,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
(rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "12") (term "0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,1,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,0"))
(rule "mul_literals" (formula "2") (term "1,0,1,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "12"))
(rule "polySimp_mulLiterals" (formula "12") (term "0"))
(rule "polySimp_elimOne" (formula "12") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,1,0,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,1,0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_imp2or" (formula "3") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "double_not" (formula "6") (term "0,0"))
(rule "nnf_imp2or" (formula "2") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "5") (term "0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "double_not" (formula "7") (term "1,0,0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "double_not" (formula "4") (term "1,0,0"))
(rule "nnf_notAnd" (formula "3") (term "0,0"))
(rule "double_not" (formula "3") (term "1,0,0"))
(rule "nnf_notAnd" (formula "2") (term "0,0"))
(rule "double_not" (formula "2") (term "1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "double_not" (formula "8") (term "1,0,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0"))
(rule "double_not" (formula "5") (term "1,0,0"))
(rule "nnf_imp2or" (formula "5") (term "0,1,0"))
(rule "nnf_imp2or" (formula "6") (term "0,1,1,0"))
(rule "nnf_notEx" (formula "8") (term "1,1,1,1,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,1,0"))
(rule "double_not" (formula "6") (term "1,0,0,1,1,0"))
(rule "nnf_notAnd" (formula "8") (term "0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,0,1,1,1,1,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,1,1,1,1,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,1,1,1,1,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,1,1,1,1,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,1,1,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,1,1,1,1,0"))
(rule "double_not" (formula "8") (term "0,0,0,1,1,1,1,0"))
(rule "nnf_notAnd" (formula "8") (term "1,0,0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,1,0,0,1,1,1,1,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,0,1,1,1,1,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0,0,1,1,1,1,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,1,0,0,1,1,1,1,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,1,0,0,1,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,1,1,1,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,1,1,1,1,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,1,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0,0,1,1,1,1,0"))
(rule "mul_literals" (formula "8") (term "1,0,1,0,0,1,1,1,1,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "commute_or" (formula "3") (term "0,0"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "5") (term "0,0"))
(rule "commute_or" (formula "6") (term "0,0,1,1,0"))
(rule "commute_and" (formula "3") (term "1,0"))
(rule "commute_or_2" (formula "6") (term "0,1,1,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,1,1,1,1,0"))
(rule "commute_or" (formula "8") (term "0,0,0,1,1,1,1,0"))
(rule "cnf_eqv" (formula "8") (term "0,1,1,0"))
(rule "cnf_rightDist" (formula "2") (term "0"))
(rule "distr_forallAnd" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "commute_or" (formula "3") (term "0"))
(rule "cnf_rightDist" (formula "4") (term "0"))
(rule "distr_forallAnd" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "commute_or" (formula "5") (term "0"))
(rule "cnf_eqv" (formula "10") (term "1,1,1,0"))
(rule "double_not" (formula "10") (term "0,1,1,1,1,0"))
(rule "nnf_notAll" (formula "10") (term "1,0,1,1,1,0"))
(rule "nnf_notOr" (formula "10") (term "0,1,0,1,1,1,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,0,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,0,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,0,1,1,1,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,1,0,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,0,1,1,1,0"))
(rule "nnf_notOr" (formula "10") (term "0,0,1,0,1,1,1,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,1,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,1,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,1,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,1,0"))
(rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,1,1,1,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1,0,1,1,1,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,1,0,1,1,1,0"))
(rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,1,1,1,0"))
(rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,1,1,1,0"))
(rule "all_pull_out3" (formula "7") (term "0"))
(rule "shift_paren_or" (formula "7") (term "0,0"))
(rule "shift_paren_or" (formula "7") (term "0,0,0"))
(rule "commute_or_2" (formula "7") (term "0,0,0,0"))
(rule "commute_or" (formula "7") (term "0,0,0,0,0"))
(rule "all_pull_out3" (formula "8") (term "1,0"))
(rule "shift_paren_or" (formula "8") (term "0,1,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,1,0"))
(rule "methodBodyExpand" (formula "17") (term "10"))
(rule "all_pull_out3" (formula "10") (term "1,1,1,1,0"))
(rule "shift_paren_or" (formula "10") (term "0,1,1,1,1,0"))
(rule "shift_paren_or" (formula "10") (term "0,0,1,1,1,1,0"))
(rule "shift_paren_or" (formula "10") (term "0,0,0,1,1,1,1,0"))
(rule "commute_or" (formula "10") (term "0,0,0,0,1,1,1,1,0"))
(rule "ex_pull_out3" (formula "10") (term "0,1,1,1,0"))
(rule "cnf_rightDist" (formula "10") (term "0,0,1,1,1,0"))
(rule "commute_or" (formula "10") (term "1,0,0,1,1,1,0"))
(rule "cnf_rightDist" (formula "10") (term "0,0,0,1,1,1,0"))
(rule "commute_or" (formula "10") (term "1,0,0,0,1,1,1,0"))
(rule "cnf_rightDist" (formula "10") (term "0,0,0,0,1,1,1,0"))
(rule "commute_or" (formula "10") (term "0,0,0,0,0,1,1,1,0"))
(rule "commute_or" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
(rule "applyEq_or_gen2" (formula "10") (term "1,0,0,0,0,1,1,1,0"))
(rule "commute_and" (formula "10") (term "0,0,0,0,1,1,1,0"))
(rule "ex_pull_out0" (formula "10") (term "1,1,1,0"))
(rule "all_pull_out3" (formula "8") (term "0"))
(rule "shift_paren_or" (formula "8") (term "0,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,0"))
(rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
(rule "eq_or" (formula "8") (term "0,0,0,0,0"))
(rule "all_pull_out1" (formula "10") (term "0,1,1,1,0"))
(rule "ex_pull_out1" (formula "10") (term "1,1,0"))
(rule "ifElseUnfold" (formula "17") (term "10") (inst "#boolv=b"))
(rule "variableDeclaration" (formula "17") (term "10") (newnames "b"))
(rule "less_than_comparison_new" (formula "17") (term "10"))
(builtin "Update Simplification" (formula "17"))
(rule "assignment_instance_field_of_this" (formula "17") (term "10,2"))
(builtin "Update Simplification" (formula "17"))
(rule "assignment_instance_field_of_this" (formula "17") (term "10,1"))
(builtin "Update Simplification" (formula "17"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "0"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0"))
(rule "polySimp_rightDist" (formula "17") (term "1,0"))
(rule "mul_literals" (formula "17") (term "0,1,0"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
(rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "13"))
(rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
(rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
(rule "add_literals" (formula "17") (term "1,1,0,0,0"))
(rule "times_zero_1" (formula "17") (term "1,0,0,0"))
(rule "add_zero_right" (formula "17") (term "0,0,0"))
(rule "leq_literals" (formula "17") (term "0,0"))
(rule "concrete_and_2" (formula "17") (term "0"))
(rule "ifthenelse_false_for" (formula "17"))
(rule "all_pull_out1" (formula "10") (term "0,1,1,0"))
(rule "shift_paren_and" (formula "10") (term "0,0,1,1,0"))
(rule "shift_paren_and" (formula "10") (term "0,0,0,1,1,0"))
(rule "shift_paren_and" (formula "10") (term "0,0,0,0,1,1,0"))
(rule "shift_paren_and" (formula "10") (term "0,0,0,0,0,1,1,0"))
(rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
(rule "commute_and_2" (formula "10") (term "0,0,0,0,0,1,1,0"))
(rule "commute_and" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
(rule "commute_and_2" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
(rule "ex_pull_out1" (formula "10") (term "1,0"))
(rule "allLeft" (formula "6") (inst "t=self"))
(rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "16"))
(rule "concrete_or_2" (formula "6") (term "0"))
(rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "12"))
(rule "concrete_not_1" (formula "6") (term "0"))
(rule "concrete_or_2" (formula "6"))
(rule "allLeft" (formula "10") (inst "t=self"))
(rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "13"))
(rule "concrete_not_1" (formula "10") (term "1,0"))
(rule "concrete_or_4" (formula "10") (term "0"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "17"))
(rule "concrete_or_2" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "all_pull_out1" (formula "11") (term "0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,0,0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,0,0,0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,0,0,0,0,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,0,0,0,0,0,1,0"))
(rule "ex_pull_out3" (formula "11") (term "0"))
(rule "allLeft" (formula "2") (inst "t=self"))
(rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18"))
(rule "concrete_or_2" (formula "2") (term "0"))
(rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
(rule "concrete_not_1" (formula "2") (term "0"))
(rule "concrete_or_2" (formula "2"))
(rule "allLeft" (formula "4") (inst "t=self"))
(rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "14"))
(rule "concrete_not_1" (formula "4") (term "1,0"))
(rule "concrete_or_4" (formula "4") (term "0"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
(rule "concrete_or_2" (formula "4"))
(rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
(rule "inEqSimp_homoInEq0" (formula "8"))
(rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
(rule "add_literals" (formula "8") (term "1,0"))
(rule "times_zero_1" (formula "8") (term "0"))
(rule "qeq_literals" (formula "8"))
(rule "true_left" (formula "8"))
(rule "allLeft" (formula "7") (inst "t=self"))
(rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "14"))
(rule "concrete_not_1" (formula "7") (term "1,0"))
(rule "concrete_or_4" (formula "7") (term "0"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
(rule "concrete_or_2" (formula "7"))
(rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "7"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
(rule "inEqSimp_homoInEq0" (formula "7"))
(rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
(rule "add_literals" (formula "7") (term "1,0"))
(rule "times_zero_1" (formula "7") (term "0"))
(rule "qeq_literals" (formula "7"))
(rule "true_left" (formula "7"))
(rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
(rule "inEqSimp_homoInEq1" (formula "16"))
(rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
(rule "add_literals" (formula "16") (term "1,0"))
(rule "times_zero_1" (formula "16") (term "0"))
(rule "leq_literals" (formula "16"))
(rule "true_left" (formula "16"))
(rule "allLeft" (formula "6") (inst "t=self"))
(rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "14"))
(rule "concrete_not_1" (formula "6") (term "1,0"))
(rule "concrete_or_4" (formula "6") (term "0"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "19"))
(rule "concrete_or_2" (formula "6"))
(rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
(rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
(rule "leq_literals" (formula "6") (term "0"))
(rule "concrete_or_1" (formula "6"))
(rule "true_left" (formula "6"))
(rule "all_pull_out3" (formula "12") (term "0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0"))
(rule "distr_forallAnd" (formula "12") (term "0,0"))
(rule "distr_existsAnd1" (formula "12") (term "0"))
(rule "distr_forallAnd" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "commute_or_2" (formula "13") (term "0,0"))
(rule "commute_or_2" (formula "13") (term "0,0,0"))
(rule "commute_or_2" (formula "13") (term "0,0,0,0"))
(rule "commute_or_2" (formula "13") (term "0,0,0,0,0"))
(rule "shift_paren_or" (formula "13") (term "0,0,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0"))
(rule "commute_or" (formula "12") (term "0,1,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0,0"))
(rule "commute_or" (formula "12") (term "0,1,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0,0,0"))
(rule "commute_or" (formula "12") (term "0,1,0,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0,0,0,0"))
(rule "commute_or" (formula "12") (term "0,1,0,0,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0,0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0,0,0,0,0"))
(rule "shift_paren_or" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0,0,0,0,0"))
(rule "commute_or_2" (formula "12") (term "1,0,0,0,0,0,0,0,0"))
(rule "shift_paren_or" (formula "12") (term "0,1,0,0,0,0,0,0,0,0"))
(rule "cnf_rightDist" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
(rule "commute_or" (formula "12") (term "1,0,0,0,0,0,0,0,0,0"))
(rule "all_unused" (formula "12") (term "0,0"))
(rule "ifElse" (formula "21") (term "11"))
(builtin "Update Simplification" (formula "21"))
(rule "boolean_not_equal_2" (formula "21") (term "0"))
(rule "ifthenelse_false_for" (formula "21"))
(rule "elim_double_block_2" (formula "21") (term "10"))
(rule "ifUnfold" (formula "21") (term "10") (inst "#boolv=b"))
(rule "variableDeclaration" (formula "21") (term "10") (newnames "b_1"))
(rule "compound_greater_than_comparison_2" (formula "21") (term "10") (inst "#v1=j_1") (inst "#v0=j"))
(rule "variableDeclarationAssign" (formula "21") (term "10"))
(rule "variableDeclaration" (formula "21") (term "10") (newnames "j"))
(rule "methodCallWithAssignment" (formula "21") (term "10") (inst "#v0=j_2"))
(branch " Normal Execution (_rec != null)"
   (builtin "Update Simplification" (formula "21"))
   (rule "variableDeclaration" (formula "21") (term "10") (newnames "j_2"))
   (rule "only_created_object_are_referenced_non_null" (formula "17") (term "0,0,0") (ifseqformula "14") (ifseqformula "1") (ifseqformula "18"))
   (rule "methodBodyExpand" (formula "22") (term "10"))
   (rule "methodCallReturn" (formula "22") (term "10"))
   (rule "assignment_instance_field_of_this" (formula "22") (term "10"))
   (builtin "Update Simplification" (formula "22"))
   (rule "methodCallEmpty" (formula "22") (term "11"))
   (rule "blockEmpty" (formula "22") (term "11"))
   (rule "assignment_instance_field_of_this" (formula "22") (term "11"))
   (builtin "Update Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "11"))
   (rule "variableDeclaration" (formula "22") (term "11") (newnames "j_1"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "22") (term "11") (inst "#v0=v_Record"))
   (rule "variableDeclaration" (formula "22") (term "11") (newnames "v_Record"))
   (rule "assignment_array2" (formula "22") (term "11"))
   (branch " Normal Execution (highscores != null)"
      (builtin "Update Simplification" (formula "23"))
      (builtin "Update Simplification" (formula "22"))
      (rule "orRight" (formula "22"))
      (rule "orRight" (formula "22"))
      (rule "inEqSimp_ltRight" (formula "23"))
      (rule "times_zero_1" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_leqRight" (formula "23"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
      (rule "times_zero_1" (formula "2") (term "0,0"))
      (rule "add_zero_left" (formula "2") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1"))
      (rule "methodCallWithAssignment" (formula "24") (term "12") (inst "#v0=j_2"))
      (branch " Normal Execution (v_Record != null)"
         (builtin "Update Simplification" (formula "24"))
         (rule "variableDeclaration" (formula "25") (term "12") (newnames "j_3"))
         (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "19") (ifseqformula "21"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
         (rule "leq_literals" (formula "6") (term "0"))
         (rule "concrete_or_1" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "methodBodyExpand" (formula "25") (term "12"))
         (rule "methodCallReturn" (formula "25") (term "12"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "12"))
         (builtin "Update Simplification" (formula "25"))
         (rule "methodCallEmpty" (formula "25") (term "13"))
         (builtin "Update Simplification" (formula "25"))
         (rule "blockEmpty" (formula "25") (term "12"))
         (rule "assignment" (formula "25") (term "12"))
         (builtin "Update Simplification" (formula "25"))
         (rule "greater_than_comparison_new" (formula "25") (term "12"))
         (builtin "Update Simplification" (formula "25"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "10,2"))
         (builtin "Update Simplification" (formula "25"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "10,1"))
         (builtin "Update Simplification" (formula "25"))
         (rule "inEqSimp_gtToGeq" (formula "25") (term "0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "0,0"))
         (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "20"))
         (rule "ifthenelse_true_for" (formula "25"))
         (rule "ifSplit" (formula "25"))
         (branch " if b_1 true"
            (builtin "Update Simplification" (formula "26"))
            (builtin "Update Simplification" (formula "1"))
            (rule "boolean_equal" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "25") (term "10"))
            (rule "variableDeclaration" (formula "25") (term "10") (newnames "old"))
            (rule "assignment_array2" (formula "25") (term "10"))
            (branch " Normal Execution (highscores != null)"
               (builtin "Update Simplification" (formula "26"))
               (builtin "Update Simplification" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "orRight" (formula "25"))
               (rule "inEqSimp_ltRight" (formula "26"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "25"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "assignment_to_reference_array_component_no_rtsj" (formula "25") (term "11"))
               (branch " Normal Execution (highscores != null)"
                  (builtin "Update Simplification" (formula "26"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "array_store_static_analyse" (formula "1") (ifseqformula "22"))
                  (rule "true_left" (formula "1"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "25") (term "14") (inst "#v0=j"))
                  (rule "variableDeclaration" (formula "25") (term "14") (newnames "j_4"))
                  (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "20") (term "0,0") (ifseqformula "19") (ifseqformula "3") (ifseqformula "24"))
                  (rule "methodBodyExpand" (formula "26") (term "14"))
                  (rule "variableDeclarationAssign" (formula "26") (term "14"))
                  (rule "variableDeclaration" (formula "26") (term "14") (newnames "minIdx"))
                  (rule "assignment" (formula "26") (term "14"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "variableDeclarationAssign" (formula "26") (term "15"))
                  (rule "variableDeclaration" (formula "26") (term "15") (newnames "idx"))
                  (rule "assignment" (formula "26") (term "15"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "whileInvDiamondDec2" (formula "26") (newnames "minIdx_0,idx_0,minIdx_1,idx_1,anon_0,j_5") (inst "variant=(jint)(javaSubInt(self.size@(maze.Highscore), idx))") (inst "inv=  (idx >  (jint)(0) <-> minIdx >= (jint)(0))
& (  idx >= (jint)(0)
   & (  idx <= self.size@(maze.Highscore)
      & (  minIdx >= (jint)-((jint)(1))
         & (  minIdx <  idx
            & \\forall jint i; 
                (     i >= (jint)(0)
                    & i <  idx
                    & inInt(i)
                 ->    self.highscores@(maze.Highscore)[minIdx].score@(maze.Record)
                    <= self.highscores@(maze.Highscore)[i].score@(maze.Record))))))
& inReachableState") (inst "#v2=j_5") (inst "#v1=b") (inst "#modifies={minIdx,idx}"))
                  (branch " Invariant Initially Valid"
                     (builtin "Update Simplification" (formula "26"))
                     (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,0"))
                     (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,0,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,0,0,1,0,1,1,1,1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,1"))
                     (rule "castDelInt" (formula "26") (term "1,0,0,0,0"))
                     (rule "greater_literals" (formula "26") (term "0,0,0,0"))
                     (rule "concrete_eq_2" (formula "26") (term "0,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,0,1,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "26") (term "1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,0,1"))
                     (rule "castDelInt" (formula "26") (term "1,0,0,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "26") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "26") (term "0,0"))
                     (rule "castDelInt" (formula "26") (term "1,1,0,0,1,1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,0,1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,0,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,0,0,0,1,1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,1,1,0,0"))
                     (rule "less_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "concrete_and_1" (formula "26") (term "1,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,0,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "0,1,0,1,0,0"))
                     (rule "neg_literal" (formula "26") (term "1,0,1,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
                     (rule "concrete_and_1" (formula "26") (term "1,0,0"))
                     (rule "translateJavaSubInt" (formula "26") (term "0,1"))
                     (rule "eqSymm" (formula "26") (term "0,0,0,1,0,1,0,0"))
                     (rule "castDelInt" (formula "26") (term "1,2,0,0,1,0,1,0,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "0,1"))
                     (rule "times_zero_2" (formula "26") (term "1,0,1"))
                     (rule "add_zero_right" (formula "26") (term "0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1,0,0"))
                     (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "18"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "26") (term "0,0,1,1,0,1,0,0") (ifseqformula "2"))
                     (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,1,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0,0,1,1,0,1,0,0"))
                     (rule "leq_literals" (formula "26") (term "0,0,0,1,1,0,1,0,0"))
                     (rule "concrete_and_2" (formula "26") (term "0,0,1,1,0,1,0,0"))
                     (rule "ifthenelse_false" (formula "26") (term "0,1,1,0,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "26") (term "1") (ifseqformula "4"))
                     (rule "leq_literals" (formula "26") (term "0,1"))
                     (rule "concrete_or_1" (formula "26") (term "1"))
                     (rule "concrete_and_3" (formula "26"))
                     (rule "inEqSimp_subsumption1" (formula "26") (term "0,0") (ifseqformula "4"))
                     (rule "leq_literals" (formula "26") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "26") (term "0,0"))
                     (rule "concrete_and_1" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,1,0,0,0"))
                     (rule "neq_or_2" (formula "26") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "26") (term "0,0"))
                     (rule "all_unused" (formula "26") (term "0"))
                     (rule "concrete_and_1" (formula "26"))
                     (rule "inReachableStateRewrite" (formula "26") (ifseqformula "3"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "eq_imp" (formula "26") (term "0,0,1"))
                     (rule "orRight" (formula "26"))
                     (rule "elim_forall12" (formula "27") (term "0,1"))
                     (rule "eqClose" (formula "27") (term "1,0,0,0,0,1,0,1,0,1"))
                     (rule "eqClose" (formula "27") (term "1,0,0,1,1,0,1,0,1"))
                     (rule "eqClose" (formula "27") (term "1,0,1,1,1,0,1"))
                     (rule "concrete_and_3" (formula "27") (term "0,0,0,0,1,0,1,0,1"))
                     (rule "concrete_and_3" (formula "27") (term "0,0,1,1,0,1,0,1"))
                     (rule "concrete_and_3" (formula "27") (term "0,1,1,1,0,1"))
                     (rule "elim_forall8" (formula "27") (term "1"))
                     (rule "eqClose" (formula "27") (term "0,0,0,0,1,0,1"))
                     (rule "eqClose" (formula "27") (term "0,0,1,1,0,1"))
                     (rule "eqClose" (formula "27") (term "0,1,1,1"))
                     (rule "ifthenelse_true" (formula "27") (term "0,0,0,1,0,1"))
                     (rule "ifthenelse_true" (formula "27") (term "0,1,1,0,1"))
                     (rule "ifthenelse_true" (formula "27") (term "1,1,1"))
                     (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "19"))
                     (rule "concrete_impl_1" (formula "27") (term "0,1"))
                     (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "17"))
                     (rule "concrete_or_1" (formula "27") (term "0,1"))
                     (rule "concrete_and_1" (formula "27") (term "1"))
                     (rule "array_store_static_analyse" (formula "27") (term "1") (ifseqformula "22"))
                     (rule "concrete_and_3" (formula "27"))
                     (rule "allRight" (formula "27") (inst "sk=o_0"))
                     (rule "closeTrue" (formula "27"))
                  )
                  (branch " Body Preserves Invariant and Decreases Variant"
                     (builtin "Update Simplification" (formula "26"))
                     (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,17,1,1,1"))
                     (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,1,0,0,0,1"))
                     (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,1,0,0,1,1,0,17,1,1,1"))
                     (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,1,0,0,0,1"))
                     (rule "concrete_impl_1" (formula "26"))
                     (rule "impRight" (formula "26"))
                     (rule "impRight" (formula "27"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "4"))
                     (rule "andLeft" (formula "5"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "7"))
                     (rule "variableDeclarationAssign" (formula "37") (term "17"))
                     (rule "variableDeclarationAssign" (formula "1") (term "4"))
                     (rule "variableDeclaration" (formula "37") (term "17") (newnames "exc_1"))
                     (rule "variableDeclaration" (formula "1") (term "4") (newnames "b_4"))
                     (rule "assignment_instance_field_of_this" (formula "37") (term "17"))
                     (builtin "Update Simplification" (formula "37"))
                     (rule "variableDeclaration" (formula "37") (term "18") (newnames "thrownExc"))
                     (rule "blockThrow" (formula "37") (term "1,0,0,18"))
                     (rule "methodCallParamThrow" (formula "37") (term "1,0,0,18"))
                     (rule "blockThrow" (formula "37") (term "1,0,0,18"))
                     (rule "blockThrow" (formula "37") (term "1,0,0,18"))
                     (builtin "Update Simplification" (formula "37"))
                     (rule "methodCallParamThrow" (formula "37") (term "1,0,0,17"))
                     (builtin "Update Simplification" (formula "37"))
                     (rule "castDelInt" (formula "11") (term "0"))
                     (rule "castDelInt" (formula "11") (term "1,0,1"))
                     (rule "castDelInt" (formula "10") (term "0"))
                     (rule "castDelInt" (formula "3") (term "1,0"))
                     (rule "castDelInt" (formula "3") (term "1,1"))
                     (rule "castDelInt" (formula "4") (term "1"))
                     (rule "castDelInt" (formula "6") (term "1"))
                     (rule "castDelInt" (formula "8") (term "1,0,0,0"))
                     (rule "castDelInt" (formula "37") (term "3"))
                     (rule "castDelInt" (formula "37") (term "0,0,1,0,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "neg_literal" (formula "37") (term "0,1,0,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "1,0,1,0,1,0,0,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "1,1,0,0,1,0,0,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "0,1,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "1,0,0,0,1,0,0,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "1,0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "castDelInt" (formula "37") (term "0,1,0,1,1,0,16"))
                     (rule "castDelInt" (formula "11") (term "1"))
                     (rule "castDelInt" (formula "6") (term "0,1"))
                     (rule "neg_literal" (formula "6") (term "1"))
                     (rule "castDelInt" (formula "37") (term "1,0,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "eqSymm" (formula "8") (term "0,0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "11") (term "0"))
                     (rule "translateJavaSubInt" (formula "10") (term "0"))
                     (rule "translateJavaSubInt" (formula "37") (term "3"))
                     (rule "translateJavaSubInt" (formula "37") (term "0,1,1,1,0,16"))
                     (rule "translateJavaSubInt" (formula "37") (term "0,1,0,1,1,0,16"))
                     (rule "translateJavaSubInt" (formula "11") (term "1"))
                     (rule "polySimp_elimSub" (formula "11") (term "0"))
                     (rule "polySimp_elimSub" (formula "10") (term "0"))
                     (rule "polySimp_elimSub" (formula "37") (term "3"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "polySimp_elimSub" (formula "37") (term "0,1,1,1,0,16"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "37") (term "0,1,0,1,1,0,16"))
                     (rule "polySimp_elimSub" (formula "11") (term "1"))
                     (rule "times_zero_2" (formula "11") (term "1,1"))
                     (rule "add_zero_right" (formula "11") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_gtToGeq" (formula "3") (term "0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "37") (term "0,0,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,1,0,0,1,1,0,16"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_commuteLeq" (formula "5"))
                     (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,1,0,16"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_addComm0" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "10") (term "0"))
                     (rule "polySimp_addComm0" (formula "37") (term "3"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,1,1,1,0,16"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0,1,1,0,16"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,1,0,16"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,1,0,16"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "applyEq" (formula "36") (term "1,3") (ifseqformula "28"))
                     (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "28"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0"))
                     (rule "mul_literals" (formula "3") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,1,0,16"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,1,0,16"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,1,1,0,16"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0,1,1,0,16"))
                     (rule "mul_literals" (formula "36") (term "0,0,1,1,0,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                     (rule "mul_literals" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "35") (term "0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inReachableStateExpand" (formula "9"))
                     (builtin "Update Simplification" (formula "9"))
                     (rule "eq_imp" (formula "9") (term "0,0,1"))
                     (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "12"))
                     (rule "concrete_impl_1" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "elim_forall12" (formula "10") (term "0"))
                     (rule "eqClose" (formula "10") (term "1,0,0,0,0,1,0,1,0"))
                     (rule "eqClose" (formula "10") (term "1,0,0,1,1,0,1,0"))
                     (rule "eqClose" (formula "10") (term "1,0,1,1,1,0"))
                     (rule "concrete_and_3" (formula "10") (term "0,0,0,0,1,0,1,0"))
                     (rule "concrete_and_3" (formula "10") (term "0,0,1,1,0,1,0"))
                     (rule "concrete_and_3" (formula "10") (term "0,1,1,1,0"))
                     (rule "elim_forall8" (formula "10"))
                     (rule "eqClose" (formula "10") (term "0,1,1"))
                     (rule "eqClose" (formula "10") (term "0,0,1,1,0"))
                     (rule "eqClose" (formula "10") (term "0,0,0,0,1,0"))
                     (rule "ifthenelse_true" (formula "10") (term "1,1"))
                     (rule "ifthenelse_true" (formula "10") (term "0,1,1,0"))
                     (rule "ifthenelse_true" (formula "10") (term "0,0,0,1,0"))
                     (rule "andLeft" (formula "10"))
                     (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "28"))
                     (rule "concrete_or_1" (formula "10") (term "1"))
                     (rule "concrete_impl_4" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "array_store_static_analyse" (formula "10") (ifseqformula "32"))
                     (rule "true_left" (formula "10"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,16"))
                     (rule "less_than_comparison_new" (formula "1") (term "4"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "assignment_instance_field_of_this" (formula "1") (term "3,1"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "methodCallEmpty" (formula "1") (term "4,1"))
                     (rule "assignment_instance_field_of_this" (formula "1") (term "3,2"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "methodCallEmpty" (formula "1") (term "4,2"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "all_unused" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "equiv_left" (formula "3"))
                     (branch " Case 1"
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "4"))
                        (rule "leq_literals" (formula "7") (term "0"))
                        (rule "concrete_or_1" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "4") (term "0,0"))
                        (rule "add_zero_left" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "ifthenelse_split" (formula "7") (term "0,1,1,0"))
                        (branch " self.min = minIdx_0 TRUE"
                           (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "34") (term "6") (ifseqformula "7"))
                           (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "9"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "applyEq" (formula "2") (term "3") (ifseqformula "7"))
                           (rule "applyEq" (formula "8") (term "1,0,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "1") (term "2,1") (ifseqformula "7"))
                           (rule "applyEq" (formula "1") (term "2,2") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "mul_literals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "ifUnfold" (formula "33") (term "16") (inst "#boolv=b"))
                           (rule "variableDeclaration" (formula "33") (term "16") (newnames "b_13"))
                           (rule "less_than_comparison_new" (formula "33") (term "16"))
                           (builtin "Update Simplification" (formula "33"))
                           (rule "assignment_instance_field_of_this" (formula "33") (term "16,1"))
                           (builtin "Update Simplification" (formula "33"))
                           (rule "assignment_instance_field_of_this" (formula "33") (term "16,2"))
                           (builtin "Update Simplification" (formula "33"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                           (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "25"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                           (rule "ifthenelse_split_for" (formula "1"))
                           (branch " self.capacity >= 1 + idx_0 TRUE"
                              (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                              (rule "ifthenelse_true_for" (formula "34"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "emptyModality" (formula "2") (term "4"))
                              (builtin "Update Simplification" (formula "2"))
                              (rule "boolean_equal" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "allLeft" (formula "7") (inst "t=minIdx_0"))
                              (rule "eqClose" (formula "7") (term "0,0,0,1"))
                              (rule "ifthenelse_true" (formula "7") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "1,0,1"))
                              (rule "times_zero_1" (formula "7") (term "0,1"))
                              (rule "leq_literals" (formula "7") (term "1"))
                              (rule "concrete_or_3" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "ifSplit" (formula "32"))
                              (branch " if b_13 true"
                                 (builtin "Update Simplification" (formula "33"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "boolean_equal" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifUnfold" (formula "32") (term "16") (inst "#boolv=b"))
                                 (rule "variableDeclaration" (formula "32") (term "16") (newnames "b_14"))
                                 (rule "compound_assignment_5" (formula "32") (term "16"))
                                 (rule "ifElseUnfold" (formula "32") (term "16") (inst "#boolv=b_15"))
                                 (rule "variableDeclaration" (formula "32") (term "16") (newnames "b_15"))
                                 (rule "equality_comparison_new" (formula "32") (term "16"))
                                 (builtin "Update Simplification" (formula "32"))
                                 (rule "assignment_instance_field_of_this" (formula "32") (term "16,1"))
                                 (builtin "Update Simplification" (formula "32"))
                                 (rule "assignment_instance_field_of_this" (formula "32") (term "16,2"))
                                 (builtin "Update Simplification" (formula "32"))
                                 (rule "inEqSimp_contradEq7" (formula "32") (term "0,0") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "32") (term "0,0"))
                                 (rule "concrete_not_2" (formula "32") (term "0"))
                                 (rule "ifthenelse_true_for" (formula "32"))
                                 (rule "ifElse" (formula "32") (term "17"))
                                 (builtin "Update Simplification" (formula "32"))
                                 (rule "boolean_not_equal_2" (formula "32") (term "0"))
                                 (rule "ifthenelse_false_for" (formula "32"))
                                 (rule "compound_less_than_comparison_2" (formula "32") (term "16") (inst "#v1=j_1") (inst "#v0=j"))
                                 (rule "variableDeclarationAssign" (formula "32") (term "16"))
                                 (rule "variableDeclaration" (formula "32") (term "16") (newnames "j_8"))
                                 (rule "methodCallWithAssignmentUnfoldTarget" (formula "32") (term "16") (inst "#v0=v_Record"))
                                 (rule "variableDeclaration" (formula "32") (term "16") (newnames "v_Record_2"))
                                 (rule "assignment_array2" (formula "32") (term "16"))
                                 (branch " Normal Execution (highscores != null)"
                                    (builtin "Update Simplification" (formula "33"))
                                    (builtin "Update Simplification" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "orRight" (formula "32"))
                                    (rule "eqSymm" (formula "34") (term "0,5"))
                                    (rule "inEqSimp_ltRight" (formula "33"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "33") (term "0,5") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,5"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,5"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,0,5"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,5"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,5"))
                                    (rule "qeq_literals" (formula "33") (term "0,0,5"))
                                    (rule "concrete_and_2" (formula "33") (term "0,5"))
                                    (rule "ifthenelse_false" (formula "33") (term "5"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "methodCallWithAssignment" (formula "32") (term "17") (inst "#v0=j_9"))
                                    (branch " Normal Execution (v_Record_2 != null)"
                                       (builtin "Update Simplification" (formula "32"))
                                       (rule "variableDeclaration" (formula "33") (term "17") (newnames "j_14"))
                                       (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "31") (term "0") (ifseqformula "25") (ifseqformula "9") (ifseqformula "31"))
                                       (rule "methodBodyExpand" (formula "33") (term "17"))
                                       (rule "methodCallReturn" (formula "33") (term "17"))
                                       (rule "assignment_instance_field_of_this" (formula "33") (term "17"))
                                       (builtin "Update Simplification" (formula "33"))
                                       (rule "methodCallEmpty" (formula "33") (term "18"))
                                       (builtin "Update Simplification" (formula "33"))
                                       (rule "blockEmpty" (formula "33") (term "17"))
                                       (rule "assignment_instance_field_of_this" (formula "33") (term "17"))
                                       (builtin "Update Simplification" (formula "33"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "17"))
                                       (rule "variableDeclaration" (formula "33") (term "17") (newnames "j_15"))
                                       (rule "methodCallWithAssignmentUnfoldTarget" (formula "33") (term "17") (inst "#v0=v_Record"))
                                       (rule "variableDeclaration" (formula "33") (term "17") (newnames "v_Record_4"))
                                       (rule "assignment_array2" (formula "33") (term "17"))
                                       (branch " Normal Execution (highscores != null)"
                                          (builtin "Update Simplification" (formula "34"))
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "orRight" (formula "33"))
                                          (rule "inEqSimp_ltRight" (formula "34"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "33"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "methodCallWithAssignment" (formula "33") (term "18") (inst "#v0=j_16"))
                                          (branch " Normal Execution (v_Record_4 != null)"
                                             (builtin "Update Simplification" (formula "33"))
                                             (rule "variableDeclaration" (formula "33") (term "18") (newnames "j_16"))
                                             (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "32") (term "0") (ifseqformula "25") (ifseqformula "9") (ifseqformula "32"))
                                             (rule "methodBodyExpand" (formula "34") (term "18"))
                                             (rule "methodCallReturn" (formula "34") (term "18"))
                                             (rule "assignment_instance_field_of_this" (formula "34") (term "18"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "methodCallEmpty" (formula "34") (term "19"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "blockEmpty" (formula "34") (term "18"))
                                             (rule "assignment_instance_field_of_this" (formula "34") (term "18"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "less_than_comparison_new" (formula "34") (term "18"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "assignment_instance_field_of_this" (formula "34") (term "16,1"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "assignment_instance_field_of_this" (formula "34") (term "16,2"))
                                             (builtin "Update Simplification" (formula "34"))
                                             (rule "blockEmpty" (formula "34") (term "17,2"))
                                             (rule "blockEmpty" (formula "34") (term "17,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0"))
                                             (rule "ifthenelse_split_for" (formula "34"))
                                             (branch " self.highscores[idx_0].score <= -1 + rec.score TRUE"
                                                (rule "if" (formula "35") (term "17"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "boolean_equal" (formula "35") (term "0"))
                                                (rule "ifthenelse_true_for" (formula "35"))
                                                (rule "assignment_instance_field_of_this" (formula "35") (term "16"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "blockEmpty" (formula "35") (term "16"))
                                                (rule "postincrement" (formula "35") (term "16"))
                                                (rule "compound_int_cast_expression" (formula "35") (term "16") (inst "#v=j"))
                                                (rule "variableDeclarationAssign" (formula "35") (term "16"))
                                                (rule "variableDeclaration" (formula "35") (term "16") (newnames "j_17"))
                                                (rule "remove_parentheses_right" (formula "35") (term "16"))
                                                (rule "assignmentAdditionInt" (formula "35") (term "16"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "translateJavaAddInt" (formula "35") (term "3"))
                                                (rule "polySimp_addComm0" (formula "35") (term "3"))
                                                (rule "widening_identity_cast_5" (formula "35") (term "17"))
                                                (rule "assignment" (formula "35") (term "17"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "tryEmpty" (formula "35") (term "16"))
                                                (rule "methodCallEmpty" (formula "35") (term "16"))
                                                (rule "castDelInt" (formula "35") (term "2"))
                                                (rule "emptyModality" (formula "35") (term "16"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "boolean_not_equal_2" (formula "35") (term "0,0"))
                                                (rule "boolean_not_equal_2" (formula "35") (term "0,0,1"))
                                                (rule "concrete_impl_2" (formula "35") (term "0"))
                                                (rule "concrete_not_2" (formula "35") (term "0,1"))
                                                (rule "concrete_and_1" (formula "35"))
                                                (rule "concrete_impl_1" (formula "35"))
                                                (rule "castDelInt" (formula "35") (term "1,1,1,0"))
                                                (rule "castDelInt" (formula "35") (term "1,0,1,1,0"))
                                                (rule "castDelInt" (formula "35") (term "0,0,0,0,1,0,0"))
                                                (rule "castDelInt" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                (rule "castDelInt" (formula "35") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                (rule "castDelInt" (formula "35") (term "1,0,1,1,0,1,0,0"))
                                                (rule "castDelInt" (formula "35") (term "0,0,1,0,1,0,0"))
                                                (rule "castDelInt" (formula "35") (term "1,1"))
                                                (rule "eqSymm" (formula "35") (term "0,0,1,1,0,1,1,1,1,1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "4"))
                                                (rule "concrete_and_1" (formula "35") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,1,0,1,1,1,1,0,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "1,0,1,1,0"))
                                                (rule "times_zero_1" (formula "35") (term "0,1,1,0"))
                                                (rule "add_zero_left" (formula "35") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1,1,1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,1,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,0,0,1,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "0,0,1,1,1,1,0,0,0"))
                                                (rule "qeq_literals" (formula "35") (term "0,1,1,1,1,0,0,0"))
                                                (rule "concrete_and_1" (formula "35") (term "1,1,1,1,0,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "26"))
                                                (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                (rule "concrete_and_3" (formula "35"))
                                                (rule "applyEq" (formula "35") (term "0,0,1,1,0,0") (ifseqformula "26"))
                                                (rule "replace_known_left" (formula "35") (term "0,1,1,0,0") (ifseqformula "3"))
                                                (rule "concrete_and_1" (formula "35") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1"))
                                                (rule "add_literals" (formula "35") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "35") (term "0,1"))
                                                (rule "qeq_literals" (formula "35") (term "1"))
                                                (rule "concrete_and_3" (formula "35"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "1,0,1,0"))
                                                (rule "inEqSimp_invertInEq0" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                                                (rule "times_zero_2" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0"))
                                                (rule "eq_eq" (formula "35") (term "0,0"))
                                                (rule "concrete_and_1" (formula "35") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "35") (term "0,0,1,1,0,1,1,0") (ifseqformula "7"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,1,1,0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,1,0,1,1,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,1,1,0,1,1,0"))
                                                (rule "qeq_literals" (formula "35") (term "0,0,0,1,1,0,1,1,0"))
                                                (rule "concrete_and_2" (formula "35") (term "0,0,1,1,0,1,1,0"))
                                                (rule "ifthenelse_false" (formula "35") (term "0,1,1,0,1,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                (rule "concrete_and_1" (formula "35") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                (rule "concrete_and_1" (formula "35") (term "0"))
                                                (rule "inReachableStateRewrite" (formula "35") (term "1") (ifseqformula "11"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "eq_imp" (formula "35") (term "0,0,1,1"))
                                                (rule "elim_forall12" (formula "35") (term "0,1,1,1"))
                                                (rule "eqClose" (formula "35") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                (rule "eqClose" (formula "35") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                (rule "eqClose" (formula "35") (term "1,0,1,1,1,0,1,1,1"))
                                                (rule "concrete_and_3" (formula "35") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                (rule "concrete_and_3" (formula "35") (term "0,0,1,1,0,1,0,1,1,1"))
                                                (rule "concrete_and_3" (formula "35") (term "0,1,1,1,0,1,1,1"))
                                                (rule "elim_forall8" (formula "35") (term "1,1,1"))
                                                (rule "eqClose" (formula "35") (term "0,1,1,1,1,1"))
                                                (rule "eqClose" (formula "35") (term "0,0,1,1,0,1,1,1"))
                                                (rule "eqClose" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                                                (rule "ifthenelse_true" (formula "35") (term "1,1,1,1,1"))
                                                (rule "ifthenelse_true" (formula "35") (term "0,1,1,0,1,1,1"))
                                                (rule "ifthenelse_true" (formula "35") (term "0,0,0,1,0,1,1,1"))
                                                (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "27"))
                                                (rule "concrete_impl_1" (formula "35") (term "0,1,1,1"))
                                                (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "25"))
                                                (rule "concrete_or_1" (formula "35") (term "0,1,1,1"))
                                                (rule "concrete_and_1" (formula "35") (term "1,1,1"))
                                                (rule "array_store_static_analyse" (formula "35") (term "1,1,1") (ifseqformula "30"))
                                                (rule "concrete_and_3" (formula "35") (term "1,1"))
                                                (rule "all_unused" (formula "35") (term "1,1"))
                                                (rule "concrete_or_3" (formula "35") (term "1"))
                                                (rule "concrete_and_3" (formula "35"))
                                                (rule "allRight" (formula "35") (inst "sk=i_8"))
                                                (rule "orRight" (formula "35"))
                                                (rule "orRight" (formula "35"))
                                                (rule "eqSymm" (formula "37") (term "0,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "36"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                (branch " minIdx_0 = i_8 TRUE"
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "8") (term "3") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                   (rule "concrete_or_1" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch " minIdx_0 = i_8 FALSE"
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "allLeft" (formula "23") (inst "t=self"))
                                                   (rule "replace_known_right" (formula "23") (term "1,0,0,0,0") (ifseqformula "37"))
                                                   (rule "concrete_or_4" (formula "23") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "23") (term "0,1,0,0,0") (ifseqformula "29"))
                                                   (rule "concrete_not_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "31"))
                                                   (rule "allLeft" (formula "13") (inst "t=i_8"))
                                                   (rule "eqSymm" (formula "13") (term "0,0,0,1"))
                                                   (rule "replace_known_right" (formula "13") (term "0,0,0,1") (ifseqformula "36"))
                                                   (rule "ifthenelse_false" (formula "13") (term "0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "13") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "13") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "1"))
                                                   (rule "concrete_or_4" (formula "13"))
                                                   (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "13"))
                                                   (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "14"))
                                                   (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                   (rule "add_literals" (formula "14") (term "1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "0"))
                                                   (rule "qeq_literals" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "0"))
                                                   (rule "leq_literals" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEqRigid" (formula "40") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " self.highscores[idx_0].score <= -1 + rec.score FALSE"
                                                (rule "inEqSimp_leqRight" (formula "34"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "ifSplit" (formula "35"))
                                                (branch " if b_14 true"
                                                   (builtin "Update Simplification" (formula "36"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "boolean_not_equal_2" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch " if b_14 false"
                                                   (rule "false_to_not_true" (formula "1") (term "17"))
                                                   (builtin "Update Simplification" (formula "36"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "boolean_not_equal_2" (formula "1") (term "0"))
                                                   (rule "concrete_not_2" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "postincrement" (formula "35") (term "16"))
                                                   (rule "compound_int_cast_expression" (formula "35") (term "16") (inst "#v=j"))
                                                   (rule "variableDeclarationAssign" (formula "35") (term "16"))
                                                   (rule "variableDeclaration" (formula "35") (term "16") (newnames "j_18"))
                                                   (rule "remove_parentheses_right" (formula "35") (term "16"))
                                                   (rule "assignmentAdditionInt" (formula "35") (term "16"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "translateJavaAddInt" (formula "35") (term "3"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "3"))
                                                   (rule "widening_identity_cast_5" (formula "35") (term "17"))
                                                   (rule "assignment_instance_field_of_this" (formula "35") (term "17"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "tryEmpty" (formula "35") (term "16"))
                                                   (rule "methodCallEmpty" (formula "35") (term "16"))
                                                   (rule "castDelInt" (formula "35") (term "2"))
                                                   (rule "emptyModality" (formula "35") (term "16"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "boolean_not_equal_2" (formula "35") (term "0,0"))
                                                   (rule "boolean_not_equal_2" (formula "35") (term "0,0,1"))
                                                   (rule "concrete_impl_2" (formula "35") (term "0"))
                                                   (rule "concrete_not_2" (formula "35") (term "0,1"))
                                                   (rule "concrete_and_1" (formula "35"))
                                                   (rule "concrete_impl_1" (formula "35"))
                                                   (rule "castDelInt" (formula "35") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                   (rule "castDelInt" (formula "35") (term "0,0,1,0,1,0,0"))
                                                   (rule "castDelInt" (formula "35") (term "1,0,1,1,0,1,0,0"))
                                                   (rule "castDelInt" (formula "35") (term "1,1"))
                                                   (rule "castDelInt" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "castDelInt" (formula "35") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                   (rule "castDelInt" (formula "35") (term "0,0,0,0,1,0,0"))
                                                   (rule "castDelInt" (formula "35") (term "1,1,1,0"))
                                                   (rule "replace_known_left" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "6"))
                                                   (rule "concrete_eq_3" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "concrete_and_1" (formula "35") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,1,1,1,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,1,0,1,1,1,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,0,1,1,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "26"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "35") (term "1,0"))
                                                   (rule "concrete_and_3" (formula "35") (term "0"))
                                                   (rule "applyEq" (formula "35") (term "0,1") (ifseqformula "26"))
                                                   (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                   (rule "concrete_and_3" (formula "35"))
                                                   (rule "applyEq" (formula "35") (term "0,0,1,1,0") (ifseqformula "26"))
                                                   (rule "replace_known_left" (formula "35") (term "0,1,1,0") (ifseqformula "3"))
                                                   (rule "concrete_and_1" (formula "35") (term "1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,1,0"))
                                                   (rule "inEqSimp_invertInEq0" (formula "35") (term "0,0"))
                                                   (rule "times_zero_2" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                                   (rule "inEqSimp_subsumption0" (formula "35") (term "0,1,1,1,0") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,1,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,1,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,1,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,1,1,1,0"))
                                                   (rule "qeq_literals" (formula "35") (term "0,0,1,1,1,0"))
                                                   (rule "concrete_or_1" (formula "35") (term "0,1,1,1,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "1,1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,1,0") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "concrete_or_1" (formula "35") (term "0,1,1,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "35") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "35") (term "0,0,1,0"))
                                                   (rule "concrete_or_1" (formula "35") (term "0,1,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "35") (term "0,0") (ifseqformula "5"))
                                                   (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                   (rule "concrete_or_1" (formula "35") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "35") (term "0"))
                                                   (rule "inReachableStateRewrite" (formula "35") (term "1") (ifseqformula "11"))
                                                   (builtin "Update Simplification" (formula "35"))
                                                   (rule "eq_imp" (formula "35") (term "0,0,1,1"))
                                                   (rule "elim_forall12" (formula "35") (term "0,1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "1,0,1,1,1,0,1,1,1"))
                                                   (rule "concrete_and_3" (formula "35") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                   (rule "concrete_and_3" (formula "35") (term "0,0,1,1,0,1,0,1,1,1"))
                                                   (rule "concrete_and_3" (formula "35") (term "0,1,1,1,0,1,1,1"))
                                                   (rule "elim_forall8" (formula "35") (term "1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "0,0,1,1,0,1,1,1"))
                                                   (rule "eqClose" (formula "35") (term "0,1,1,1,1,1"))
                                                   (rule "ifthenelse_true" (formula "35") (term "0,0,0,1,0,1,1,1"))
                                                   (rule "ifthenelse_true" (formula "35") (term "0,1,1,0,1,1,1"))
                                                   (rule "ifthenelse_true" (formula "35") (term "1,1,1,1,1"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "27"))
                                                   (rule "concrete_impl_1" (formula "35") (term "0,1,1,1"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,1,1,1") (ifseqformula "25"))
                                                   (rule "concrete_or_1" (formula "35") (term "0,1,1,1"))
                                                   (rule "concrete_and_1" (formula "35") (term "1,1,1"))
                                                   (rule "array_store_static_analyse" (formula "35") (term "1,1,1") (ifseqformula "30"))
                                                   (rule "concrete_and_3" (formula "35") (term "1,1"))
                                                   (rule "all_unused" (formula "35") (term "1,1"))
                                                   (rule "concrete_or_3" (formula "35") (term "1"))
                                                   (rule "concrete_and_3" (formula "35"))
                                                   (rule "allRight" (formula "35") (inst "sk=i_5"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "orRight" (formula "35"))
                                                   (rule "eqSymm" (formula "37") (term "0,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "35"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "36"))
                                                   (rule "inEqSimp_geqRight" (formula "37"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0,0"))
                                                   (branch " minIdx_0 = i_5 TRUE"
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "qeq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch " minIdx_0 = i_5 FALSE"
                                                      (rule "allLeft" (formula "12") (inst "t=i_5"))
                                                      (rule "eqSymm" (formula "12") (term "0,0,0,1"))
                                                      (rule "replace_known_right" (formula "12") (term "0,0,0,1") (ifseqformula "34"))
                                                      (rule "ifthenelse_false" (formula "12") (term "0,0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "12") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "12") (term "1"))
                                                      (rule "concrete_or_4" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "12") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "12") (term "0"))
                                                      (rule "concrete_or_2" (formula "12"))
                                                      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "12"))
                                                      (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13"))
                                                      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "0"))
                                                      (rule "qeq_literals" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0"))
                                                      (rule "qeq_literals" (formula "33") (term "0"))
                                                      (rule "concrete_and_2" (formula "33"))
                                                      (rule "false_right" (formula "33"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (rule "concrete_or_1" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch " Null Reference (v_Record_4 = null)"
                                             (builtin "Update Simplification" (formula "34"))
                                             (builtin "Update Simplification" (formula "1"))
                                             (rule "close" (formula "31") (ifseqformula "1"))
                                          )
                                       )
                                       (branch " Null Reference (highscores = null)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "close" (formula "29") (ifseqformula "1"))
                                       )
                                       (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "blockThrow" (formula "34") (term "17"))
                                          (builtin "Update Simplification" (formula "34"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                          (rule "concrete_and_2" (formula "1") (term "1"))
                                          (rule "concrete_or_4" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                    )
                                    (branch " Null Reference (v_Record_2 = null)"
                                       (builtin "Update Simplification" (formula "33"))
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "blockThrow" (formula "33") (term "16"))
                                       (rule "allLeft" (formula "18") (inst "t=self"))
                                       (rule "replace_known_right" (formula "18") (term "1,0,0,0,0") (ifseqformula "31"))
                                       (rule "concrete_or_4" (formula "18") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "24"))
                                       (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                       (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "26"))
                                       (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "28") (term "0,0") (ifseqformula "27") (ifseqformula "10") (ifseqformula "33"))
                                       (rule "allLeft" (formula "18") (inst "t=idx_0"))
                                       (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "18") (term "1"))
                                       (rule "concrete_or_4" (formula "18"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (rule "concrete_and_2" (formula "18") (term "0"))
                                       (rule "concrete_or_2" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch " Null Reference (highscores = null)"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "close" (formula "29") (ifseqformula "1"))
                                 )
                                 (branch " Index Out of Bounds (highscores != null, but idx Out of Bounds!)"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "blockThrow" (formula "33") (term "16"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (rule "concrete_and_2" (formula "1") (term "0"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch " if b_13 false"
                                 (rule "false_to_not_true" (formula "1") (term "17"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "boolean_equal" (formula "1") (term "0"))
                                 (rule "concrete_not_1" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " self.capacity >= 1 + idx_0 FALSE"
                              (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "29"))
                              (rule "ifthenelse_false_for" (formula "34"))
                              (rule "inEqSimp_geqRight" (formula "29"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "6"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "11"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "applyEq" (formula "34") (term "1,4") (ifseqformula "6"))
                              (rule "polySimp_pullOutFactor2" (formula "34") (term "4"))
                              (rule "add_literals" (formula "34") (term "1,4"))
                              (rule "times_zero_1" (formula "34") (term "4"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "1,0"))
                              (rule "times_zero_1" (formula "7") (term "0"))
                              (rule "leq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "5"))
                              (rule "applyEq" (formula "12") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "emptyModality" (formula "1") (term "4"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_not_equal_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch " self.min = minIdx_0 FALSE"
                           (rule "ifUnfold" (formula "34") (term "16") (inst "#boolv=b"))
                           (rule "variableDeclaration" (formula "34") (term "16") (newnames "b_10"))
                           (rule "less_than_comparison_new" (formula "34") (term "16"))
                           (builtin "Update Simplification" (formula "34"))
                           (rule "assignment_instance_field_of_this" (formula "34") (term "16,1"))
                           (builtin "Update Simplification" (formula "34"))
                           (rule "assignment_instance_field_of_this" (formula "34") (term "16,2"))
                           (builtin "Update Simplification" (formula "34"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "applyEq" (formula "34") (term "0,1,0,0") (ifseqformula "25"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                           (rule "ifthenelse_split_for" (formula "1"))
                           (branch " self.capacity >= 1 + idx_0 TRUE"
                              (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                              (rule "ifthenelse_true_for" (formula "35"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "emptyModality" (formula "2") (term "4"))
                              (builtin "Update Simplification" (formula "2"))
                              (rule "boolean_equal" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "allLeft" (formula "6") (inst "t=minIdx_0"))
                              (rule "eqSymm" (formula "6") (term "0,0,0,1"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0,1") (ifseqformula "29"))
                              (rule "ifthenelse_false" (formula "6") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1"))
                              (rule "add_literals" (formula "6") (term "1,0,1"))
                              (rule "times_zero_1" (formula "6") (term "0,1"))
                              (rule "leq_literals" (formula "6") (term "1"))
                              (rule "concrete_or_3" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "ifSplit" (formula "33"))
                              (branch " if b_10 true"
                                 (builtin "Update Simplification" (formula "34"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "boolean_equal" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifUnfold" (formula "33") (term "16") (inst "#boolv=b"))
                                 (rule "variableDeclaration" (formula "33") (term "16") (newnames "b_11"))
                                 (rule "compound_assignment_5" (formula "33") (term "16"))
                                 (rule "ifElseUnfold" (formula "33") (term "16") (inst "#boolv=b_12"))
                                 (rule "variableDeclaration" (formula "33") (term "16") (newnames "b_12"))
                                 (rule "equality_comparison_new" (formula "33") (term "16"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "assignment_instance_field_of_this" (formula "33") (term "16,1"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "assignment_instance_field_of_this" (formula "33") (term "16,2"))
                                 (builtin "Update Simplification" (formula "33"))
                                 (rule "inEqSimp_contradEq7" (formula "33") (term "0,0") (ifseqformula "4"))
                                 (rule "add_zero_left" (formula "33") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "33") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "33") (term "0,0"))
                                 (rule "concrete_not_2" (formula "33") (term "0"))
                                 (rule "ifthenelse_true_for" (formula "33"))
                                 (rule "ifElseSplit" (formula "33"))
                                 (branch " if b_12 true"
                                    (builtin "Update Simplification" (formula "34"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "boolean_not_equal_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch " if b_12 false"
                                    (rule "false_to_not_true" (formula "1") (term "17"))
                                    (builtin "Update Simplification" (formula "34"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "boolean_not_equal_2" (formula "1") (term "0"))
                                    (rule "concrete_not_2" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "compound_less_than_comparison_2" (formula "33") (term "16") (inst "#v1=j_1") (inst "#v0=j"))
                                    (rule "variableDeclarationAssign" (formula "33") (term "16"))
                                    (rule "variableDeclaration" (formula "33") (term "16") (newnames "j_6"))
                                    (rule "methodCallWithAssignmentUnfoldTarget" (formula "33") (term "16") (inst "#v0=v_Record"))
                                    (rule "variableDeclaration" (formula "33") (term "16") (newnames "v_Record_1"))
                                    (rule "assignment_array2" (formula "33") (term "16"))
                                    (branch " Normal Execution (highscores != null)"
                                       (builtin "Update Simplification" (formula "34"))
                                       (builtin "Update Simplification" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "eqSymm" (formula "35") (term "0,5"))
                                       (rule "inEqSimp_ltRight" (formula "34"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_1" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "methodCallWithAssignment" (formula "33") (term "17") (inst "#v0=j_7"))
                                       (branch " Normal Execution (v_Record_1 != null)"
                                          (builtin "Update Simplification" (formula "33"))
                                          (rule "variableDeclaration" (formula "34") (term "17") (newnames "j_9"))
                                          (rule "ifthenelse_split" (formula "33") (term "0"))
                                          (branch " self.min = idx_0 TRUE"
                                             (rule "replace_known_left" (formula "34") (term "0,5") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "34") (term "5"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "8"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "3") (term "3") (ifseqformula "1"))
                                             (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "34") (term "7") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0"))
                                             (rule "concrete_and_2" (formula "28"))
                                             (rule "false_right" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                             (rule "concrete_or_1" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "allLeft" (formula "7") (inst "t=minIdx_0"))
                                             (rule "inEqSimp_contradEq3" (formula "7") (term "0,0,0,1") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0,1"))
                                             (rule "concrete_and_2" (formula "7") (term "0,0,0,1"))
                                             (rule "ifthenelse_false" (formula "7") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1"))
                                             (rule "add_literals" (formula "7") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "0,1"))
                                             (rule "leq_literals" (formula "7") (term "1"))
                                             (rule "concrete_or_3" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "methodBodyExpand" (formula "31") (term "17"))
                                             (rule "methodCallReturn" (formula "31") (term "17"))
                                             (rule "assignment" (formula "31") (term "17"))
                                             (builtin "Update Simplification" (formula "31"))
                                             (rule "methodCallEmpty" (formula "31") (term "18"))
                                             (builtin "Update Simplification" (formula "31"))
                                             (rule "blockEmpty" (formula "31") (term "17"))
                                             (rule "assignment" (formula "31") (term "17"))
                                             (builtin "Update Simplification" (formula "31"))
                                             (rule "variableDeclarationAssign" (formula "31") (term "17"))
                                             (rule "variableDeclaration" (formula "31") (term "17") (newnames "j_19"))
                                             (rule "methodCallWithAssignmentUnfoldTarget" (formula "31") (term "17") (inst "#v0=v_Record"))
                                             (rule "variableDeclaration" (formula "31") (term "17") (newnames "v_Record_5"))
                                             (rule "assignment_array2" (formula "31") (term "17"))
                                             (branch " Normal Execution (highscores != null)"
                                                (builtin "Update Simplification" (formula "32"))
                                                (builtin "Update Simplification" (formula "31"))
                                                (rule "orRight" (formula "31"))
                                                (rule "orRight" (formula "31"))
                                                (rule "inEqSimp_ltRight" (formula "32"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq3" (formula "32") (term "0,6") (ifseqformula "7"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,6"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,6"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,0,6"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,0,6"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,6"))
                                                (rule "qeq_literals" (formula "32") (term "0,0,6"))
                                                (rule "concrete_and_2" (formula "32") (term "0,6"))
                                                (rule "ifthenelse_false" (formula "32") (term "6"))
                                                (rule "methodCallWithAssignment" (formula "32") (term "18") (inst "#v0=j_20"))
                                                (branch " Normal Execution (v_Record_5 != null)"
                                                   (builtin "Update Simplification" (formula "32"))
                                                   (rule "variableDeclaration" (formula "33") (term "18") (newnames "j_20"))
                                                   (rule "methodBodyExpand" (formula "33") (term "18"))
                                                   (rule "methodCallReturn" (formula "33") (term "18"))
                                                   (rule "assignment_instance_field_of_this" (formula "33") (term "18"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "methodCallEmpty" (formula "33") (term "19"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "blockEmpty" (formula "33") (term "18"))
                                                   (rule "assignment_instance_field_of_this" (formula "33") (term "18"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "less_than_comparison_new" (formula "33") (term "18"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "assignment_instance_field_of_this" (formula "33") (term "16,1"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "blockEmpty" (formula "33") (term "17,1"))
                                                   (rule "assignment_instance_field_of_this" (formula "33") (term "16,2"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "blockEmpty" (formula "33") (term "17,2"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                                   (rule "ifthenelse_split_for" (formula "33"))
                                                   (branch " self.highscores[minIdx_0].score >= 1 + rec.score TRUE"
                                                      (rule "ifSplit" (formula "34"))
                                                      (branch " if b_11 true"
                                                         (builtin "Update Simplification" (formula "35"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "boolean_equal" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment_instance_field_of_this" (formula "34") (term "16"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "blockEmpty" (formula "34") (term "16"))
                                                         (rule "postincrement" (formula "34") (term "16"))
                                                         (rule "compound_int_cast_expression" (formula "34") (term "16") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "34") (term "16"))
                                                         (rule "variableDeclaration" (formula "34") (term "16") (newnames "j_21"))
                                                         (rule "remove_parentheses_right" (formula "34") (term "16"))
                                                         (rule "assignmentAdditionInt" (formula "34") (term "16"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "3"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "3"))
                                                         (rule "widening_identity_cast_5" (formula "34") (term "17"))
                                                         (rule "assignment" (formula "34") (term "17"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "tryEmpty" (formula "34") (term "16"))
                                                         (rule "methodCallEmpty" (formula "34") (term "16"))
                                                         (rule "castDelInt" (formula "34") (term "2"))
                                                         (rule "emptyModality" (formula "34") (term "16"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "boolean_not_equal_2" (formula "34") (term "0,0"))
                                                         (rule "boolean_not_equal_2" (formula "34") (term "0,0,1"))
                                                         (rule "concrete_impl_2" (formula "34") (term "0"))
                                                         (rule "concrete_not_2" (formula "34") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "34"))
                                                         (rule "concrete_impl_1" (formula "34"))
                                                         (rule "castDelInt" (formula "34") (term "1,0,1,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "0,0,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "0,0,0,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,1,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,0,1,1,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1"))
                                                         (rule "replace_known_left" (formula "34") (term "5,0,0,0") (ifseqformula "5"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "concrete_and_1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,1,0,1,1,1,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "1,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_zero_left" (formula "34") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1,1,1,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,1,1,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,0,1,1,1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,0,1,1,1,1,0,0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0,1,1,1,1,0,0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,1,1,1,0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "25"))
                                                         (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "4"))
                                                         (rule "concrete_and_3" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "25"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1"))
                                                         (rule "add_literals" (formula "34") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "34") (term "0,1"))
                                                         (rule "qeq_literals" (formula "34") (term "1"))
                                                         (rule "concrete_and_3" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "25"))
                                                         (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,1,0"))
                                                         (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0,0"))
                                                         (rule "times_zero_2" (formula "34") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                                         (rule "eq_eq" (formula "34") (term "0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,1,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "0"))
                                                         (rule "inReachableStateRewrite" (formula "34") (term "1") (ifseqformula "10"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "eq_imp" (formula "34") (term "0,0,1,1"))
                                                         (rule "elim_forall12" (formula "34") (term "0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,1,1,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,0,1,1,0,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,1,1,1,0,1,1,1"))
                                                         (rule "elim_forall8" (formula "34") (term "1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,1,1,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,0,1,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,0,0,0,1,0,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "1,1,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "0,1,1,0,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "0,0,0,1,0,1,1,1"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "26"))
                                                         (rule "concrete_impl_1" (formula "34") (term "0,1,1,1"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "24"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,1,1,1"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,1,1"))
                                                         (rule "array_store_static_analyse" (formula "34") (term "1,1,1") (ifseqformula "29"))
                                                         (rule "concrete_and_3" (formula "34") (term "1,1"))
                                                         (rule "all_unused" (formula "34") (term "1,1"))
                                                         (rule "concrete_or_3" (formula "34") (term "1"))
                                                         (rule "concrete_and_3" (formula "34"))
                                                         (rule "allRight" (formula "34") (inst "sk=i_7"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "eqSymm" (formula "36") (term "0,0,0"))
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "inEqSimp_leqRight" (formula "35"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "36") (term "0") (ifseqformula "29") (ifseqformula "13") (ifseqformula "36"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "32") (term "0,0") (ifseqformula "30") (ifseqformula "14") (ifseqformula "36"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                         (branch " idx_0 = i_7 TRUE"
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " idx_0 = i_7 FALSE"
                                                            (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "33"))
                                                            (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (rule "concrete_and_2" (formula "33"))
                                                            (rule "false_right" (formula "33"))
                                                            (rule "allLeft" (formula "13") (inst "t=i_7"))
                                                            (rule "eqSymm" (formula "13") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                            (rule "inEqSimp_contradEq7" (formula "13") (term "0,0,0,1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0,0,1"))
                                                            (rule "leq_literals" (formula "13") (term "0,0,0,0,1"))
                                                            (rule "concrete_and_2" (formula "13") (term "0,0,0,1"))
                                                            (rule "ifthenelse_false" (formula "13") (term "0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "13") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "13") (term "0"))
                                                            (rule "concrete_or_2" (formula "13"))
                                                            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                      (branch " if b_11 false"
                                                         (rule "false_to_not_true" (formula "1") (term "17"))
                                                         (builtin "Update Simplification" (formula "35"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "boolean_equal" (formula "1") (term "0"))
                                                         (rule "concrete_not_1" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch " self.highscores[minIdx_0].score >= 1 + rec.score FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "33"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "ifSplit" (formula "34"))
                                                      (branch " if b_11 true"
                                                         (builtin "Update Simplification" (formula "35"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "boolean_not_equal_2" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch " if b_11 false"
                                                         (rule "false_to_not_true" (formula "1") (term "17"))
                                                         (builtin "Update Simplification" (formula "35"))
                                                         (builtin "Update Simplification" (formula "1"))
                                                         (rule "boolean_not_equal_2" (formula "1") (term "0"))
                                                         (rule "concrete_not_2" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "postincrement" (formula "34") (term "16"))
                                                         (rule "compound_int_cast_expression" (formula "34") (term "16") (inst "#v=j"))
                                                         (rule "variableDeclarationAssign" (formula "34") (term "16"))
                                                         (rule "variableDeclaration" (formula "34") (term "16") (newnames "j_22"))
                                                         (rule "remove_parentheses_right" (formula "34") (term "16"))
                                                         (rule "assignmentAdditionInt" (formula "34") (term "16"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "translateJavaAddInt" (formula "34") (term "3"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "3"))
                                                         (rule "widening_identity_cast_5" (formula "34") (term "17"))
                                                         (rule "assignment_instance_field_of_this" (formula "34") (term "17"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "tryEmpty" (formula "34") (term "16"))
                                                         (rule "methodCallEmpty" (formula "34") (term "16"))
                                                         (rule "castDelInt" (formula "34") (term "2"))
                                                         (rule "emptyModality" (formula "34") (term "16"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "boolean_not_equal_2" (formula "34") (term "0,0"))
                                                         (rule "boolean_not_equal_2" (formula "34") (term "0,0,1"))
                                                         (rule "concrete_impl_2" (formula "34") (term "0"))
                                                         (rule "concrete_not_2" (formula "34") (term "0,1"))
                                                         (rule "concrete_and_1" (formula "34"))
                                                         (rule "concrete_impl_1" (formula "34"))
                                                         (rule "castDelInt" (formula "34") (term "0,0,0,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,1,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,0,1,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "0,0,1,0,1,0,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,0,1,1,0"))
                                                         (rule "castDelInt" (formula "34") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                         (rule "replace_known_left" (formula "34") (term "5,0,0,0") (ifseqformula "5"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "concrete_and_1" (formula "34") (term "0,0"))
                                                         (rule "replace_known_left" (formula "34") (term "1,0,0,0,0") (ifseqformula "7"))
                                                         (rule "concrete_eq_3" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,1,0,1,1,1,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "1,0,1,1,1,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "1,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,1,1,0"))
                                                         (rule "add_zero_left" (formula "34") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "25"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,1,0"))
                                                         (rule "qeq_literals" (formula "34") (term "1,0"))
                                                         (rule "concrete_and_3" (formula "34") (term "0"))
                                                         (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "25"))
                                                         (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "4"))
                                                         (rule "concrete_and_3" (formula "34"))
                                                         (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "25"))
                                                         (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "4"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,1,0"))
                                                         (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0"))
                                                         (rule "times_zero_2" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "1,0,1,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "34") (term "0,0,1,1,0,1,1,1,1,0") (ifseqformula "8"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0,0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "concrete_and_2" (formula "34") (term "0,0,1,1,0,1,1,1,1,0"))
                                                         (rule "ifthenelse_false" (formula "34") (term "0,1,1,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (term "0,1,0") (ifseqformula "7"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,1,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,1,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "34") (term "0,0") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "34") (term "0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,0"))
                                                         (rule "concrete_and_1" (formula "34") (term "0"))
                                                         (rule "inReachableStateRewrite" (formula "34") (term "1") (ifseqformula "10"))
                                                         (builtin "Update Simplification" (formula "34"))
                                                         (rule "eq_imp" (formula "34") (term "0,0,1,1"))
                                                         (rule "elim_forall12" (formula "34") (term "0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "1,0,1,1,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,0,1,1,0,1,0,1,1,1"))
                                                         (rule "concrete_and_3" (formula "34") (term "0,1,1,1,0,1,1,1"))
                                                         (rule "elim_forall8" (formula "34") (term "1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,0,0,0,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,0,1,1,0,1,1,1"))
                                                         (rule "eqClose" (formula "34") (term "0,1,1,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "0,0,0,1,0,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "0,1,1,0,1,1,1"))
                                                         (rule "ifthenelse_true" (formula "34") (term "1,1,1,1,1"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "26"))
                                                         (rule "concrete_impl_1" (formula "34") (term "0,1,1,1"))
                                                         (rule "replace_known_left" (formula "34") (term "0,0,1,1,1") (ifseqformula "24"))
                                                         (rule "concrete_or_1" (formula "34") (term "0,1,1,1"))
                                                         (rule "concrete_and_1" (formula "34") (term "1,1,1"))
                                                         (rule "array_store_static_analyse" (formula "34") (term "1,1,1") (ifseqformula "29"))
                                                         (rule "concrete_and_3" (formula "34") (term "1,1"))
                                                         (rule "all_unused" (formula "34") (term "1,1"))
                                                         (rule "concrete_or_3" (formula "34") (term "1"))
                                                         (rule "concrete_and_3" (formula "34"))
                                                         (rule "allRight" (formula "34") (inst "sk=i_6"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "orRight" (formula "34"))
                                                         (rule "eqSymm" (formula "36") (term "0,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "34"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "35"))
                                                         (rule "inEqSimp_geqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "36") (term "0") (ifseqformula "29") (ifseqformula "13") (ifseqformula "36"))
                                                         (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "32") (term "0,0") (ifseqformula "30") (ifseqformula "14") (ifseqformula "36"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                         (branch " idx_0 = i_6 TRUE"
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "32") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "33") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "13") (term "1,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "10") (term "3") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "7") (term "1") (ifseqformula "2"))
                                                            (rule "applyEqRigid" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " idx_0 = i_6 FALSE"
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "33"))
                                                            (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "3"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                            (rule "add_literals" (formula "33") (term "0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                            (rule "concrete_and_2" (formula "33"))
                                                            (rule "false_right" (formula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "allLeft" (formula "14") (inst "t=i_6"))
                                                            (rule "eqSymm" (formula "14") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                            (rule "inEqSimp_contradEq7" (formula "14") (term "0,0,0,1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1"))
                                                            (rule "leq_literals" (formula "14") (term "0,0,0,0,1"))
                                                            (rule "concrete_and_2" (formula "14") (term "0,0,0,1"))
                                                            (rule "ifthenelse_false" (formula "14") (term "0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                            (rule "concrete_and_2" (formula "14") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "14") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "14") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "14") (term "1"))
                                                            (rule "concrete_or_4" (formula "14"))
                                                            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "5") (term "0"))
                                                            (rule "concrete_and_2" (formula "5"))
                                                            (rule "closeFalse" (formula "5"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " Null Reference (v_Record_5 = null)"
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "blockThrow" (formula "33") (term "17"))
                                                   (builtin "Update Simplification" (formula "33"))
                                                   (rule "applyEq" (formula "9") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "allLeft" (formula "18") (inst "t=self"))
                                                   (rule "replace_known_right" (formula "18") (term "1,0,0,0,0") (ifseqformula "31"))
                                                   (rule "concrete_or_4" (formula "18") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "24"))
                                                   (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "26"))
                                                   (rule "allLeft" (formula "9") (inst "t=minIdx_0"))
                                                   (rule "applyEq" (formula "9") (term "2,0,0,1") (ifseqformula "1"))
                                                   (rule "inEqSimp_contradEq3" (formula "9") (term "0,0,0,1") (ifseqformula "8"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0,0,1"))
                                                   (rule "concrete_and_2" (formula "9") (term "0,0,0,1"))
                                                   (rule "ifthenelse_false" (formula "9") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "0,1"))
                                                   (rule "leq_literals" (formula "9") (term "1"))
                                                   (rule "concrete_or_3" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "allLeft" (formula "18") (inst "t=minIdx_0"))
                                                   (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "18") (term "1"))
                                                   (rule "concrete_or_4" (formula "18"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "18") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "18") (term "0"))
                                                   (rule "concrete_or_2" (formula "18"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " Null Reference (highscores = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                             (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "blockThrow" (formula "32") (term "17"))
                                                (builtin "Update Simplification" (formula "32"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (rule "concrete_and_2" (formula "1") (term "1"))
                                                (rule "concrete_or_4" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "8"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch " self.min = idx_0 FALSE"
                                             (rule "replace_known_right" (formula "35") (term "0,5") (ifseqformula "33"))
                                             (rule "ifthenelse_false" (formula "35") (term "5"))
                                             (rule "methodBodyExpand" (formula "35") (term "17"))
                                             (rule "methodCallReturn" (formula "35") (term "17"))
                                             (rule "assignment" (formula "35") (term "17"))
                                             (builtin "Update Simplification" (formula "35"))
                                             (rule "methodCallEmpty" (formula "35") (term "18"))
                                             (builtin "Update Simplification" (formula "35"))
                                             (rule "blockEmpty" (formula "35") (term "17"))
                                             (rule "assignment" (formula "35") (term "17"))
                                             (builtin "Update Simplification" (formula "35"))
                                             (rule "variableDeclarationAssign" (formula "35") (term "17"))
                                             (rule "variableDeclaration" (formula "35") (term "17") (newnames "j_10"))
                                             (rule "methodCallWithAssignmentUnfoldTarget" (formula "35") (term "17") (inst "#v0=v_Record"))
                                             (rule "variableDeclaration" (formula "35") (term "17") (newnames "v_Record_3"))
                                             (rule "assignment_array2" (formula "35") (term "17"))
                                             (branch " Normal Execution (highscores != null)"
                                                (builtin "Update Simplification" (formula "36"))
                                                (builtin "Update Simplification" (formula "35"))
                                                (rule "orRight" (formula "35"))
                                                (rule "orRight" (formula "35"))
                                                (rule "eqSymm" (formula "37") (term "0,6"))
                                                (rule "replace_known_right" (formula "37") (term "0,6") (ifseqformula "28"))
                                                (rule "ifthenelse_false" (formula "37") (term "6"))
                                                (rule "inEqSimp_ltRight" (formula "36"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "35"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "methodCallWithAssignment" (formula "36") (term "18") (inst "#v0=j_11"))
                                                (branch " Normal Execution (v_Record_3 != null)"
                                                   (builtin "Update Simplification" (formula "36"))
                                                   (rule "variableDeclaration" (formula "37") (term "18") (newnames "j_11"))
                                                   (rule "methodBodyExpand" (formula "37") (term "18"))
                                                   (rule "methodCallReturn" (formula "37") (term "18"))
                                                   (rule "assignment_instance_field_of_this" (formula "37") (term "18"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "methodCallEmpty" (formula "37") (term "19"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "blockEmpty" (formula "37") (term "18"))
                                                   (rule "assignment_instance_field_of_this" (formula "37") (term "18"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "less_than_comparison_new" (formula "37") (term "18"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "assignment_instance_field_of_this" (formula "37") (term "16,1"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "blockEmpty" (formula "37") (term "17,1"))
                                                   (rule "assignment_instance_field_of_this" (formula "37") (term "16,2"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "blockEmpty" (formula "37") (term "17,2"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                   (rule "ifthenelse_split_for" (formula "37"))
                                                   (branch "    self.highscores[minIdx_0].score
>= 1
 + self.highscores[idx_0].score TRUE"
                                                      (rule "if" (formula "38") (term "17"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "boolean_equal" (formula "38") (term "0"))
                                                      (rule "ifthenelse_true_for" (formula "38"))
                                                      (rule "assignment_instance_field_of_this" (formula "38") (term "16"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "blockEmpty" (formula "38") (term "16"))
                                                      (rule "postincrement" (formula "38") (term "16"))
                                                      (rule "compound_int_cast_expression" (formula "38") (term "16") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "38") (term "16"))
                                                      (rule "variableDeclaration" (formula "38") (term "16") (newnames "j_12"))
                                                      (rule "remove_parentheses_right" (formula "38") (term "16"))
                                                      (rule "assignmentAdditionInt" (formula "38") (term "16"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "translateJavaAddInt" (formula "38") (term "3"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "3"))
                                                      (rule "widening_identity_cast_5" (formula "38") (term "17"))
                                                      (rule "assignment" (formula "38") (term "17"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "tryEmpty" (formula "38") (term "16"))
                                                      (rule "methodCallEmpty" (formula "38") (term "16"))
                                                      (rule "castDelInt" (formula "38") (term "2"))
                                                      (rule "emptyModality" (formula "38") (term "16"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "boolean_not_equal_2" (formula "38") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "38") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "38") (term "0"))
                                                      (rule "concrete_not_2" (formula "38") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "38"))
                                                      (rule "concrete_impl_1" (formula "38"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,0,1,1,0"))
                                                      (rule "castDelInt" (formula "38") (term "0,0,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "0,0,0,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1"))
                                                      (rule "castDelInt" (formula "38") (term "1,0,1,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                      (rule "eqSymm" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "38") (term "5,0,0,0") (ifseqformula "4"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "concrete_and_1" (formula "38") (term "0,0"))
                                                      (rule "replace_known_right" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,0,0") (ifseqformula "35"))
                                                      (rule "ifthenelse_false" (formula "38") (term "0,1,1,0,1,1,1,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,1,0,1,1,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,1,1,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,0,1,1,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,0,1,1,1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,0,1,1,1,1,0,0,0"))
                                                      (rule "qeq_literals" (formula "38") (term "0,1,1,1,1,0,0,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,1,1,0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "38") (term "1,0"))
                                                      (rule "concrete_and_3" (formula "38") (term "0"))
                                                      (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "26"))
                                                      (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "3"))
                                                      (rule "concrete_and_3" (formula "38"))
                                                      (rule "applyEq" (formula "38") (term "0,0,1,1,0") (ifseqformula "26"))
                                                      (rule "replace_known_left" (formula "38") (term "0,1,1,0") (ifseqformula "3"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                                      (rule "inEqSimp_invertInEq0" (formula "38") (term "0,0,0"))
                                                      (rule "times_zero_2" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,0,0,0"))
                                                      (rule "eq_eq" (formula "38") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "0"))
                                                      (rule "inReachableStateRewrite" (formula "38") (term "1") (ifseqformula "11"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "eq_imp" (formula "38") (term "0,0,1,1"))
                                                      (rule "elim_forall12" (formula "38") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,1,1,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,1,1,1,0,1,1,1"))
                                                      (rule "elim_forall8" (formula "38") (term "1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,1,1,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,0,1,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,0,0,0,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "1,1,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "0,1,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "27"))
                                                      (rule "concrete_impl_1" (formula "38") (term "0,1,1,1"))
                                                      (rule "replace_known_right" (formula "38") (term "1,0,1,1,1") (ifseqformula "33"))
                                                      (rule "concrete_or_4" (formula "38") (term "0,1,1,1"))
                                                      (rule "replace_known_left" (formula "38") (term "0,1,1,1") (ifseqformula "25"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,1"))
                                                      (rule "array_store_static_analyse" (formula "38") (term "1,1,1") (ifseqformula "31"))
                                                      (rule "concrete_and_3" (formula "38") (term "1,1"))
                                                      (rule "all_unused" (formula "38") (term "1,1"))
                                                      (rule "concrete_or_3" (formula "38") (term "1"))
                                                      (rule "concrete_and_3" (formula "38"))
                                                      (rule "allRight" (formula "38") (inst "sk=i_3"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "inEqSimp_leqRight" (formula "39"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "39") (term "0") (ifseqformula "30") (ifseqformula "14") (ifseqformula "39"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "41") (term "0") (ifseqformula "31") (ifseqformula "15") (ifseqformula "41"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                      (branch " self.min = i_3 TRUE"
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "36"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "10") (term "3") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                         (rule "mul_literals" (formula "15") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                         (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "40"))
                                                         (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                         (rule "concrete_and_2" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "allLeft" (formula "14") (inst "t=minIdx_0"))
                                                         (rule "replace_known_right" (formula "14") (term "0,0,0,1") (ifseqformula "36"))
                                                         (rule "ifthenelse_false" (formula "14") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1"))
                                                         (rule "add_literals" (formula "14") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "14") (term "0,1"))
                                                         (rule "leq_literals" (formula "14") (term "1"))
                                                         (rule "concrete_or_3" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "allLeft" (formula "14") (inst "t=i_3"))
                                                         (rule "eqClose" (formula "14") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "14") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "14") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "14") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "14") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "14") (term "0"))
                                                         (rule "concrete_or_2" (formula "14"))
                                                         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "7"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0"))
                                                         (rule "add_literals" (formula "4") (term "0"))
                                                         (rule "leq_literals" (formula "4"))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                      (branch " self.min = i_3 FALSE"
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "allLeft" (formula "13") (inst "t=i_3"))
                                                         (rule "eqSymm" (formula "13") (term "0,0,0,1"))
                                                         (rule "replace_known_right" (formula "13") (term "0,0,0,1") (ifseqformula "36"))
                                                         (rule "ifthenelse_false" (formula "13") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "13") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "13") (term "0"))
                                                         (rule "cut_direct" (formula "13") (term "0"))
                                                         (branch " CUT: idx_0 <= i_3 TRUE"
                                                            (rule "concrete_or_1" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "13"))
                                                            (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14"))
                                                            (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                            (rule "add_literals" (formula "14") (term "1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "0"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                                                            (rule "applyEqRigid" (formula "43") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch " CUT: idx_0 <= i_3 FALSE"
                                                            (rule "concrete_or_2" (formula "13"))
                                                            (rule "inEqSimp_leqRight" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                            (rule "concrete_or_1" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                   )
                                                   (branch "    self.highscores[minIdx_0].score
>= 1
 + self.highscores[idx_0].score FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "37"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "if" (formula "38") (term "17"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "boolean_not_equal_2" (formula "38") (term "0"))
                                                      (rule "ifthenelse_false_for" (formula "38"))
                                                      (rule "postincrement" (formula "38") (term "16"))
                                                      (rule "compound_int_cast_expression" (formula "38") (term "16") (inst "#v=j"))
                                                      (rule "variableDeclarationAssign" (formula "38") (term "16"))
                                                      (rule "variableDeclaration" (formula "38") (term "16") (newnames "j_13"))
                                                      (rule "remove_parentheses_right" (formula "38") (term "16"))
                                                      (rule "assignmentAdditionInt" (formula "38") (term "16"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "translateJavaAddInt" (formula "38") (term "3"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "3"))
                                                      (rule "widening_identity_cast_5" (formula "38") (term "17"))
                                                      (rule "assignment" (formula "38") (term "17"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "tryEmpty" (formula "38") (term "16"))
                                                      (rule "methodCallEmpty" (formula "38") (term "16"))
                                                      (rule "castDelInt" (formula "38") (term "2"))
                                                      (rule "emptyModality" (formula "38") (term "16"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "boolean_not_equal_2" (formula "38") (term "0,0"))
                                                      (rule "boolean_not_equal_2" (formula "38") (term "0,0,1"))
                                                      (rule "concrete_impl_2" (formula "38") (term "0"))
                                                      (rule "concrete_not_2" (formula "38") (term "0,1"))
                                                      (rule "concrete_and_1" (formula "38"))
                                                      (rule "concrete_impl_1" (formula "38"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,1,0"))
                                                      (rule "castDelInt" (formula "38") (term "0,0,0,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "0,0,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1"))
                                                      (rule "castDelInt" (formula "38") (term "1,0,1,1,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,0,0,1,1,1,1,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,1,0,1,1,1,1,0,1,0,0"))
                                                      (rule "castDelInt" (formula "38") (term "1,0,1,1,0,1,0,0"))
                                                      (rule "eqSymm" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "38") (term "1,0,0,1,0,0") (ifseqformula "6"))
                                                      (rule "concrete_eq_3" (formula "38") (term "0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "38") (term "5,0,0,0") (ifseqformula "4"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "concrete_and_1" (formula "38") (term "0,0"))
                                                      (rule "replace_known_right" (formula "38") (term "0,0,1,1,0,1,1,1,1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "ifthenelse_false" (formula "38") (term "0,1,1,0,1,1,1,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,1,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,1,0,1,1,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "1,0,1,1,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,1,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,0,1,1,0,0,0") (ifseqformula "26"))
                                                      (rule "replace_known_left" (formula "38") (term "0,1,1,0,0,0") (ifseqformula "3"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "38") (term "1,0"))
                                                      (rule "concrete_and_3" (formula "38") (term "0"))
                                                      (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "26"))
                                                      (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "3"))
                                                      (rule "concrete_and_3" (formula "38"))
                                                      (rule "inEqSimp_invertInEq0" (formula "38") (term "0,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,1,0"))
                                                      (rule "inEqSimp_subsumption0" (formula "38") (term "0,1,1,1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,1,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,1,1,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,1,0"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0,1,1,1,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,1,1,1,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (term "0,1,1,0") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "38") (term "0,0,1,1,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,1,1,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "38") (term "0,0,1,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,1,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (term "0,0") (ifseqformula "5"))
                                                      (rule "leq_literals" (formula "38") (term "0,0,0"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,0"))
                                                      (rule "concrete_and_1" (formula "38") (term "0"))
                                                      (rule "inReachableStateRewrite" (formula "38") (term "1") (ifseqformula "11"))
                                                      (builtin "Update Simplification" (formula "38"))
                                                      (rule "eq_imp" (formula "38") (term "0,0,1,1"))
                                                      (rule "elim_forall12" (formula "38") (term "0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "1,0,1,1,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,0,1,1,0,1,0,1,1,1"))
                                                      (rule "concrete_and_3" (formula "38") (term "0,1,1,1,0,1,1,1"))
                                                      (rule "elim_forall8" (formula "38") (term "1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,1,1,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,0,1,1,0,1,1,1"))
                                                      (rule "eqClose" (formula "38") (term "0,0,0,0,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "1,1,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "0,1,1,0,1,1,1"))
                                                      (rule "ifthenelse_true" (formula "38") (term "0,0,0,1,0,1,1,1"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "27"))
                                                      (rule "concrete_impl_1" (formula "38") (term "0,1,1,1"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,1,1") (ifseqformula "25"))
                                                      (rule "concrete_or_1" (formula "38") (term "0,1,1,1"))
                                                      (rule "concrete_and_1" (formula "38") (term "1,1,1"))
                                                      (rule "array_store_static_analyse" (formula "38") (term "1,1,1") (ifseqformula "31"))
                                                      (rule "concrete_and_3" (formula "38") (term "1,1"))
                                                      (rule "all_unused" (formula "38") (term "1,1"))
                                                      (rule "concrete_or_3" (formula "38") (term "1"))
                                                      (rule "concrete_and_3" (formula "38"))
                                                      (rule "allRight" (formula "38") (inst "sk=i_4"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "orRight" (formula "38"))
                                                      (rule "eqSymm" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "38"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "inEqSimp_geqRight" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "39") (term "0") (ifseqformula "30") (ifseqformula "14") (ifseqformula "39"))
                                                      (rule "only_created_object_are_referenced_by_arrays_non_null" (formula "12") (term "0,1,1,0") (ifseqformula "31") (ifseqformula "15") (ifseqformula "41"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                      (branch " self.min = i_4 TRUE"
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "9") (term "3") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "35"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "40"))
                                                         (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                         (rule "mul_literals" (formula "15") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                         (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "40"))
                                                         (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0"))
                                                         (rule "concrete_and_2" (formula "40"))
                                                         (rule "false_right" (formula "40"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "allLeft" (formula "15") (inst "t=minIdx_0"))
                                                         (rule "replace_known_right" (formula "15") (term "0,0,0,1") (ifseqformula "37"))
                                                         (rule "ifthenelse_false" (formula "15") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                                                         (rule "add_literals" (formula "15") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "15") (term "0,1"))
                                                         (rule "leq_literals" (formula "15") (term "1"))
                                                         (rule "concrete_or_3" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "allLeft" (formula "15") (inst "t=i_4"))
                                                         (rule "eqClose" (formula "15") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "15") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "15") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "15") (term "1"))
                                                         (rule "concrete_or_4" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "15") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "15") (term "1"))
                                                         (rule "concrete_or_4" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "15") (term "0"))
                                                         (rule "concrete_and_2" (formula "15"))
                                                         (rule "closeFalse" (formula "15"))
                                                      )
                                                      (branch " self.min = i_4 FALSE"
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "allLeft" (formula "25") (inst "t=self"))
                                                         (rule "replace_known_left" (formula "25") (term "0,1,0,0,0") (ifseqformula "31"))
                                                         (rule "concrete_not_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "40"))
                                                         (rule "concrete_or_4" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
                                                         (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "33"))
                                                         (rule "allLeft" (formula "14") (inst "t=self.min@(maze.Highscore)"))
                                                         (rule "eqClose" (formula "14") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "14") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "14") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "14") (term "0"))
                                                         (rule "cut_direct" (formula "14") (term "0"))
                                                         (branch " CUT: self.min >= idx_0 TRUE"
                                                            (rule "concrete_or_1" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "44"))
                                                            (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "14"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                            (rule "concrete_and_2" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                            (rule "mul_literals" (formula "14") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "qeq_literals" (formula "8") (term "0"))
                                                            (rule "concrete_or_1" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "allLeft" (formula "15") (inst "t=i_4"))
                                                            (rule "eqSymm" (formula "15") (term "0,0,0,1"))
                                                            (rule "replace_known_right" (formula "15") (term "0,0,0,1") (ifseqformula "39"))
                                                            (rule "ifthenelse_false" (formula "15") (term "0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "15") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "15") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "15") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "15") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "15") (term "1"))
                                                            (rule "concrete_or_4" (formula "15"))
                                                            (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_literals" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " CUT: self.min >= idx_0 FALSE"
                                                            (rule "concrete_or_2" (formula "14"))
                                                            (rule "inEqSimp_geqRight" (formula "38"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                            (rule "add_literals" (formula "45") (term "0,0"))
                                                            (rule "qeq_literals" (formula "45") (term "0"))
                                                            (rule "concrete_and_2" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "18") (term "0,0"))
                                                            (rule "add_zero_left" (formula "18") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                            (rule "mul_literals" (formula "18") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "allLeft" (formula "17") (inst "t=i_4"))
                                                            (rule "eqSymm" (formula "17") (term "0,0,0,1"))
                                                            (rule "replace_known_right" (formula "17") (term "0,0,0,1") (ifseqformula "41"))
                                                            (rule "ifthenelse_false" (formula "17") (term "0,0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "17") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "17") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                            (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "17") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "17") (term "1"))
                                                            (rule "concrete_or_4" (formula "17"))
                                                            (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "17"))
                                                            (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "9") (term "1,0,1") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7"))
                                                            (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "0"))
                                                            (rule "leq_literals" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "applyEqRigid" (formula "47") (term "1,0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "3") (term "1,0,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_literals" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " Null Reference (v_Record_3 = null)"
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (builtin "Update Simplification" (formula "1"))
                                                   (rule "blockThrow" (formula "37") (term "17"))
                                                   (builtin "Update Simplification" (formula "37"))
                                                   (rule "applyEq" (formula "8") (term "0,1,1,0") (ifseqformula "1"))
                                                   (rule "allLeft" (formula "19") (inst "t=self"))
                                                   (rule "replace_known_left" (formula "19") (term "0,1,0,0,0") (ifseqformula "25"))
                                                   (rule "concrete_not_1" (formula "19") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "19") (term "1,0,0,0") (ifseqformula "33"))
                                                   (rule "concrete_or_4" (formula "19") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "27"))
                                                   (rule "allLeft" (formula "8") (inst "t=minIdx_0"))
                                                   (rule "eqSymm" (formula "8") (term "0,0,0,1"))
                                                   (rule "replace_known_right" (formula "8") (term "0,0,0,1") (ifseqformula "32"))
                                                   (rule "ifthenelse_false" (formula "8") (term "0,0,1"))
                                                   (rule "applyEq" (formula "8") (term "0,0,1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1"))
                                                   (rule "add_literals" (formula "8") (term "1,0,1"))
                                                   (rule "times_zero_1" (formula "8") (term "0,1"))
                                                   (rule "leq_literals" (formula "8") (term "1"))
                                                   (rule "concrete_or_3" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "allLeft" (formula "19") (inst "t=minIdx_0"))
                                                   (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "19") (term "1"))
                                                   (rule "concrete_or_4" (formula "19"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "19") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "19") (term "0"))
                                                   (rule "concrete_or_2" (formula "19"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " Null Reference (highscores = null)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "close" (formula "30") (ifseqformula "1"))
                                             )
                                             (branch " Index Out of Bounds (highscores != null, but minIdx Out of Bounds!)"
                                                (builtin "Update Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "blockThrow" (formula "36") (term "17"))
                                                (builtin "Update Simplification" (formula "36"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (rule "concrete_and_2" (formula "1") (term "1"))
                                                (rule "concrete_or_4" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "2"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                       )
                                       (branch " Null Reference (v_Record_1 = null)"
                                          (builtin "Update Simplification" (formula "34"))
                                          (builtin "Update Simplification" (formula "1"))
                                          (rule "blockThrow" (formula "34") (term "16"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " self.min = idx_0 TRUE"
                                             (rule "close" (formula "33") (ifseqformula "2"))
                                          )
                                          (branch " self.min = idx_0 FALSE"
                                             (rule "allLeft" (formula "18") (inst "t=self"))
                                             (rule "replace_known_left" (formula "18") (term "0,1,0,0,0") (ifseqformula "24"))
                                             (rule "concrete_not_1" (formula "18") (term "1,0,0,0"))
                                             (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "18") (term "1,0,0,0") (ifseqformula "33"))
                                             (rule "concrete_or_4" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "26"))
                                             (rule "allLeft" (formula "18") (inst "t=idx_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "18") (term "1"))
                                             (rule "concrete_or_4" (formula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "18") (term "0,0"))
                                             (rule "concrete_and_2" (formula "18") (term "0"))
                                             (rule "concrete_or_2" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "18"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch " Null Reference (highscores = null)"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "close" (formula "30") (ifseqformula "1"))
                                    )
                                    (branch " Index Out of Bounds (highscores != null, but idx Out of Bounds!)"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "blockThrow" (formula "34") (term "16"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_and_2" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (rule "concrete_and_2" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                              (branch " if b_10 false"
                                 (rule "false_to_not_true" (formula "1") (term "17"))
                                 (builtin "Update Simplification" (formula "34"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "boolean_equal" (formula "1") (term "0"))
                                 (rule "concrete_not_1" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch " self.capacity >= 1 + idx_0 FALSE"
                              (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "29"))
                              (rule "ifthenelse_false_for" (formula "35"))
                              (rule "inEqSimp_geqRight" (formula "29"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "1,0"))
                              (rule "times_zero_1" (formula "6") (term "0"))
                              (rule "leq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEq" (formula "33") (term "1,4") (ifseqformula "5"))
                              (rule "polySimp_pullOutFactor2" (formula "33") (term "4"))
                              (rule "add_literals" (formula "33") (term "1,4"))
                              (rule "times_zero_1" (formula "33") (term "4"))
                              (rule "applyEq" (formula "12") (term "1") (ifseqformula "5"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                              (rule "mul_literals" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "emptyModality" (formula "1") (term "4"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_not_equal_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch " Case 2"
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "10") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "36") (term "2") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "5"))
                        (rule "add_zero_right" (formula "3") (term "1,0"))
                        (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "14"))
                        (rule "ifthenelse_true_for" (formula "3"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "34") (term "0,0,0,0,1,1,0,16") (ifseqformula "4"))
                        (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                        (rule "add_literals" (formula "7") (term "1"))
                        (rule "applyEq" (formula "33") (term "0,0,3") (ifseqformula "4"))
                        (rule "times_zero_2" (formula "33") (term "0,3"))
                        (rule "add_zero_left" (formula "33") (term "3"))
                        (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "11"))
                        (rule "leq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "5"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "applyEqRigid" (formula "31") (term "4") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "31") (term "1,0,0,0,1,1,0,16") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "5") (term "1,0,0,1,1,0") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "5") (term "1,2,0,1,1,0") (ifseqformula "4"))
                        (rule "inEqSimp_contradEq7" (formula "5") (term "0,0,1,1,0") (ifseqformula "7"))
                        (rule "mul_literals" (formula "5") (term "1,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0,1,1,0"))
                        (rule "leq_literals" (formula "5") (term "0,0,0,1,1,0"))
                        (rule "concrete_and_2" (formula "5") (term "0,0,1,1,0"))
                        (rule "ifthenelse_false" (formula "5") (term "0,1,1,0"))
                        (rule "inEqSimp_or_tautInEq0" (formula "5") (term "0,0"))
                        (rule "add_zero_right" (formula "5") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "5") (term "1,0,0"))
                        (rule "concrete_or_3" (formula "5") (term "0,0"))
                        (rule "concrete_or_1" (formula "5") (term "0"))
                        (rule "all_unused" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "emptyModality" (formula "1") (term "4"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_equal" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "tryCatchThrow" (formula "29") (term "1,0,0,16"))
                        (rule "ifUnfold" (formula "29") (term "16") (inst "#boolv=b"))
                        (rule "variableDeclaration" (formula "29") (term "16") (newnames "b_6"))
                        (rule "less_than_comparison_new" (formula "29") (term "16"))
                        (builtin "Update Simplification" (formula "29"))
                        (rule "assignment_instance_field_of_this" (formula "29") (term "16,1"))
                        (builtin "Update Simplification" (formula "29"))
                        (rule "assignment_instance_field_of_this" (formula "29") (term "16,2"))
                        (builtin "Update Simplification" (formula "29"))
                        (rule "castDelInt" (formula "29") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0"))
                        (rule "add_zero_right" (formula "29") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0") (ifseqformula "21"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                        (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "7"))
                        (rule "ifthenelse_true_for" (formula "29"))
                        (rule "ifElseUnfold" (formula "29") (term "1,0,0,17") (inst "#boolv=b"))
                        (rule "variableDeclaration" (formula "29") (term "1,0,0,17") (newnames "b_7"))
                        (rule "ifSplit" (formula "29"))
                        (branch " if b_6 true"
                           (builtin "Update Simplification" (formula "30"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "boolean_equal" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifUnfold" (formula "29") (term "16") (inst "#boolv=b"))
                           (rule "variableDeclaration" (formula "29") (term "16") (newnames "b_8"))
                           (rule "compound_assignment_5" (formula "29") (term "16"))
                           (rule "ifElseUnfold" (formula "29") (term "16") (inst "#boolv=b_9"))
                           (rule "variableDeclaration" (formula "29") (term "16") (newnames "b_9"))
                           (rule "equality_comparison_new" (formula "29") (term "16"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "assignment_instance_field_of_this" (formula "29") (term "16,2"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "assignment_instance_field_of_this" (formula "29") (term "16,1"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "castDelInt" (formula "29") (term "0,0,0"))
                           (rule "eqClose" (formula "29") (term "0,0"))
                           (rule "concrete_not_1" (formula "29") (term "0"))
                           (rule "ifthenelse_false_for" (formula "29"))
                           (rule "ifElse" (formula "29") (term "17"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "boolean_equal" (formula "29") (term "0"))
                           (rule "ifthenelse_true_for" (formula "29"))
                           (rule "assignment_instance_field_of_this" (formula "29") (term "16"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "ifSplit" (formula "29"))
                           (branch " if b_8 true"
                              (builtin "Update Simplification" (formula "30"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_equal" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment_instance_field_of_this" (formula "29") (term "16"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "blockEmpty" (formula "29") (term "16"))
                              (rule "castDelInt" (formula "29") (term "4"))
                              (rule "postincrement" (formula "29") (term "16"))
                              (rule "compound_int_cast_expression" (formula "29") (term "16") (inst "#v=j"))
                              (rule "variableDeclarationAssign" (formula "29") (term "16"))
                              (rule "variableDeclaration" (formula "29") (term "16") (newnames "j_7"))
                              (rule "remove_parentheses_right" (formula "29") (term "16"))
                              (rule "assignmentAdditionInt" (formula "29") (term "16"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "castDelInt" (formula "29") (term "0,4"))
                              (rule "translateJavaAddInt" (formula "29") (term "4"))
                              (rule "add_zero_left" (formula "29") (term "4"))
                              (rule "widening_identity_cast_5" (formula "29") (term "17"))
                              (rule "assignment_instance_field_of_this" (formula "29") (term "17"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "tryEmpty" (formula "29") (term "16"))
                              (rule "methodCallEmpty" (formula "29") (term "16"))
                              (rule "castDelInt" (formula "29") (term "2"))
                              (rule "emptyModality" (formula "29") (term "16"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "boolean_not_equal_2" (formula "29") (term "0,0"))
                              (rule "boolean_not_equal_2" (formula "29") (term "0,0,1"))
                              (rule "concrete_impl_2" (formula "29") (term "0"))
                              (rule "concrete_not_2" (formula "29") (term "0,1"))
                              (rule "concrete_and_1" (formula "29"))
                              (rule "concrete_impl_1" (formula "29"))
                              (rule "castDelInt" (formula "29") (term "0,0,1,0,1,0,0"))
                              (rule "qeq_literals" (formula "29") (term "0,1,0,1,0,0"))
                              (rule "concrete_and_1" (formula "29") (term "1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "1,0,1,1,0"))
                              (rule "add_literals" (formula "29") (term "0,1,1,0"))
                              (rule "add_zero_left" (formula "29") (term "1,1,0"))
                              (rule "castDelInt" (formula "29") (term "0,1,0,0,1,0,0"))
                              (rule "qeq_literals" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "concrete_eq_3" (formula "29") (term "0,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "1,1"))
                              (rule "castDelInt" (formula "29") (term "0,0,0,1,1,0,1,1,1,1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "0,0,1,1,1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "1,1,0,0,1,1,1,1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "0,0,1,1,0,1,0,0"))
                              (rule "qeq_literals" (formula "29") (term "0,1,1,0,1,0,0"))
                              (rule "concrete_and_1" (formula "29") (term "1,1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "1,0,1,0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "0,0,0,1,0,0"))
                              (rule "qeq_literals" (formula "29") (term "0,0,1,0,0"))
                              (rule "concrete_and_1" (formula "29") (term "0,1,0,0"))
                              (rule "castDelInt" (formula "29") (term "1,1,0,1,0,1,0,0"))
                              (rule "add_literals" (formula "29") (term "1,0,1,0,1,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,1,0,1,0,0"))
                              (rule "concrete_and_1" (formula "29") (term "1,0,1,0,0"))
                              (rule "eqSymm" (formula "29") (term "0,0,1,1,0,1,0,1,0,0"))
                              (rule "replace_known_left" (formula "29") (term "5,0,0,0") (ifseqformula "1"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "concrete_and_1" (formula "29") (term "0,0"))
                              (rule "castDelInt" (formula "29") (term "1,2,0,1,1,0,1,0,0,0"))
                              (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,0"))
                              (rule "add_literals" (formula "29") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "29") (term "0,1,0"))
                              (rule "qeq_literals" (formula "29") (term "1,0"))
                              (rule "concrete_and_3" (formula "29") (term "0"))
                              (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "7"))
                              (rule "concrete_and_3" (formula "29"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "7"))
                              (rule "concrete_and_1" (formula "29") (term "0"))
                              (rule "inEqSimp_or_antiSymm0" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                              (rule "eqClose" (formula "29") (term "0,0,0,0"))
                              (rule "ifthenelse_true_for" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,0,0,0,0"))
                              (rule "inReachableStateRewrite" (formula "29") (term "1") (ifseqformula "6"))
                              (builtin "Update Simplification" (formula "29"))
                              (rule "eq_imp" (formula "29") (term "0,0,1,1"))
                              (rule "elim_forall12" (formula "29") (term "0,1,1,1"))
                              (rule "eqClose" (formula "29") (term "1,0,0,0,0,1,0,1,0,1,1,1"))
                              (rule "eqClose" (formula "29") (term "1,0,0,1,1,0,1,0,1,1,1"))
                              (rule "eqClose" (formula "29") (term "1,0,1,1,1,0,1,1,1"))
                              (rule "concrete_and_3" (formula "29") (term "0,0,0,0,1,0,1,0,1,1,1"))
                              (rule "concrete_and_3" (formula "29") (term "0,0,1,1,0,1,0,1,1,1"))
                              (rule "concrete_and_3" (formula "29") (term "0,1,1,1,0,1,1,1"))
                              (rule "elim_forall8" (formula "29") (term "1,1,1"))
                              (rule "eqClose" (formula "29") (term "0,1,1,1,1,1"))
                              (rule "eqClose" (formula "29") (term "0,0,1,1,0,1,1,1"))
                              (rule "eqClose" (formula "29") (term "0,0,0,0,1,0,1,1,1"))
                              (rule "ifthenelse_true" (formula "29") (term "1,1,1,1,1"))
                              (rule "ifthenelse_true" (formula "29") (term "0,1,1,0,1,1,1"))
                              (rule "ifthenelse_true" (formula "29") (term "0,0,0,1,0,1,1,1"))
                              (rule "replace_known_left" (formula "29") (term "0,0,1,1,1") (ifseqformula "22"))
                              (rule "concrete_impl_1" (formula "29") (term "0,1,1,1"))
                              (rule "replace_known_right" (formula "29") (term "1,0,1,1,1") (ifseqformula "27"))
                              (rule "concrete_or_4" (formula "29") (term "0,1,1,1"))
                              (rule "replace_known_left" (formula "29") (term "0,1,1,1") (ifseqformula "20"))
                              (rule "concrete_and_1" (formula "29") (term "1,1,1"))
                              (rule "array_store_static_analyse" (formula "29") (term "1,1,1") (ifseqformula "25"))
                              (rule "concrete_and_3" (formula "29") (term "1,1"))
                              (rule "all_unused" (formula "29") (term "1,1"))
                              (rule "concrete_or_3" (formula "29") (term "1"))
                              (rule "concrete_and_3" (formula "29"))
                              (rule "allRight" (formula "29") (inst "sk=i_2"))
                              (rule "orRight" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "eqSymm" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_geqRight" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "1") (term "1,2,0,1,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " if b_8 false"
                              (rule "false_to_not_true" (formula "1") (term "17"))
                              (builtin "Update Simplification" (formula "30"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_equal" (formula "1") (term "0"))
                              (rule "concrete_not_1" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch " if b_6 false"
                           (rule "false_to_not_true" (formula "1") (term "17"))
                           (builtin "Update Simplification" (formula "30"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "boolean_equal" (formula "1") (term "0"))
                           (rule "concrete_not_1" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch " Use Case"
                     (rule "false_to_not_true" (formula "26") (term "0,0,1,2,16"))
                     (rule "inInt" (formula "26") (term "1,0,0,1,1,1,1,1,0,0,0,2,16"))
                     (builtin "Update Simplification" (formula "26"))
                     (rule "concrete_and_3" (formula "26") (term "0,0,1,1,1,1,1,0,0,0"))
                     (rule "impRight" (formula "26"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "4"))
                     (rule "andLeft" (formula "5"))
                     (rule "variableDeclarationAssign" (formula "34") (term "16"))
                     (rule "variableDeclaration" (formula "34") (term "16") (newnames "b_5"))
                     (rule "methodCallReturn" (formula "34") (term "1,0,16"))
                     (rule "assignment" (formula "34") (term "1,0,16"))
                     (rule "methodCallEmpty" (formula "34") (term "1,1,0,16"))
                     (rule "blockEmpty" (formula "34") (term "1,1,0,16"))
                     (rule "assignment_instance_field_of_this" (formula "34") (term "1,1,0,16"))
                     (builtin "Update Simplification" (formula "34"))
                     (rule "blockReturn" (formula "34") (term "2,1,0,16"))
                     (rule "methodCallReturn" (formula "34") (term "2,1,0,16"))
                     (builtin "Update Simplification" (formula "34"))
                     (rule "assignment_instance_field_of_this" (formula "34") (term "2,1,0,15"))
                     (builtin "Update Simplification" (formula "34"))
                     (rule "methodCallEmpty" (formula "34") (term "3,1,0,15"))
                     (rule "tryEmpty" (formula "34") (term "3,1,0,15"))
                     (rule "castDelInt" (formula "8") (term "0"))
                     (rule "castDelInt" (formula "1") (term "1,1"))
                     (rule "castDelInt" (formula "1") (term "1,0"))
                     (rule "castDelInt" (formula "2") (term "1"))
                     (rule "castDelInt" (formula "4") (term "0,0,1"))
                     (rule "neg_literal" (formula "4") (term "0,1"))
                     (rule "castDelInt" (formula "6") (term "1,0,0,0"))
                     (rule "castDelInt" (formula "4") (term "1"))
                     (rule "eqSymm" (formula "6") (term "0,0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "8") (term "0"))
                     (rule "polySimp_elimSub" (formula "8") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "1") (term "0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "polySimp_addComm0" (formula "8") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0"))
                     (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "26"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                     (rule "mul_literals" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "add_zero_left" (formula "4") (term "0"))
                     (rule "nnf_imp2or" (formula "6") (term "0"))
                     (rule "nnf_notAnd" (formula "6") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                     (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                     (rule "inReachableStateExpand" (formula "7"))
                     (builtin "Update Simplification" (formula "7"))
                     (rule "eq_imp" (formula "7") (term "0,0,1"))
                     (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "10"))
                     (rule "concrete_impl_1" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "elim_forall12" (formula "8") (term "0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,0,0,1,0,1,0"))
                     (rule "eqClose" (formula "8") (term "1,0,0,1,1,0,1,0"))
                     (rule "eqClose" (formula "8") (term "1,0,1,1,1,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,0,0,1,0,1,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,0,1,1,0,1,0"))
                     (rule "concrete_and_3" (formula "8") (term "0,1,1,1,0"))
                     (rule "elim_forall8" (formula "8"))
                     (rule "eqClose" (formula "8") (term "0,0,1,1,0"))
                     (rule "eqClose" (formula "8") (term "0,0,0,0,1,0"))
                     (rule "eqClose" (formula "8") (term "0,1,1"))
                     (rule "ifthenelse_true" (formula "8") (term "0,1,1,0"))
                     (rule "ifthenelse_true" (formula "8") (term "0,0,0,1,0"))
                     (rule "ifthenelse_true" (formula "8") (term "1,1"))
                     (rule "andLeft" (formula "8"))
                     (rule "replace_known_right" (formula "8") (term "1,1") (ifseqformula "33"))
                     (rule "concrete_or_4" (formula "8") (term "1"))
                     (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "26"))
                     (rule "concrete_impl_4" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "array_store_static_analyse" (formula "8") (ifseqformula "30"))
                     (rule "true_left" (formula "8"))
                     (rule "all_unused" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "less_than_comparison_new" (formula "32") (term "15"))
                     (builtin "Update Simplification" (formula "32"))
                     (rule "assignment_instance_field_of_this" (formula "32") (term "14,1"))
                     (builtin "Update Simplification" (formula "32"))
                     (rule "methodCallEmpty" (formula "32") (term "15,1"))
                     (rule "assignment_instance_field_of_this" (formula "32") (term "14,2"))
                     (builtin "Update Simplification" (formula "32"))
                     (rule "methodCallEmpty" (formula "32") (term "15,2"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                     (rule "ifthenelse_split" (formula "6") (term "0,1,1,0"))
                     (branch " self.min = minIdx_1 TRUE"
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "6"))
                        (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "9"))
                        (rule "concrete_eq_3" (formula "1"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "7") (term "1,0,0,0,1,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "5,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "1,3,2") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "1,3,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "33") (term "5,2") (ifseqformula "6"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                        (rule "mul_literals" (formula "8") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "9"))
                        (rule "leq_literals" (formula "4") (term "0"))
                        (rule "concrete_or_1" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "7") (term "0,0"))
                        (rule "add_zero_left" (formula "7") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "ifthenelse_split_for" (formula "31"))
                        (branch " self.capacity >= 1 + idx_1 TRUE"
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "emptyModality" (formula "31") (term "15"))
                           (builtin "Update Simplification" (formula "31"))
                           (rule "boolean_equal" (formula "31") (term "0,0"))
                           (rule "concrete_not_1" (formula "31") (term "0"))
                           (rule "concrete_impl_2" (formula "31"))
                           (rule "closeTrue" (formula "31"))
                        )
                        (branch " self.capacity >= 1 + idx_1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "31"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,0"))
                           (rule "times_zero_1" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "emptyModality" (formula "29") (term "15"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "boolean_not_equal_2" (formula "29") (term "0,0"))
                           (rule "concrete_not_2" (formula "29") (term "0"))
                           (rule "concrete_impl_1" (formula "29"))
                           (rule "emptyModality" (formula "29") (term "15"))
                           (builtin "Update Simplification" (formula "29"))
                           (rule "eqClose" (formula "29") (term "1"))
                           (rule "concrete_and_3" (formula "29"))
                           (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "4"))
                           (rule "ifthenelse_true" (formula "29") (term "0,1"))
                           (rule "eqClose" (formula "29") (term "1"))
                           (rule "concrete_and_3" (formula "29"))
                           (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "4"))
                           (rule "eqClose" (formula "29"))
                           (rule "closeTrue" (formula "29"))
                        )
                     )
                     (branch " self.min = minIdx_1 FALSE"
                        (rule "equiv_left" (formula "1"))
                        (branch " Case 1"
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (rule "concrete_or_1" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "ifthenelse_split_for" (formula "32"))
                           (branch " self.capacity >= 1 + idx_1 TRUE"
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "emptyModality" (formula "32") (term "15"))
                              (builtin "Update Simplification" (formula "32"))
                              (rule "boolean_equal" (formula "32") (term "0,0"))
                              (rule "concrete_not_1" (formula "32") (term "0"))
                              (rule "concrete_impl_2" (formula "32"))
                              (rule "closeTrue" (formula "32"))
                           )
                           (branch " self.capacity >= 1 + idx_1 FALSE"
                              (rule "inEqSimp_geqRight" (formula "32"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "10") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "22") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "emptyModality" (formula "31") (term "15"))
                              (builtin "Update Simplification" (formula "31"))
                              (rule "boolean_not_equal_2" (formula "31") (term "0,0"))
                              (rule "concrete_not_2" (formula "31") (term "0"))
                              (rule "concrete_impl_1" (formula "31"))
                              (rule "emptyModality" (formula "31") (term "15"))
                              (builtin "Update Simplification" (formula "31"))
                              (rule "eqClose" (formula "31") (term "0,0"))
                              (rule "eqClose" (formula "31") (term "1,0"))
                              (rule "eqClose" (formula "31") (term "1"))
                              (rule "concrete_and_1" (formula "31") (term "0"))
                              (rule "concrete_and_1" (formula "31"))
                              (rule "closeTrue" (formula "31"))
                           )
                        )
                        (branch " Case 2"
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "35") (term "1,1,0") (ifseqformula "3"))
                           (rule "add_zero_right" (formula "35") (term "1,0"))
                           (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "12"))
                           (rule "ifthenelse_true_for" (formula "35"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                           (rule "add_zero_right" (formula "6") (term "1"))
                           (rule "applyEqRigid" (formula "6") (term "1,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "31") (term "2") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "4") (term "1,0,1,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "5"))
                           (rule "mul_literals" (formula "25") (term "1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "0,0"))
                           (rule "leq_literals" (formula "25") (term "0"))
                           (rule "concrete_and_2" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "inEqSimp_or_tautInEq0" (formula "3") (term "0,0"))
                           (rule "add_zero_right" (formula "3") (term "1,1,0,0"))
                           (rule "qeq_literals" (formula "3") (term "1,0,0"))
                           (rule "concrete_or_3" (formula "3") (term "0,0"))
                           (rule "concrete_or_1" (formula "3") (term "0"))
                           (rule "all_unused" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "emptyModality" (formula "28") (term "15"))
                           (builtin "Update Simplification" (formula "28"))
                           (rule "boolean_equal" (formula "28") (term "0,0"))
                           (rule "concrete_not_1" (formula "28") (term "0"))
                           (rule "concrete_impl_2" (formula "28"))
                           (rule "closeTrue" (formula "28"))
                        )
                     )
                  )
               )
               (branch " Null Reference (highscores = null)"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "close" (formula "22") (ifseqformula "1"))
               )
               (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "blockThrow" (formula "26") (term "11"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_and_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch " Array Store Exception (incompatible dynamic element type of highscores and _rec)"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "blockThrow" (formula "27") (term "11"))
                  (builtin "Update Simplification" (formula "27"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "array_store_static_analyse" (formula "21") (ifseqformula "22"))
                  (rule "closeTrue" (formula "21"))
               )
            )
            (branch " Null Reference (highscores = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close" (formula "22") (ifseqformula "1"))
            )
            (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
               (builtin "Update Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "blockThrow" (formula "26") (term "10"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (rule "concrete_and_2" (formula "1") (term "0"))
               (rule "concrete_or_2" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (rule "concrete_and_2" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch " if b_1 false"
            (rule "false_to_not_true" (formula "1") (term "11"))
            (builtin "Update Simplification" (formula "26"))
            (builtin "Update Simplification" (formula "1"))
            (rule "boolean_equal" (formula "1") (term "0"))
            (rule "concrete_not_1" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch " Null Reference (v_Record = null)"
         (builtin "Update Simplification" (formula "25"))
         (builtin "Update Simplification" (formula "1"))
         (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "21"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1"))
         (rule "polySimp_rightDist" (formula "21") (term "1"))
         (rule "mul_literals" (formula "21") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1"))
         (rule "allLeft" (formula "12") (inst "t=self"))
         (rule "replace_known_left" (formula "12") (term "0,1,0,0,0") (ifseqformula "18"))
         (rule "concrete_not_1" (formula "12") (term "1,0,0,0"))
         (rule "concrete_or_4" (formula "12") (term "0,0,0"))
         (rule "replace_known_right" (formula "12") (term "1,0,0,0") (ifseqformula "24"))
         (rule "concrete_or_4" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
         (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "20"))
         (rule "array_length_non_negative_3" (formula "7") (term "0") (ifseqformula "4") (ifseqformula "21") (ifseqformula "23"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
         (rule "leq_literals" (formula "7") (term "0"))
         (rule "concrete_or_1" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "allLeft" (formula "12") (inst "t=self.min@(maze.Highscore)"))
         (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "1"))
         (rule "concrete_not_1" (formula "12") (term "1"))
         (rule "concrete_or_4" (formula "12"))
         (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
         (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
         (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "12") (term "0,0,1"))
         (rule "leq_literals" (formula "12") (term "0,1"))
         (rule "concrete_and_2" (formula "12") (term "1"))
         (rule "concrete_or_4" (formula "12"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (rule "concrete_and_2" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
   )
   (branch " Null Reference (highscores = null)"
      (builtin "Update Simplification" (formula "1"))
      (rule "close" (formula "20") (ifseqformula "1"))
   )
   (branch " Index Out of Bounds (highscores != null, but min Out of Bounds!)"
      (builtin "Update Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "cut_direct" (formula "1") (term "0"))
      (branch " CUT: self.min >= self.capacity TRUE"
         (rule "concrete_or_1" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "array_length_non_negative_3" (formula "5") (term "0") (ifseqformula "2") (ifseqformula "18") (ifseqformula "20"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
         (rule "leq_literals" (formula "5") (term "0"))
         (rule "concrete_or_1" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "throwUnfold" (formula "23") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
         (rule "variableDeclarationAssign" (formula "23") (term "11"))
         (rule "variableDeclaration" (formula "23") (term "11") (newnames "v_ArrayIndexOutOfBoundsException"))
         (rule "instanceCreationAssignment" (formula "23") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_1"))
         (rule "variableDeclarationAssign" (formula "23") (term "11"))
         (rule "variableDeclaration" (formula "23") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_2"))
         (rule "variableDeclaration" (formula "23") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_2"))
         (rule "methodBodyExpand" (formula "23") (term "11"))
         (rule "variableDeclaration" (formula "23") (term "11") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "23") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_3"))
         (rule "variableDeclaration" (formula "23") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_3"))
         (rule "allocateInstance" (formula "23") (term "11") (inst "#v0=var"))
         (builtin "Update Simplification" (formula "23"))
         (rule "blockEmpty" (formula "23") (term "15"))
         (rule "assignment_instance_field_of_this" (formula "23") (term "15"))
         (builtin "Update Simplification" (formula "23"))
         (rule "polySimp_addComm0" (formula "23") (term "4"))
         (rule "methodBodyExpand" (formula "23") (term "15"))
         (rule "assignment_instance_field_of_this" (formula "23") (term "15"))
         (builtin "Update Simplification" (formula "23"))
         (rule "assignment_instance_field_of_this" (formula "23") (term "17"))
         (builtin "Update Simplification" (formula "23"))
         (rule "methodCallWithinClass" (formula "23") (term "19"))
         (rule "methodBodyExpand" (formula "23") (term "19"))
         (rule "methodCallSuper" (formula "23") (term "19"))
         (rule "nextToCreate_non_negative" (formula "23") (term "0,7") (ifseqformula "2"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallSuper" (formula "24") (term "19"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallSuper" (formula "24") (term "19"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallSuper" (formula "24") (term "19"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallSuper" (formula "24") (term "19"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallEmpty" (formula "24") (term "19"))
         (rule "blockEmpty" (formula "24") (term "19"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "19"))
         (builtin "Update Simplification" (formula "24"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "21"))
         (builtin "Update Simplification" (formula "24"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "blockEmpty" (formula "24") (term "23"))
         (rule "methodCallReturnIgnoreResult" (formula "24") (term "23"))
         (rule "methodCallReturn" (formula "24") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "23"))
         (builtin "Update Simplification" (formula "24"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "blockEmpty" (formula "24") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "23"))
         (builtin "Update Simplification" (formula "24"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallSuper" (formula "24") (term "23"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallSuper" (formula "24") (term "23"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallSuper" (formula "24") (term "23"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallSuper" (formula "24") (term "23"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallSuper" (formula "24") (term "23"))
         (rule "methodBodyExpand" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "blockEmpty" (formula "24") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "23"))
         (builtin "Update Simplification" (formula "24"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "23"))
         (builtin "Update Simplification" (formula "24"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "methodCallEmpty" (formula "24") (term "23"))
         (rule "blockEmpty" (formula "24") (term "23"))
         (rule "assignment_write_attribute_primitive" (formula "24") (term "23"))
         (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_1 != null)"
            (builtin "Update Simplification" (formula "25"))
            (builtin "Update Simplification" (formula "24"))
            (rule "repository_object_non_null" (formula "24"))
            (rule "false_right" (formula "24"))
            (rule "assignment_instance_field_of_this" (formula "24") (term "23"))
            (builtin "Update Simplification" (formula "24"))
            (rule "methodCallParamThrow" (formula "24") (term "23"))
            (builtin "Update Simplification" (formula "24"))
            (rule "tryCatchThrow" (formula "24") (term "21"))
            (rule "ifElseUnfold" (formula "24") (term "21") (inst "#boolv=b"))
            (rule "variableDeclaration" (formula "24") (term "21") (newnames "b_2"))
            (rule "equality_comparison_new" (formula "24") (term "21"))
            (builtin "Update Simplification" (formula "24"))
            (rule "repository_object_non_null" (formula "24") (term "0,0"))
            (rule "concrete_not_2" (formula "24") (term "0"))
            (rule "ifthenelse_true_for" (formula "24"))
            (rule "assignment_instance_field_of_this" (formula "24") (term "21"))
            (builtin "Update Simplification" (formula "24"))
            (rule "ifElse" (formula "24") (term "22"))
            (builtin "Update Simplification" (formula "24"))
            (rule "boolean_not_equal_2" (formula "24") (term "0"))
            (rule "ifthenelse_false_for" (formula "24"))
            (rule "elim_double_block" (formula "24") (term "21"))
            (rule "ifElse" (formula "24") (term "21"))
            (builtin "Update Simplification" (formula "24"))
            (rule "repository_object_non_null" (formula "24") (term "0,0,0"))
            (rule "ifthenelse_false" (formula "24") (term "0,0"))
            (rule "elim_double_block" (formula "24") (term "21,1"))
            (rule "variableDeclaration" (formula "24") (term "21,1") (newnames "e"))
            (rule "assignment" (formula "24") (term "21,1"))
            (builtin "Update Simplification" (formula "24"))
            (rule "assignment_instance_field_of_this" (formula "24") (term "21,1"))
            (builtin "Update Simplification" (formula "24"))
            (rule "blockThrow" (formula "24") (term "21,2"))
            (rule "throwDiamond" (formula "24") (term "21,2"))
            (builtin "Update Simplification" (formula "24"))
            (rule "instanceof_static_type" (formula "24") (term "0,0"))
            (rule "boolean_equal" (formula "24") (term "0"))
            (rule "ifthenelse_true_for" (formula "24"))
            (rule "emptyModality" (formula "24") (term "20"))
            (builtin "Update Simplification" (formula "24"))
            (rule "repository_object_non_null" (formula "24") (term "1"))
            (rule "concrete_and_4" (formula "24"))
            (rule "false_right" (formula "24"))
            (rule "allLeft" (formula "11") (inst "t=self"))
            (rule "replace_known_left" (formula "11") (term "0,1,0,0,0") (ifseqformula "17"))
            (rule "concrete_not_1" (formula "11") (term "1,0,0,0"))
            (rule "concrete_or_4" (formula "11") (term "0,0,0"))
            (rule "replace_known_right" (formula "11") (term "1,0,0,0") (ifseqformula "23"))
            (rule "concrete_or_4" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
            (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "19"))
            (rule "allLeft" (formula "15") (inst "t=self"))
            (rule "exLeft" (formula "15") (inst "sk=i_0"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "15") (term "1,0"))
            (rule "concrete_or_4" (formula "15") (term "0"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "15"))
            (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "16") (term "1,0"))
            (rule "concrete_or_4" (formula "16") (term "0"))
            (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "16"))
            (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "22") (term "1,0,0"))
            (rule "concrete_or_4" (formula "22") (term "0,0"))
            (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "22") (term "0"))
            (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "21") (term "0,0"))
            (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "21") (term "0,0"))
            (rule "concrete_or_2" (formula "21") (term "0"))
            (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "20") (term "1,0,0"))
            (rule "concrete_or_4" (formula "20") (term "0,0"))
            (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "19") (term "0,0"))
            (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "31"))
            (rule "concrete_or_4" (formula "18") (term "0,0"))
            (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "18") (term "1,0"))
            (rule "concrete_or_4" (formula "18") (term "0"))
            (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "31"))
            (rule "concrete_or_4" (formula "17") (term "0,0"))
            (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "17") (term "1,0"))
            (rule "concrete_or_4" (formula "17") (term "0"))
            (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "25"))
            (rule "concrete_not_1" (formula "19") (term "0,0"))
            (rule "concrete_or_2" (formula "19") (term "0"))
            (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "31"))
            (rule "concrete_or_2" (formula "20") (term "0"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
            (rule "inEqSimp_homoInEq1" (formula "16"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "27"))
            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "27"))
            (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "27"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "mul_literals" (formula "16") (term "0,1"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1"))
            (rule "inEqSimp_contradEq7" (formula "19") (term "0,1") (ifseqformula "4"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,1"))
            (rule "leq_literals" (formula "19") (term "0,0,1"))
            (rule "concrete_and_2" (formula "19") (term "0,1"))
            (rule "concrete_not_2" (formula "19") (term "1"))
            (rule "concrete_or_3" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "inEqSimp_contradEq7" (formula "19") (term "1") (ifseqformula "4"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,0,1"))
            (rule "leq_literals" (formula "19") (term "0,1"))
            (rule "concrete_and_2" (formula "19") (term "1"))
            (rule "concrete_or_4" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "28"))
            (rule "concrete_not_2" (formula "18") (term "1"))
            (rule "concrete_or_3" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "27"))
            (rule "concrete_not_2" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
            (rule "concrete_not_2" (formula "18") (term "0"))
            (rule "concrete_or_1" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "25"))
            (rule "add_literals" (formula "15") (term "1"))
            (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "15"))
            (rule "add_zero_left" (formula "25") (term "0,0"))
            (rule "mul_literals" (formula "25") (term "0,0"))
            (rule "leq_literals" (formula "25") (term "0"))
            (rule "concrete_and_2" (formula "25"))
            (rule "false_right" (formula "25"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "16"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch " Null Reference (v_ArrayIndexOutOfBoundsException_1 = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "repository_object_non_null" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch " CUT: self.min >= self.capacity FALSE"
         (rule "concrete_or_2" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "20"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "array_length_non_negative_3" (formula "6") (term "0") (ifseqformula "3") (ifseqformula "19") (ifseqformula "21"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "4"))
         (rule "leq_literals" (formula "6") (term "0"))
         (rule "concrete_or_1" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "throwUnfold" (formula "24") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException"))
         (rule "variableDeclarationAssign" (formula "24") (term "11"))
         (rule "variableDeclaration" (formula "24") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_4"))
         (rule "instanceCreationAssignment" (formula "24") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_5"))
         (rule "variableDeclarationAssign" (formula "24") (term "11"))
         (rule "variableDeclaration" (formula "24") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_5"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_6"))
         (rule "variableDeclaration" (formula "24") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_6"))
         (rule "methodBodyExpand" (formula "24") (term "11"))
         (rule "variableDeclaration" (formula "24") (term "11") (newnames "__NEW___1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "24") (term "11") (inst "#v0=v_ArrayIndexOutOfBoundsException_7"))
         (rule "variableDeclaration" (formula "24") (term "11") (newnames "v_ArrayIndexOutOfBoundsException_7"))
         (rule "allocateInstance" (formula "24") (term "11") (inst "#v0=var"))
         (builtin "Update Simplification" (formula "24"))
         (rule "blockEmpty" (formula "24") (term "15"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
         (builtin "Update Simplification" (formula "24"))
         (rule "polySimp_addComm0" (formula "24") (term "4"))
         (rule "methodBodyExpand" (formula "24") (term "15"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "15"))
         (builtin "Update Simplification" (formula "24"))
         (rule "assignment_instance_field_of_this" (formula "24") (term "17"))
         (builtin "Update Simplification" (formula "24"))
         (rule "methodCallWithinClass" (formula "24") (term "19"))
         (rule "methodBodyExpand" (formula "24") (term "19"))
         (rule "methodCallSuper" (formula "24") (term "19"))
         (rule "nextToCreate_non_negative" (formula "24") (term "0,0") (ifseqformula "3"))
         (rule "methodBodyExpand" (formula "25") (term "19"))
         (rule "methodCallSuper" (formula "25") (term "19"))
         (rule "methodBodyExpand" (formula "25") (term "19"))
         (rule "methodCallSuper" (formula "25") (term "19"))
         (rule "methodBodyExpand" (formula "25") (term "19"))
         (rule "methodCallSuper" (formula "25") (term "19"))
         (rule "methodBodyExpand" (formula "25") (term "19"))
         (rule "methodCallSuper" (formula "25") (term "19"))
         (rule "methodBodyExpand" (formula "25") (term "19"))
         (rule "methodCallEmpty" (formula "25") (term "19"))
         (rule "blockEmpty" (formula "25") (term "19"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "19"))
         (builtin "Update Simplification" (formula "25"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "21"))
         (builtin "Update Simplification" (formula "25"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "blockEmpty" (formula "25") (term "23"))
         (rule "methodCallReturnIgnoreResult" (formula "25") (term "23"))
         (rule "methodCallReturn" (formula "25") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "23"))
         (builtin "Update Simplification" (formula "25"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "blockEmpty" (formula "25") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "23"))
         (builtin "Update Simplification" (formula "25"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallSuper" (formula "25") (term "23"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallSuper" (formula "25") (term "23"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallSuper" (formula "25") (term "23"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallSuper" (formula "25") (term "23"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallSuper" (formula "25") (term "23"))
         (rule "methodBodyExpand" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "blockEmpty" (formula "25") (term "23"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "23"))
         (builtin "Update Simplification" (formula "25"))
         (rule "assignment_instance_field_of_this" (formula "25") (term "23"))
         (builtin "Update Simplification" (formula "25"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "methodCallEmpty" (formula "25") (term "23"))
         (rule "blockEmpty" (formula "25") (term "23"))
         (rule "assignment_write_attribute_primitive" (formula "25") (term "23"))
         (branch " Normal Execution (v_ArrayIndexOutOfBoundsException_5 != null)"
            (builtin "Update Simplification" (formula "26"))
            (builtin "Update Simplification" (formula "25"))
            (rule "repository_object_non_null" (formula "25"))
            (rule "false_right" (formula "25"))
            (rule "assignment_instance_field_of_this" (formula "25") (term "23"))
            (builtin "Update Simplification" (formula "25"))
            (rule "methodCallParamThrow" (formula "25") (term "23"))
            (builtin "Update Simplification" (formula "25"))
            (rule "tryCatchThrow" (formula "25") (term "21"))
            (rule "ifElseUnfold" (formula "25") (term "21") (inst "#boolv=b"))
            (rule "variableDeclaration" (formula "25") (term "21") (newnames "b_3"))
            (rule "equality_comparison_new" (formula "25") (term "21"))
            (builtin "Update Simplification" (formula "25"))
            (rule "repository_object_non_null" (formula "25") (term "0,0"))
            (rule "concrete_not_2" (formula "25") (term "0"))
            (rule "ifthenelse_true_for" (formula "25"))
            (rule "assignment_instance_field_of_this" (formula "25") (term "21"))
            (builtin "Update Simplification" (formula "25"))
            (rule "ifElseSplit" (formula "25"))
            (branch " if b_3 true"
               (builtin "Update Simplification" (formula "26"))
               (builtin "Update Simplification" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch " if b_3 false"
               (rule "false_to_not_true" (formula "1") (term "22"))
               (builtin "Update Simplification" (formula "26"))
               (builtin "Update Simplification" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "0"))
               (rule "concrete_not_2" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "elim_double_block" (formula "25") (term "21"))
               (rule "ifElseSplit" (formula "25"))
               (branch " if v_ArrayIndexOutOfBoundsException_4 instanceof  java.lang.Throwable true"
                  (builtin "Update Simplification" (formula "1"))
                  (rule "repository_object_non_null" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "elim_double_block" (formula "26") (term "21"))
                  (rule "variableDeclaration" (formula "26") (term "21") (newnames "e_1"))
                  (rule "assignment_instance_field_of_this" (formula "26") (term "21"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "assignment" (formula "26") (term "21"))
                  (builtin "Update Simplification" (formula "26"))
                  (rule "instanceof_static_type" (formula "1") (term "0"))
                  (rule "boolean_equal" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "emptyModality" (formula "25") (term "20"))
                  (builtin "Update Simplification" (formula "25"))
                  (rule "repository_object_non_null" (formula "25") (term "1"))
                  (rule "concrete_and_4" (formula "25"))
                  (rule "false_right" (formula "25"))
                  (rule "allLeft" (formula "15") (inst "t=self"))
                  (rule "exLeft" (formula "15") (inst "sk=i_1"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "16") (term "0"))
                  (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "16") (term "0"))
                  (rule "concrete_or_2" (formula "16"))
                  (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "15") (term "1,0"))
                  (rule "concrete_or_4" (formula "15") (term "0"))
                  (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "15"))
                  (rule "replace_known_left" (formula "22") (term "0,1,0,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "22") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "22") (term "0,0"))
                  (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "22") (term "0"))
                  (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "21") (term "0,0"))
                  (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "21") (term "0,0"))
                  (rule "concrete_or_2" (formula "21") (term "0"))
                  (rule "replace_known_left" (formula "20") (term "0,1,0,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "20") (term "1,0,0"))
                  (rule "concrete_or_4" (formula "20") (term "0,0"))
                  (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "31"))
                  (rule "concrete_or_4" (formula "18") (term "0,0"))
                  (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "19") (term "0,0"))
                  (rule "replace_known_right" (formula "17") (term "1,0,0") (ifseqformula "31"))
                  (rule "concrete_or_4" (formula "17") (term "0,0"))
                  (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "17") (term "1,0"))
                  (rule "concrete_or_4" (formula "17") (term "0"))
                  (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "18") (term "1,0"))
                  (rule "concrete_or_4" (formula "18") (term "0"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "31"))
                  (rule "concrete_or_2" (formula "20") (term "0"))
                  (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "25"))
                  (rule "concrete_not_1" (formula "19") (term "0,0"))
                  (rule "concrete_or_2" (formula "19") (term "0"))
                  (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "27"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                  (rule "inEqSimp_contradEq7" (formula "18") (term "0,1") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,1"))
                  (rule "leq_literals" (formula "18") (term "0,0,1"))
                  (rule "concrete_and_2" (formula "18") (term "0,1"))
                  (rule "concrete_not_2" (formula "18") (term "1"))
                  (rule "concrete_or_3" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_contradEq7" (formula "18") (term "1") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1"))
                  (rule "leq_literals" (formula "18") (term "0,1"))
                  (rule "concrete_and_2" (formula "18") (term "1"))
                  (rule "concrete_or_4" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "27"))
                  (rule "concrete_not_2" (formula "17") (term "1"))
                  (rule "concrete_or_3" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "26"))
                  (rule "concrete_not_2" (formula "18") (term "0"))
                  (rule "concrete_or_1" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "25"))
                  (rule "concrete_not_2" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "24"))
                  (rule "add_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "3"))
                  (rule "mul_literals" (formula "24") (term "1,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "qeq_literals" (formula "24") (term "0"))
                  (rule "concrete_and_2" (formula "24"))
                  (rule "false_right" (formula "24"))
                  (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (rule "concrete_and_2" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
               (branch " if v_ArrayIndexOutOfBoundsException_4 instanceof  java.lang.Throwable false"
                  (rule "false_to_not_true" (formula "1") (term "21"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "repository_object_non_null" (formula "22") (term "0,0"))
                  (rule "ifthenelse_false" (formula "22") (term "0"))
                  (rule "elim_double_block" (formula "26") (term "21"))
                  (rule "throwDiamond" (formula "26") (term "21"))
                  (rule "false_right" (formula "26"))
                  (rule "instanceof_static_type" (formula "22") (term "0"))
                  (rule "boolean_equal" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
         )
         (branch " Null Reference (v_ArrayIndexOutOfBoundsException_5 = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "repository_object_non_null" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch " Null Reference (_rec = null)"
   (builtin "Update Simplification" (formula "1"))
   (rule "close" (formula "21") (ifseqformula "1"))
)
)

}
