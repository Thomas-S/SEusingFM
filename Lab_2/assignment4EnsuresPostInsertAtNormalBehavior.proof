\settings {
"#Proof-Settings-Config-File
#Thu Feb 16 16:20:20 CET 2012
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[DecisionProcedure]showSMTResDialog=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[DecisionProcedure]ActiveRule=SIMPLIFY_PROVER
[DecisionProcedure]multprovers=Z3\\=true\\:Simplify\\=true\\:Yices\\=true\\:CVC3\\=true
[Choice]DefaultChoices=transactions-transactions\\:transactionsOff , throughout-throughout\\:toutOff , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOff , rtsj-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool , memory-memory\\:off , javacard-javacard\\:jcOff
[TacletTranslation]filename=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[View]HideIntermediateProofsteps=true
[SimultaneousUpdateSimplifier]EagerSimplification=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[DecisionProcedure]WeakenSMTTranslation=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DecisionProcedure]savefile_path=
[General]StupidMode=true
[DecisionProcedure]SolverTimeout=60
[General]UseJML=true
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[DecisionProcedure]pd_mode=0
[DecisionProcedure]Exec=Z3\\=z3 -smt -m %f\\:Simplify\\=simplify.exe %f\\:Yices\\=yices -tc -e -smt %f\\:CVC3\\=cvc3 -lang smt +model %f
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[General]SoundNotification=false
[DecisionProcedure]cache_goals=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , assertions-assertions\\:on-assertions\\:off-assertions\\:safe , programRules-programRules\\:Java-programRules\\:ODL , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , rtsj-rtsj\\:on-rtsj\\:off , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , stringRules-stringRules\\:withStringPool-stringRules\\:withoutStringPool , memory-memory\\:off-memory\\:on , javacard-javacard\\:jcOff-javacard\\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[TacletTranslation]maxGeneric=3
"
}

\javaSource "C:\\Users\\dome\\UNI\\WS_11_12\\SEFM\\SEFM_Git\\Lab_2\\MazeLab";



\programVariables {
maze.Record[] _in;
maze.Record[] in;
java.lang.Throwable exc;
maze.HighscoreSorted self;
int _at;
int at;
maze.Record _rec;
maze.Record rec;
}

\functions {
\nonRigid[LocationNoHeap] maze.Record[] inAtPre_0;
\nonRigid[LocationNoHeap] maze.Record getAtPre_0(maze.Record[],int);
}

\predicates {
}

\problem {
     inReachableState
   & (  \forall maze.HighscoreSorted m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> \forall jint i; 
                (   inInt(i)
                 -> \forall jint j; 
                      (     i >= (jint)(0)
                          & (  j >= (jint)(0)
                             & (  j <= i
                                &    i
                                  <  m_0.size@(maze.Highscore)))
                          & inInt(j)
                       ->    m_0.highscores@(maze.Highscore)[j].score@(maze.Record)
                          <= m_0.highscores@(maze.Highscore)[i].score@(maze.Record))))
      & \forall maze.HighscoreSorted m_0; 
          (     m_0.<created>@(java.lang.Object) = TRUE
              & !m_0 = null
           -> \forall jint i; 
                (   inInt(i)
                 -> \forall jint j; 
                      (     i >= (jint)(0)
                          & (  j >= (jint)(0)
                             & (  j <= i
                                &    i
                                  <  m_0.size@(maze.Highscore)))
                          & inInt(j)
                       ->    m_0.highscores@(maze.Highscore)[j].score@(maze.Record)
                          <= m_0.highscores@(maze.Highscore)[i].score@(maze.Record)))))
   & (  self.<created>@(java.lang.Object) = TRUE
      & !self = null)
   & (  (  rec.<created>@(java.lang.Object) = TRUE
         | rec = null)
      & inInt(at)
      & (  in.<created>@(java.lang.Object) = TRUE
         | in = null))
   & (!in = null & (at >= (jint)(0) & at <  in.length))
-> {_at:=at ||
     _in:=in ||
     _rec:=rec ||
     \for (int x1; maze.Record[] x0) getAtPre_0(x0,x1):=
     x0[x1] ||
     inAtPre_0:=in}
     \<{
         exc=null;try {
           self.insertAt(_rec,_at,_in)@maze.HighscoreSorted;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\> (  in[at] = rec
            & \forall jint i; 
                (   i >  at & i <  in.length & inInt(i)
                 ->   in[i]
                    = getAtPre_0(inAtPre_0,
                                 (jint)(javaSubInt(i,
                                                   (jint)(1)))))
            & exc = null)

}

\proof {
(keyLog "0" (keyUser "dome" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "28298")

(branch "dummy ID"
(rule "eq_and" (formula "1") (term "1,0,0,0,0"))
(rule "inInt" (formula "1") (term "1,0,1,0,0"))
(rule "inInt" (formula "1") (term "1,0,0,1,0,0,7,1"))
(rule "inInt" (formula "1") (term "1,0,0,1,0,1,0,1,0,0,0,0"))
(rule "inInt" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,1,0,0"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,0,0,7,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,1,0,1,0,1,0,0,0,0"))
(rule "concrete_impl_1" (formula "1") (term "0,1,0,1,0,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "assignment_instance_field_of_this" (formula "10") (term "7"))
(builtin "Update Simplification" (formula "10"))
(rule "castDelInt" (formula "6") (term "1"))
(rule "castDelInt" (formula "2") (term "1,0,1,0,0,0,1,0"))
(rule "castDelInt" (formula "2") (term "1,0,0,0,0,1,0"))
(rule "castDelInt" (formula "10") (term "1,0,1,1,1,0,1,0,0,8"))
(rule "castDelInt" (formula "10") (term "1,1,1,0,1,0,0,8"))
(rule "eqSymm" (formula "10") (term "1,0,1,0,0,8"))
(rule "translateJavaSubInt" (formula "10") (term "1,0,1,0,1,0,0,8"))
(rule "replace_known_right" (formula "5") (term "1") (ifseqformula "9"))
(rule "concrete_or_4" (formula "5"))
(rule "polySimp_elimSub" (formula "10") (term "1,0,1,0,1,0,0,8"))
(rule "mul_literals" (formula "10") (term "1,1,0,1,0,1,0,0,8"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "1,1,1,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,1,0,0,0,1,0"))
(rule "inEqSimp_gtToGeq" (formula "10") (term "0,0,0,1,0,0,8"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0,0,8"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,0,8"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,0,8"))
(rule "polySimp_addComm0" (formula "10") (term "1,0,1,0,1,0,0,8"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1,0,0,8"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0,0,8"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0,0,8"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0,0,8"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0,0,8"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0,0,8"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,0,8"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,0,8"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,0,8"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,0,8"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,0,8"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,0,8"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,1,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "0,1,1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "2") (term "0,1,1,1,0,0,0,1,0"))
(rule "nnf_imp2or" (formula "2") (term "0"))
(rule "nnf_notAnd" (formula "2") (term "0,0"))
(rule "double_not" (formula "2") (term "1,0,0"))
(rule "nnf_imp2or" (formula "2") (term "0,0,1,0"))
(rule "nnf_imp2or" (formula "10") (term "0,1,0,0,8"))
(rule "nnf_notAnd" (formula "2") (term "0,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,1,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "2") (term "0,0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,1,0"))
(rule "mul_literals" (formula "2") (term "1,0,0,0,0,1,0"))
(rule "nnf_notAnd" (formula "10") (term "0,0,1,0,0,8"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,0,8"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,0,8"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,0,8"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,0,8"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,8"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,0,8"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,0,8"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0,8"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,0,8"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,0,8"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,8"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,8"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0,8"))
(rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,8"))
(rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,0,8"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,0,8"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,8"))
(rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,1,0,0,8"))
(rule "nnf_notAnd" (formula "2") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "2") (term "0,1,0,0,0,1,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0,0,0,1,0"))
(rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,1,0,0,0,1,0"))
(rule "mul_literals" (formula "2") (term "1,0,1,0,0,0,1,0"))
(rule "nnf_notAnd" (formula "2") (term "1,1,0,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "2") (term "1,1,1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,1,1,0,0,0,1,0"))
(rule "mul_literals" (formula "2") (term "0,1,0,0,1,1,1,0,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "2") (term "0,0,1,1,1,0,0,0,1,0"))
(rule "add_literals" (formula "2") (term "0,0,0,1,1,1,0,0,0,1,0"))
(rule "add_zero_left" (formula "2") (term "0,0,1,1,1,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,1,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "2") (term "1,1,1,1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "2") (term "0,1,1,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,1,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,1,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,1,1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "2") (term "1,0,1,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,1,1,0,0,0,1,0"))
(rule "mul_literals" (formula "2") (term "0,1,0,1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "2") (term "1,1,0,1,1,0,0,0,1,0"))
(rule "commute_or" (formula "2") (term "0,0"))
(rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,0"))
(rule "shift_paren_or" (formula "2") (term "0,0,0,1,0"))
(rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0"))
(rule "cut_direct" (formula "4") (term "1"))
(branch " CUT: rec = null TRUE"
   (rule "concrete_or_3" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "applyEq" (formula "10") (term "2") (ifseqformula "4"))
   (rule "all_pull_out3" (formula "2") (term "0"))
   (rule "all_pull_out3" (formula "2") (term "0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "2") (term "0,0,0,0,0,0"))
   (rule "methodBodyExpand" (formula "10") (term "8"))
   (builtin "Update Simplification" (formula "10"))
   (rule "ifUnfold" (formula "10") (term "12") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "10") (term "12") (newnames "b"))
   (rule "equality_comparison_new" (formula "10") (term "12"))
   (builtin "Update Simplification" (formula "10"))
   (rule "assignment_instance_field_of_this" (formula "10") (term "12,2"))
   (builtin "Update Simplification" (formula "10"))
   (rule "assignment_instance_field_of_this" (formula "10") (term "12,1"))
   (builtin "Update Simplification" (formula "10"))
   (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "9"))
   (rule "concrete_not_2" (formula "10") (term "0"))
   (rule "ifthenelse_true_for" (formula "10"))
   (rule "if" (formula "10") (term "13"))
   (builtin "Update Simplification" (formula "10"))
   (rule "boolean_not_equal_2" (formula "10") (term "0"))
   (rule "ifthenelse_false_for" (formula "10"))
   (rule "ifUnfold" (formula "10") (term "12") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "10") (term "12") (newnames "b_1"))
   (rule "evaluate_lazy_or" (formula "10") (term "12"))
   (rule "ifElseUnfold" (formula "10") (term "12") (inst "#boolv=b_2"))
   (rule "variableDeclaration" (formula "10") (term "12") (newnames "b_2"))
   (rule "less_than_comparison_new" (formula "10") (term "12"))
   (builtin "Update Simplification" (formula "10"))
   (rule "assignment_instance_field_of_this" (formula "10") (term "12,2"))
   (builtin "Update Simplification" (formula "10"))
   (rule "assignment_instance_field_of_this" (formula "10") (term "12,1"))
   (builtin "Update Simplification" (formula "10"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0"))
   (rule "mul_literals" (formula "10") (term "1,0"))
   (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
   (rule "qeq_literals" (formula "10") (term "0,0"))
   (rule "concrete_and_2" (formula "10") (term "0"))
   (rule "ifthenelse_false_for" (formula "10"))
   (rule "ifElse" (formula "10") (term "13"))
   (builtin "Update Simplification" (formula "10"))
   (rule "boolean_not_equal_2" (formula "10") (term "0"))
   (rule "ifthenelse_false_for" (formula "10"))
   (rule "elim_double_block_2" (formula "10") (term "12"))
   (rule "compound_greater_equal_than_comparison_2" (formula "10") (term "12") (inst "#v1=j_1") (inst "#v0=j"))
   (rule "variableDeclarationAssign" (formula "10") (term "12"))
   (rule "variableDeclaration" (formula "10") (term "12") (newnames "j"))
   (rule "assignment" (formula "10") (term "12"))
   (builtin "Update Simplification" (formula "10"))
   (rule "variableDeclarationAssign" (formula "10") (term "13"))
   (rule "variableDeclaration" (formula "10") (term "13") (newnames "j_1"))
   (rule "assignment_read_attribute" (formula "10") (term "13"))
   (branch " Normal Execution (_in != null)"
      (builtin "Update Simplification" (formula "11"))
      (builtin "Update Simplification" (formula "10"))
      (rule "greater_equal_than_comparison_new" (formula "10") (term "14"))
      (builtin "Update Simplification" (formula "10"))
      (rule "assignment_instance_field_of_this" (formula "10") (term "12,2"))
      (builtin "Update Simplification" (formula "10"))
      (rule "assignment_instance_field_of_this" (formula "10") (term "12,1"))
      (builtin "Update Simplification" (formula "10"))
      (rule "blockEmpty" (formula "10") (term "13,1"))
      (rule "blockEmpty" (formula "10") (term "13,2"))
      (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
      (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0"))
      (rule "leq_literals" (formula "10") (term "0,0"))
      (rule "concrete_and_2" (formula "10") (term "0"))
      (rule "ifthenelse_false_for" (formula "10"))
      (rule "array_length_non_negative_3" (formula "7") (term "0") (ifseqformula "1") (ifseqformula "5") (ifseqformula "9"))
      (rule "ifSplit" (formula "11"))
      (branch " if b_1 true"
         (builtin "Update Simplification" (formula "12"))
         (builtin "Update Simplification" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch " if b_1 false"
         (rule "false_to_not_true" (formula "1") (term "13"))
         (builtin "Update Simplification" (formula "12"))
         (builtin "Update Simplification" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "0"))
         (rule "concrete_not_2" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "variableDeclarationAssign" (formula "11") (term "12"))
         (rule "variableDeclaration" (formula "11") (term "12") (newnames "start_1"))
         (rule "compound_subtraction_1" (formula "11") (term "12") (inst "#v=j"))
         (rule "variableDeclarationAssign" (formula "11") (term "12"))
         (rule "variableDeclaration" (formula "11") (term "12") (newnames "j_4"))
         (rule "assignment_read_attribute" (formula "11") (term "12"))
         (branch " Normal Execution (_in != null)"
            (builtin "Update Simplification" (formula "12"))
            (builtin "Update Simplification" (formula "11"))
            (rule "assignmentSubtractionInt" (formula "11") (term "13"))
            (builtin "Update Simplification" (formula "11"))
            (rule "translateJavaSubInt" (formula "11") (term "4"))
            (rule "polySimp_elimSub" (formula "11") (term "4"))
            (rule "mul_literals" (formula "11") (term "1,4"))
            (rule "polySimp_addComm0" (formula "11") (term "4"))
            (rule "whileInvDiamondDec2" (formula "11") (newnames "start_1_0,get_0,start_1_1,get_1,anon_0,j_5") (inst "variant=start_1") (inst "inv=  start_1 >= _at
& (  start_1 <  _in.length
   & (  \\forall jint i; 
          (     i >  start_1
              & (  i <  _in.length
                 & (i >  _at & i >  (jint)(0)))
              & inInt(i)
           ->   _in[i]
              = getAtPre_1(_inAtPre_0,
                           (jint)(javaSubInt(i,
                                             (jint)(1)))))
      & \\forall jint i; 
          (   i >  _at & i <= start_1 & inInt(i)
           -> _in[i] = getAtPre_1(_inAtPre_0, i))))
& inReachableState") (inst "#v2=j") (inst "#v1=b") (inst "#modifies={start_1,\\for int i; \\if (     (jint)(javaAddInt(_at, (jint)(1)))
                   <= i
                 &    i
                   <= (jint)(javaSubInt(_in.length,
                                        (jint)(1)))) _in[i]}"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "11"))
               (rule "inInt" (formula "11") (term "1,0,0,0,1,1,0,0"))
               (rule "inInt" (formula "11") (term "1,0,0,1,1,1,0,0"))
               (rule "eqClose" (formula "11") (term "1,0,1,1,1,0,0"))
               (rule "concrete_and_3" (formula "11") (term "0,0,0,1,1,0,0"))
               (rule "concrete_and_3" (formula "11") (term "0,0,1,1,1,0,0"))
               (rule "concrete_impl_4" (formula "11") (term "0,1,1,1,0,0"))
               (rule "castDelInt" (formula "11") (term "0,0,0,0"))
               (rule "castDelInt" (formula "11") (term "0,0,1,0,0"))
               (rule "castDelInt" (formula "11") (term "0,1"))
               (rule "castDelInt" (formula "11") (term "1,1,1,0,0,1,1,0,0"))
               (rule "castDelInt" (formula "11") (term "1,1,1,1,0,0,0,1,1,0,0"))
               (rule "castDelInt" (formula "11") (term "1,0,0,0,0,1,1,0,0"))
               (rule "castDelInt" (formula "11") (term "1,1,1,1,0,0,1,1,0,0"))
               (rule "eqSymm" (formula "11") (term "1,0,0,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "11") (term "1,0,1,0,0,1,1,0,0"))
               (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "1"))
               (rule "concrete_and_3" (formula "11") (term "0"))
               (rule "polySimp_elimSub" (formula "11") (term "1,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "11") (term "1,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "11") (term "0,0,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "11") (term "1,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,1,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "11") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor2" (formula "11") (term "0,0,1,0"))
               (rule "add_literals" (formula "11") (term "1,0,0,1,0"))
               (rule "times_zero_1" (formula "11") (term "0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,1,0"))
               (rule "concrete_and_1" (formula "11") (term "1,0"))
               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1"))
               (rule "mul_literals" (formula "11") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "11") (term "1,1,1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
               (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "8"))
               (rule "concrete_and_1" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,0,1,1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "1,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,1,1,1,0,0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,1,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,1,1,1,0,0,0,0"))
               (rule "all_unused" (formula "11") (term "1,0"))
               (rule "concrete_and_3" (formula "11") (term "0"))
               (rule "cut_direct" (formula "11") (term "1"))
               (branch " CUT: in.length >= 1 TRUE"
                  (rule "concrete_and_3" (formula "12"))
                  (rule "allRight" (formula "12") (inst "sk=i_0"))
                  (rule "orRight" (formula "12"))
                  (rule "orRight" (formula "12"))
                  (rule "orRight" (formula "13"))
                  (rule "orRight" (formula "14"))
                  (rule "inEqSimp_leqRight" (formula "12"))
                  (rule "inEqSimp_geqRight" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch " CUT: in.length >= 1 FALSE"
                  (rule "concrete_and_4" (formula "12"))
                  (rule "false_right" (formula "12"))
                  (rule "inEqSimp_geqRight" (formula "11"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "times_zero_2" (formula "9") (term "1,0"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "8") (term "0"))
                  (rule "concrete_and_2" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
            )
            (branch " Body Preserves Invariant and Decreases Variant"
               (builtin "Update Simplification" (formula "11"))
               (rule "inInt" (formula "11") (term "1,0,0,0,1,1,0,1,0,0,0,1"))
               (rule "inInt" (formula "11") (term "1,0,0,1,1,1,0,1,0,0,0,1"))
               (rule "inInt" (formula "11") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18,1,1,1"))
               (rule "inInt" (formula "11") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,18,1,1,1"))
               (rule "concrete_and_3" (formula "11") (term "0,0,0,1,1,0,1,0,0,0,1"))
               (rule "concrete_and_3" (formula "11") (term "0,0,1,1,1,0,1,0,0,0,1"))
               (rule "concrete_and_3" (formula "11") (term "0,0,1,1,1,0,1,0,0,1,1,0,18,1,1,1"))
               (rule "concrete_and_3" (formula "11") (term "0,0,0,1,1,0,1,0,0,1,1,0,18,1,1,1"))
               (rule "impRight" (formula "11"))
               (rule "impRight" (formula "12"))
               (rule "andLeft" (formula "2"))
               (rule "impRight" (formula "14"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "5"))
               (rule "variableDeclarationAssign" (formula "23") (term "18"))
               (rule "variableDeclarationAssign" (formula "1") (term "6"))
               (rule "variableDeclaration" (formula "23") (term "18") (newnames "exc_1"))
               (rule "variableDeclaration" (formula "1") (term "6") (newnames "b_6"))
               (rule "assignment_instance_field_of_this" (formula "23") (term "18"))
               (builtin "Update Simplification" (formula "23"))
               (rule "variableDeclaration" (formula "23") (term "19") (newnames "thrownExc"))
               (rule "blockThrow" (formula "23") (term "1,0,0,19"))
               (rule "methodCallThrow" (formula "23") (term "1,0,0,19"))
               (builtin "Update Simplification" (formula "23"))
               (rule "castDelInt" (formula "9") (term "1"))
               (rule "castDelInt" (formula "2") (term "1,0,1,1,3"))
               (rule "castDelInt" (formula "2") (term "1,0,0,0,3"))
               (rule "castDelInt" (formula "2") (term "1,0,1,1,7"))
               (rule "castDelInt" (formula "2") (term "1,0,0,0,7"))
               (rule "castDelInt" (formula "7") (term "1,1,0"))
               (rule "castDelInt" (formula "7") (term "0,0,0"))
               (rule "castDelInt" (formula "6") (term "1,0,1,1,0,0,1,0"))
               (rule "castDelInt" (formula "5") (term "1,1,1,1,0,0"))
               (rule "castDelInt" (formula "5") (term "1,0,1,1,1,0"))
               (rule "castDelInt" (formula "5") (term "1,0,1,1,0,0,1,0"))
               (rule "castDelInt" (formula "6") (term "0,0,0,0,1,0"))
               (rule "castDelInt" (formula "5") (term "1,0,0,0,0,0,1,0"))
               (rule "castDelInt" (formula "1") (term "0,0,2"))
               (rule "castDelInt" (formula "1") (term "1,1,2"))
               (rule "castDelInt" (formula "23") (term "1,0,1,1,6"))
               (rule "castDelInt" (formula "23") (term "0,0,6"))
               (rule "castDelInt" (formula "23") (term "1,0,1,1,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "23") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "23") (term "1,0,1,1,1,0,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "2") (term "1,1,3"))
               (rule "castDelInt" (formula "2") (term "0,0,3"))
               (rule "castDelInt" (formula "2") (term "1,1,7"))
               (rule "castDelInt" (formula "2") (term "0,0,7"))
               (rule "castDelInt" (formula "7") (term "1,1,1,0"))
               (rule "castDelInt" (formula "7") (term "1,0,0,0"))
               (rule "castDelInt" (formula "6") (term "1,1,0,0,1,0"))
               (rule "castDelInt" (formula "5") (term "1,1,1,0"))
               (rule "castDelInt" (formula "5") (term "1,1,0,0,1,0"))
               (rule "castDelInt" (formula "6") (term "1,0,0,0,0,1,0"))
               (rule "castDelInt" (formula "5") (term "0,0,0,0,1,0"))
               (rule "castDelInt" (formula "1") (term "1,0,0,2"))
               (rule "castDelInt" (formula "1") (term "1,1,1,2"))
               (rule "castDelInt" (formula "23") (term "1,1,6"))
               (rule "castDelInt" (formula "23") (term "1,0,0,6"))
               (rule "castDelInt" (formula "23") (term "1,1,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "23") (term "1,1,1,0,0,0,1,1,0,18"))
               (rule "castDelInt" (formula "23") (term "0,0,1,0,0,0,1,1,0,18"))
               (rule "eqSymm" (formula "12") (term "0"))
               (rule "eqSymm" (formula "23") (term "1,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "translateJavaSubInt" (formula "2") (term "1,1,3"))
               (rule "translateJavaAddInt" (formula "2") (term "0,0,3"))
               (rule "translateJavaSubInt" (formula "2") (term "1,1,7"))
               (rule "translateJavaAddInt" (formula "2") (term "0,0,7"))
               (rule "translateJavaSubInt" (formula "7") (term "1,1,0"))
               (rule "translateJavaAddInt" (formula "7") (term "0,0,0"))
               (rule "translateJavaSubInt" (formula "6") (term "1,1,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "5") (term "1,1,1,0"))
               (rule "translateJavaSubInt" (formula "5") (term "1,1,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "6") (term "0,0,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "5") (term "0,0,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "1") (term "0,0,2"))
               (rule "translateJavaSubInt" (formula "1") (term "1,1,2"))
               (rule "translateJavaSubInt" (formula "23") (term "1,1,6"))
               (rule "translateJavaAddInt" (formula "23") (term "0,0,6"))
               (rule "eqSymm" (formula "23") (term "1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "translateJavaSubInt" (formula "23") (term "1,1,1,0,0,0,1,1,0,18"))
               (rule "translateJavaAddInt" (formula "23") (term "0,0,1,0,0,0,1,1,0,18"))
               (rule "translateJavaSubInt" (formula "23") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "inEqSimp_gtToGeq" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "5") (term "0,1,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "23") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_gtToGeq" (formula "23") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0,18"))
               (rule "inEqSimp_gtToGeq" (formula "23") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,3"))
               (rule "mul_literals" (formula "2") (term "1,1,1,3"))
               (rule "polySimp_elimSub" (formula "2") (term "1,1,7"))
               (rule "mul_literals" (formula "2") (term "1,1,1,7"))
               (rule "polySimp_elimSub" (formula "7") (term "1,1,0"))
               (rule "mul_literals" (formula "7") (term "1,1,1,0"))
               (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "6") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0"))
               (rule "mul_literals" (formula "5") (term "1,1,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "5") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "1,0,0,1,1,1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0,1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "5") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,2"))
               (rule "mul_literals" (formula "1") (term "1,1,1,2"))
               (rule "polySimp_elimSub" (formula "23") (term "1,1,6"))
               (rule "mul_literals" (formula "23") (term "1,1,1,6"))
               (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0,1,1,0,18"))
               (rule "inEqSimp_gtToGeq" (formula "23") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimSub" (formula "23") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,3"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,7"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,2"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,6"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0,0,1,1,0,18"))
               (rule "inEqSimp_homoInEq0" (formula "9"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,3"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1,7"))
               (rule "polySimp_addComm0" (formula "7") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,2"))
               (rule "polySimp_addComm0" (formula "23") (term "1,1,6"))
               (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0,0,0,1,1,0,18"))
               (rule "polySimp_addComm0" (formula "23") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2") (term "0,3"))
               (rule "inEqSimp_commuteLeq" (formula "2") (term "0,7"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,2"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,6"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0,0,1,1,0,18"))
               (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "10"))
               (rule "applyEq" (formula "6") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "23") (term "7") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "1") (term "1,1,0,2") (ifseqformula "10"))
               (rule "applyEq" (formula "1") (term "0,1,1,1,2") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "1") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "0,9") (ifseqformula "11"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "2") (term "0,6") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "0,1,1,1,6") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "6") (term "0,1,1,1,0,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "17") (ifseqformula "11"))
               (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "2") (term "1,1,0,3") (ifseqformula "10"))
               (rule "applyEq" (formula "7") (term "0,1,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "10"))
               (rule "applyEq" (formula "23") (term "10") (ifseqformula "11"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "0,1,1,1,0,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "2") (term "0,1,1,1,3") (ifseqformula "11"))
               (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "3") (term "1") (ifseqformula "10"))
               (rule "applyEq" (formula "1") (term "0,5") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "22") (term "0") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "1,1,0,6") (ifseqformula "10"))
               (rule "applyEq" (formula "2") (term "4") (ifseqformula "11"))
               (rule "applyEq" (formula "23") (term "0") (ifseqformula "10"))
               (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "7") (term "1") (ifseqformula "11"))
               (rule "applyEq" (formula "7") (term "0,3") (ifseqformula "11"))
               (rule "applyEq" (formula "1") (term "3") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "0,1,0,0,0,1,1,0,0") (ifseqformula "10"))
               (rule "applyEq" (formula "6") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
               (rule "applyEq" (formula "5") (term "0,2,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "5") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "6") (term "0,2,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "6") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "5") (term "1,1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1"))
               (rule "polySimp_rightDist" (formula "9") (term "1"))
               (rule "mul_literals" (formula "9") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
               (rule "nnf_imp2or" (formula "4") (term "0"))
               (rule "nnf_imp2or" (formula "5") (term "0"))
               (rule "nnf_notAnd" (formula "4") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "5") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "4") (term "1,0,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0"))
               (rule "nnf_imp2or" (formula "22") (term "0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "nnf_notAnd" (formula "4") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "1,0,0,1,1,1,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,1,1,1,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "22") (term "0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
               (rule "nnf_notAnd" (formula "22") (term "0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "greater_than_comparison_new" (formula "1") (term "6"))
               (builtin "Update Simplification" (formula "1"))
               (rule "assignment_instance_field_of_this" (formula "1") (term "4,1"))
               (builtin "Update Simplification" (formula "1"))
               (rule "methodCallEmpty" (formula "1") (term "5,1"))
               (rule "assignment_instance_field_of_this" (formula "1") (term "4,2"))
               (builtin "Update Simplification" (formula "1"))
               (rule "methodCallEmpty" (formula "1") (term "5,2"))
               (rule "inEqSimp_gtToGeq" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inReachableStateExpand" (formula "6"))
               (builtin "Update Simplification" (formula "6"))
               (rule "eq_imp" (formula "6") (term "0,0,1"))
               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "12"))
               (rule "concrete_impl_1" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "elim_forall12" (formula "7") (term "0,1,0"))
               (rule "elim_forall8" (formula "7") (term "1,0"))
               (rule "eqClose" (formula "7") (term "1,0,0,0,0,1,0,1,0"))
               (rule "eqClose" (formula "7") (term "1,0,0,1,1,0,1,0"))
               (rule "eqClose" (formula "7") (term "1,0,1,1,1,0"))
               (rule "concrete_and_3" (formula "7") (term "0,0,0,0,1,0,1,0"))
               (rule "concrete_and_3" (formula "7") (term "0,0,1,1,0,1,0"))
               (rule "concrete_and_3" (formula "7") (term "0,1,1,1,0"))
               (rule "replace_known_left" (formula "7") (term "0,0,1,0") (ifseqformula "17"))
               (rule "concrete_impl_1" (formula "7") (term "0,1,0"))
               (rule "array_store_static_analyse" (formula "7") (term "1,1,0") (ifseqformula "22"))
               (rule "concrete_and_3" (formula "7") (term "1,0"))
               (rule "nnf_imp2or" (formula "7") (term "0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "23") (term "1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notGeq" (formula "23") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_left" (formula "23") (term "0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "polySimp_elimOne" (formula "23") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "inEqSimp_notGeq" (formula "23") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "mul_literals" (formula "23") (term "1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_literals" (formula "23") (term "0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "add_zero_left" (formula "23") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
               (rule "commute_or" (formula "4") (term "1,0,0"))
               (rule "ifthenelse_to_or_left" (formula "4") (term "1,0"))
               (rule "eqSymm" (formula "4") (term "1,1,1,0"))
               (rule "nnf_notAnd" (formula "4") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,1,0"))
               (rule "ifthenelse_to_or_left" (formula "5") (term "1,0"))
               (rule "eqClose" (formula "5") (term "1,1,1,0"))
               (rule "concrete_or_3" (formula "5") (term "1,1,0"))
               (rule "concrete_and_3" (formula "5") (term "1,0"))
               (rule "nnf_notAnd" (formula "5") (term "0,1,0"))
               (rule "inEqSimp_notLeq" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "5") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0,0,1,0"))
               (rule "commute_or" (formula "7") (term "1,0"))
               (rule "commute_or" (formula "4") (term "0,1,0,0"))
               (rule "commute_or" (formula "4") (term "1,1,0"))
               (rule "all_unused" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "tryCatchThrow" (formula "22") (term "1,0,0,18"))
               (rule "shift_paren_or" (formula "5") (term "0"))
               (rule "shift_paren_or" (formula "6") (term "0"))
               (rule "shift_paren_or" (formula "4") (term "0,0"))
               (rule "commute_or" (formula "4") (term "0,0,0"))
               (rule "shift_paren_or" (formula "5") (term "0,0"))
               (rule "commute_or_2" (formula "5") (term "0,0,0"))
               (rule "eq_or" (formula "5") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "4") (term "1,1,0"))
               (rule "commute_or" (formula "4") (term "0,1,1,0"))
               (rule "cnf_rightDist" (formula "4") (term "0"))
               (rule "distr_forallAnd" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or" (formula "5") (term "0"))
               (rule "shift_paren_or" (formula "4") (term "0"))
               (rule "shift_paren_or" (formula "4") (term "0,0"))
               (rule "commute_or_2" (formula "4") (term "0,0,0"))
               (rule "eq_or_2" (formula "4") (term "0,0"))
               (rule "commute_or_2" (formula "4") (term "0,0,0"))
               (rule "eq_or_2" (formula "4") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "5") (term "0"))
               (rule "distr_forallAnd" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "commute_or_2" (formula "6") (term "0"))
               (rule "shift_paren_or" (formula "5") (term "0"))
               (rule "commute_or_2" (formula "5") (term "0,0"))
               (rule "commute_or_2" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,0"))
               (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "5") (term "1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "5") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "5") (term "1,0,0,0,0"))
               (rule "concrete_or_3" (formula "5") (term "0,0,0,0"))
               (rule "concrete_or_1" (formula "5") (term "0,0,0"))
               (rule "concrete_or_1" (formula "5") (term "0,0"))
               (rule "concrete_or_1" (formula "5") (term "0"))
               (rule "shift_paren_or" (formula "6") (term "0,0"))
               (rule "commute_or" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0"))
               (rule "add_literals" (formula "6") (term "1,0,1,0,0"))
               (rule "times_zero_1" (formula "6") (term "0,1,0,0"))
               (rule "leq_literals" (formula "6") (term "1,0,0"))
               (rule "concrete_or_3" (formula "6") (term "0,0"))
               (rule "concrete_or_1" (formula "6") (term "0"))
               (rule "all_unused" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "ifthenelse_to_or_left" (formula "6") (term "1,0,0"))
               (rule "nnf_notAnd" (formula "6") (term "0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,0,0"))
               (rule "commute_or" (formula "6") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "6") (term "0"))
               (rule "cnf_rightDist" (formula "6") (term "1,1,0"))
               (rule "commute_or" (formula "6") (term "0,1,1,0"))
               (rule "cnf_rightDist" (formula "6") (term "0"))
               (rule "distr_forallAnd" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "commute_or_2" (formula "6") (term "0"))
               (rule "commute_or" (formula "7") (term "0"))
               (rule "shift_paren_or" (formula "6") (term "0,0"))
               (rule "eq_or" (formula "6") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "7") (term "0"))
               (rule "distr_forallAnd" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "commute_or_2" (formula "7") (term "0"))
               (rule "shift_paren_or" (formula "8") (term "0"))
               (rule "commute_or_2" (formula "8") (term "0,0"))
               (rule "shift_paren_or" (formula "7") (term "0,0"))
               (rule "commute_or_2" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "1,1,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "7") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "7") (term "1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "7") (term "1,0,0,0,0"))
               (rule "concrete_or_3" (formula "7") (term "0,0,0,0"))
               (rule "concrete_or_1" (formula "7") (term "0,0,0"))
               (rule "concrete_or_1" (formula "7") (term "0,0"))
               (rule "concrete_or_1" (formula "7") (term "0"))
               (rule "shift_paren_or" (formula "8") (term "0,0,0"))
               (rule "commute_or" (formula "8") (term "0,0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "8") (term "1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "8") (term "0,1,0,0,0"))
               (rule "leq_literals" (formula "8") (term "1,0,0,0"))
               (rule "concrete_or_3" (formula "8") (term "0,0,0"))
               (rule "concrete_or_1" (formula "8") (term "0,0"))
               (rule "concrete_or_1" (formula "8") (term "0"))
               (rule "ifthenelse_split_for" (formula "1"))
               (branch " start_1_0 >= 1 + _atAtPre_0 TRUE"
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (rule "concrete_or_1" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "all_unused" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "allLeft" (formula "11") (inst "t=_inAtPre_2"))
                  (rule "applyEq" (formula "3") (term "1,1,1,7") (ifseqformula "11"))
                  (builtin "Update Simplification" (formula "3"))
                  (rule "ifElseUnfold" (formula "23") (term "1,0,0,18") (inst "#boolv=b"))
                  (rule "variableDeclaration" (formula "23") (term "1,0,0,18") (newnames "b_10"))
                  (rule "emptyModality" (formula "2") (term "5"))
                  (builtin "Update Simplification" (formula "2"))
                  (rule "boolean_equal" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "array_length_non_negative_3" (formula "19") (term "0") (ifseqformula "12") (ifseqformula "16") (ifseqformula "21"))
                  (rule "ifUnfold" (formula "22") (term "18") (inst "#boolv=b"))
                  (rule "variableDeclaration" (formula "22") (term "18") (newnames "b_11"))
                  (rule "greater_than_comparison_new" (formula "22") (term "18"))
                  (builtin "Update Simplification" (formula "22"))
                  (rule "assignment_instance_field_of_this" (formula "22") (term "18,1"))
                  (builtin "Update Simplification" (formula "22"))
                  (rule "assignment_instance_field_of_this" (formula "22") (term "18,2"))
                  (builtin "Update Simplification" (formula "22"))
                  (rule "inEqSimp_gtToGeq" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                  (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "ifthenelse_true_for" (formula "22"))
                  (rule "ifSplit" (formula "22"))
                  (branch " if b_11 true"
                     (builtin "Update Simplification" (formula "23"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_equal" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access3" (formula "22") (term "18") (inst "#v1=v_Record") (inst "#v2=j") (inst "#v0=var"))
                     (rule "variableDeclarationAssign" (formula "22") (term "18"))
                     (rule "variableDeclaration" (formula "22") (term "18") (newnames "var"))
                     (rule "assignment" (formula "22") (term "18"))
                     (builtin "Update Simplification" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "22") (term "19"))
                     (rule "variableDeclaration" (formula "22") (term "19") (newnames "j_8"))
                     (rule "assignment_instance_field_of_this" (formula "22") (term "19"))
                     (builtin "Update Simplification" (formula "22"))
                     (rule "ifUnfold" (formula "22") (term "20") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "22") (term "20") (newnames "b_12"))
                     (rule "compound_assignment_5" (formula "22") (term "20"))
                     (rule "ifElseUnfold" (formula "22") (term "20") (inst "#boolv=b_13"))
                     (rule "variableDeclaration" (formula "22") (term "20") (newnames "b_13"))
                     (rule "compound_less_equal_than_comparison_1" (formula "22") (term "20") (inst "#v0=j_9"))
                     (rule "variableDeclarationAssign" (formula "22") (term "20"))
                     (rule "variableDeclaration" (formula "22") (term "20") (newnames "j_9"))
                     (rule "assignment_read_attribute" (formula "22") (term "20"))
                     (branch " Normal Execution (_in != null)"
                        (builtin "Update Simplification" (formula "23"))
                        (builtin "Update Simplification" (formula "22"))
                        (rule "less_equal_than_comparison_new" (formula "22") (term "21"))
                        (builtin "Update Simplification" (formula "22"))
                        (rule "assignment_instance_field_of_this" (formula "22") (term "20,1"))
                        (builtin "Update Simplification" (formula "22"))
                        (rule "assignment_instance_field_of_this" (formula "22") (term "20,2"))
                        (builtin "Update Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (rule "concrete_and_2" (formula "22") (term "0"))
                        (rule "ifthenelse_false_for" (formula "22"))
                        (rule "ifElseSplit" (formula "22"))
                        (branch " if b_13 true"
                           (builtin "Update Simplification" (formula "23"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "boolean_not_equal_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch " if b_13 false"
                           (rule "false_to_not_true" (formula "1") (term "21"))
                           (builtin "Update Simplification" (formula "23"))
                           (builtin "Update Simplification" (formula "1"))
                           (rule "boolean_not_equal_2" (formula "1") (term "0"))
                           (rule "concrete_not_2" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "less_than_comparison_new" (formula "22") (term "20"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "assignment_instance_field_of_this" (formula "22") (term "20,1"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "blockEmpty" (formula "22") (term "21,1"))
                           (rule "assignment_instance_field_of_this" (formula "22") (term "20,2"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "blockEmpty" (formula "22") (term "21,2"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                           (rule "add_literals" (formula "22") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0"))
                           (rule "mul_literals" (formula "22") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "22") (term "0,0"))
                           (rule "concrete_and_2" (formula "22") (term "0"))
                           (rule "ifthenelse_false_for" (formula "22"))
                           (rule "if" (formula "22") (term "21"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "boolean_not_equal_2" (formula "22") (term "0"))
                           (rule "ifthenelse_false_for" (formula "22"))
                           (rule "variableDeclarationAssign" (formula "22") (term "20"))
                           (rule "variableDeclaration" (formula "22") (term "20") (newnames "v_Record"))
                           (rule "eval_order_array_access5" (formula "22") (term "20") (inst "#v1=j_9") (inst "#ar1=var_1"))
                           (rule "variableDeclarationAssign" (formula "22") (term "20"))
                           (rule "variableDeclaration" (formula "22") (term "20") (newnames "var_1"))
                           (rule "assignment" (formula "22") (term "20"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "variableDeclarationAssign" (formula "22") (term "21"))
                           (rule "variableDeclaration" (formula "22") (term "21") (newnames "j_10"))
                           (rule "assignmentSubtractionInt" (formula "22") (term "21"))
                           (builtin "Update Simplification" (formula "22"))
                           (rule "translateJavaSubInt" (formula "22") (term "4"))
                           (rule "polySimp_elimSub" (formula "22") (term "4"))
                           (rule "mul_literals" (formula "22") (term "1,4"))
                           (rule "polySimp_addComm0" (formula "22") (term "4"))
                           (rule "assignment_array2" (formula "22") (term "22"))
                           (branch " Normal Execution (var_1 != null)"
                              (builtin "Update Simplification" (formula "23"))
                              (builtin "Update Simplification" (formula "22"))
                              (rule "orRight" (formula "22"))
                              (rule "orRight" (formula "22"))
                              (rule "castDelInt" (formula "24") (term "0,0,0,7"))
                              (rule "castDelInt" (formula "24") (term "0,1,0,7"))
                              (rule "castDelInt" (formula "23") (term "0"))
                              (rule "castDelInt" (formula "22") (term "1"))
                              (rule "castDelInt" (formula "24") (term "1,2,7"))
                              (rule "castDelInt" (formula "24") (term "1,1,7"))
                              (rule "inEqSimp_ltRight" (formula "23"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,7"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,7"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,7"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,7"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,7"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,7"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,7"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0,7"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,0,7"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,7"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,7"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,0,7"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,7"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,0,7"))
                              (rule "add_zero_left" (formula "24") (term "0,0,1,0,7"))
                              (rule "replace_known_left" (formula "24") (term "1,0,7") (ifseqformula "1"))
                              (rule "concrete_and_3" (formula "24") (term "0,7"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,7"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,0,7"))
                              (rule "polySimp_elimOne" (formula "24") (term "0,0,7"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (rule "concrete_or_1" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (rule "concrete_or_1" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "assignment_to_reference_array_component_no_rtsj" (formula "22") (term "21"))
                              (branch " Normal Execution (var != null)"
                                 (builtin "Update Simplification" (formula "23"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "array_store_static_analyse" (formula "1") (ifseqformula "22"))
                                 (rule "true_left" (formula "1"))
                                 (rule "postdecrement" (formula "22") (term "21"))
                                 (rule "compound_subtraction_1" (formula "22") (term "21") (inst "#v=j"))
                                 (rule "variableDeclarationAssign" (formula "22") (term "21"))
                                 (rule "variableDeclaration" (formula "22") (term "21") (newnames "j_11"))
                                 (rule "widening_identity_cast_5" (formula "22") (term "21"))
                                 (rule "assignment_instance_field_of_this" (formula "22") (term "21"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "assignmentSubtractionInt" (formula "22") (term "22"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "tryEmpty" (formula "22") (term "21"))
                                 (rule "methodCallEmpty" (formula "22") (term "21"))
                                 (rule "translateJavaSubInt" (formula "22") (term "5"))
                                 (rule "polySimp_elimSub" (formula "22") (term "5"))
                                 (rule "mul_literals" (formula "22") (term "1,5"))
                                 (rule "polySimp_addComm0" (formula "22") (term "5"))
                                 (rule "emptyModality" (formula "22") (term "21"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "boolean_not_equal_2" (formula "22") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "22") (term "0,0,1"))
                                 (rule "concrete_impl_2" (formula "22") (term "0"))
                                 (rule "concrete_not_2" (formula "22") (term "0,1"))
                                 (rule "concrete_and_1" (formula "22"))
                                 (rule "concrete_impl_1" (formula "22"))
                                 (rule "castDelInt" (formula "22") (term "0,1"))
                                 (rule "castDelInt" (formula "22") (term "0,1,0"))
                                 (rule "castDelInt" (formula "22") (term "1,1,1,0,0,1,1,1,0,1,0,0"))
                                 (rule "castDelInt" (formula "22") (term "1,0,0,0,0,1,1,0,1,0,0"))
                                 (rule "castDelInt" (formula "22") (term "1,1,0,1,0,1,0,0"))
                                 (rule "castDelInt" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "eqSymm" (formula "22") (term "1,0,1,1,1,0,1,0,0"))
                                 (rule "eqSymm" (formula "22") (term "1,0,0,1,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0,1,1,1,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,1,1,0,0,1,1,1,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "1,1,0,0,1,1,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                 (rule "qeq_literals" (formula "22") (term "1,0"))
                                 (rule "concrete_and_3" (formula "22") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,1,1,10,0,0") (ifseqformula "10"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "2"))
                                 (rule "concrete_and_1" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "1,1"))
                                 (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "1"))
                                 (rule "concrete_and_3" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                 (rule "qeq_literals" (formula "22") (term "0,0,0,1"))
                                 (rule "concrete_or_1" (formula "22") (term "0,0,1"))
                                 (rule "concrete_and_1" (formula "22") (term "0,1"))
                                 (rule "inReachableStateRewrite" (formula "22") (term "1,1") (ifseqformula "12"))
                                 (builtin "Update Simplification" (formula "22"))
                                 (rule "eq_imp" (formula "22") (term "0,0,0,1,1,1"))
                                 (rule "elim_forall12" (formula "22") (term "0,1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,1,1,1,0,1,0,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,1,1,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1") (ifseqformula "2"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0,2,1,1,1,0,1,0,1,1,1") (ifseqformula "2"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,1,1") (ifseqformula "2"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1") (ifseqformula "7"))
                                 (rule "concrete_and_1" (formula "22") (term "0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,1,1") (ifseqformula "7"))
                                 (rule "concrete_and_1" (formula "22") (term "0,2,1,1,1,0,1,0,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1") (ifseqformula "7"))
                                 (rule "concrete_and_1" (formula "22") (term "0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                 (rule "elim_forall12" (formula "22") (term "0,1,0,1,1,1,1"))
                                 (rule "elim_forall8" (formula "22") (term "1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,0,1,1,0,1,0,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,1,1,1,0,1,1,1"))
                                 (rule "ifthenelse_true" (formula "22") (term "0,0,0,1,0,1,0,1,1,1"))
                                 (rule "ifthenelse_true" (formula "22") (term "0,1,1,0,1,0,1,1,1"))
                                 (rule "ifthenelse_true" (formula "22") (term "1,1,1,0,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,1,0,1,1,1") (ifseqformula "16"))
                                 (rule "concrete_impl_1" (formula "22") (term "0,1,0,1,1,1"))
                                 (rule "elim_forall8" (formula "22") (term "1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,0,0,0,0,1,0,1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,0,0,1,1,0,1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "0,0,1,1,1,0,1,1,1,1"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,0,0,1,0,1,0,1,1,1,1"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,1,1,0,1,0,1,1,1,1"))
                                 (rule "concrete_and_1" (formula "22") (term "0,1,1,1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,2,0,0,0,1,0,1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,2,0,1,1,0,1,0,1,1,1,1"))
                                 (rule "eqClose" (formula "22") (term "1,0,2,1,1,1,0,1,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,2,0,0,0,1,0,1,0,1,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,2,0,1,1,0,1,0,1,1,1,1"))
                                 (rule "concrete_and_3" (formula "22") (term "0,2,1,1,1,0,1,1,1,1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,1,0,1,1,1,1") (ifseqformula "16"))
                                 (rule "concrete_impl_1" (formula "22") (term "0,1,0,1,1,1,1"))
                                 (rule "array_store_static_analyse" (formula "22") (term "1,1,0,1,1,1,1") (ifseqformula "21"))
                                 (rule "concrete_and_3" (formula "22") (term "1,0,1,1,1,1"))
                                 (rule "array_store_static_analyse" (formula "22") (term "1,1,0,1,1,1") (ifseqformula "21"))
                                 (rule "concrete_and_3" (formula "22") (term "1,0,1,1,1"))
                                 (rule "nnf_imp2or" (formula "22") (term "0,1,1,1,1"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,1,1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,1,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,1,1,1"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,1,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,1,1,1,1"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,1,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,1,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,1,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,1,1"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,1,1"))
                                 (rule "all_unused" (formula "22") (term "0,0,1,1,1"))
                                 (rule "concrete_and_1" (formula "22") (term "0,1,1,1"))
                                 (rule "ifthenelse_split" (formula "22") (term "5,0"))
                                 (branch " start_1_0 >= 2 + _atAtPre_0 TRUE"
                                    (rule "replace_known_left" (formula "23") (term "0,6,0,1,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "6,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0,0,0,1,1,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,0,0,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0,1,1,0,1,1,1,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,0,1,1,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0,1,0,0,0,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,0,1,0,0,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,0,1,0,1,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,1,0,1,1,1,1") (ifseqformula "1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,0,0,0,1,0,1,1,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inReachableStateRewrite" (formula "22") (term "0,1,1") (ifseqformula "12"))
                                    (builtin "Update Simplification" (formula "22"))
                                    (rule "eq_imp" (formula "22") (term "0,0,0,1,0,1,1"))
                                    (rule "elim_forall12" (formula "22") (term "0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "7"))
                                    (rule "concrete_and_3" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "7"))
                                    (rule "concrete_and_3" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "7"))
                                    (rule "concrete_and_3" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "22") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "22") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "elim_forall12" (formula "22") (term "0,1,0,1,1,0,1,1"))
                                    (rule "elim_forall8" (formula "22") (term "1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,1,1,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "22") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "22") (term "0,1,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "22") (term "1,1,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,1,0,1,0,1,1") (ifseqformula "16"))
                                    (rule "concrete_impl_1" (formula "22") (term "0,1,0,1,0,1,1"))
                                    (rule "elim_forall8" (formula "22") (term "1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,1,1,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "22") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "22") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "16"))
                                    (rule "concrete_impl_1" (formula "22") (term "0,1,0,1,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "22") (term "1,1,0,1,1,0,1,1") (ifseqformula "21"))
                                    (rule "concrete_and_3" (formula "22") (term "1,0,1,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "22") (term "1,1,0,1,0,1,1") (ifseqformula "21"))
                                    (rule "concrete_and_3" (formula "22") (term "1,0,1,0,1,1"))
                                    (rule "nnf_imp2or" (formula "22") (term "0,1,1,0,1,1"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "all_unused" (formula "22") (term "0,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "22") (term "0,1,0,1,1"))
                                    (rule "eq_or_2" (formula "22") (term "1,1"))
                                    (rule "allLeft" (formula "5") (inst "t=(jint)(-1 + start_1_0)"))
                                    (rule "castDelInt" (formula "5") (term "0,1,0,0"))
                                    (rule "castDelInt" (formula "5") (term "0,0,0,0"))
                                    (rule "castDelInt" (formula "5") (term "0,1,0"))
                                    (rule "castDelInt" (formula "5") (term "1,0,1"))
                                    (rule "castDelInt" (formula "5") (term "1,1,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "5") (term "1,0,0"))
                                    (rule "concrete_or_4" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "5") (term "1,0"))
                                    (rule "concrete_or_4" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                    (rule "concrete_and_2" (formula "5") (term "0"))
                                    (rule "concrete_or_2" (formula "5"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "0,0,0,0,1,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "6,0,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "5,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "1,0,1,1,0,1,1,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "1,0,0,0,1,0,1,1,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "23") (term "1,0,1,0,0,0,1") (ifseqformula "5"))
                                    (rule "inReachableStateRewrite" (formula "23") (term "0,1,1") (ifseqformula "13"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "eq_imp" (formula "23") (term "0,0,0,1,0,1,1"))
                                    (rule "elim_forall12" (formula "23") (term "0,1,0,1,1,0,1,1"))
                                    (rule "elim_forall12" (formula "23") (term "0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "8"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "8"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "8"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_or_1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "elim_forall8" (formula "23") (term "1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1,1,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "17"))
                                    (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,1,0,1,1"))
                                    (rule "elim_forall8" (formula "23") (term "1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,1,1,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,1,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,1,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,0,1,1") (ifseqformula "17"))
                                    (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,0,1,1") (ifseqformula "22"))
                                    (rule "concrete_and_3" (formula "23") (term "1,0,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,1,0,1,1") (ifseqformula "22"))
                                    (rule "concrete_and_3" (formula "23") (term "1,0,1,1,0,1,1"))
                                    (rule "nnf_imp2or" (formula "23") (term "0,1,1,0,1,1"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "all_unused" (formula "23") (term "0,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1,0,1,1"))
                                    (rule "eq_or_2" (formula "23") (term "1,1"))
                                    (rule "allLeft" (formula "7") (inst "t=-1 + start_1_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "7") (term "1,0,0,1") (ifseqformula "5"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0,1") (ifseqformula "1"))
                                    (rule "concrete_and_1" (formula "7") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "concrete_and_2" (formula "7") (term "0,0,0"))
                                    (rule "concrete_or_2" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (term "0,0,0,1") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "7") (term "0,0,0,0,1"))
                                    (rule "concrete_or_1" (formula "7") (term "0,0,0,1"))
                                    (rule "ifthenelse_true" (formula "7") (term "0,0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "7") (term "0,0"))
                                    (rule "concrete_or_2" (formula "7") (term "0"))
                                    (rule "andRight" (formula "24"))
                                    (branch " Case 1"
                                       (rule "cut_direct" (formula "7") (term "0"))
                                       (branch " CUT: _inAtPre_2[-1 + start_1_0] = null TRUE"
                                          (rule "concrete_or_1" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "24") (term "5") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "7"))
                                          (rule "update_close" (formula "24") (ifseqformula "3"))
                                          (rule "eq_and" (formula "24"))
                                          (rule "allRight" (formula "24") (inst "sk=x1_4"))
                                          (rule "allRight" (formula "24") (inst "sk=x0_4"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "24") (term "1"))
                                          (branch "   x1_4 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_4
& x0_4 = _inAtPre_2 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "3"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "27") (term "0"))
                                             (rule "eqClose" (formula "27"))
                                             (rule "closeTrue" (formula "27"))
                                          )
                                          (branch "   x1_4 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_4
& x0_4 = _inAtPre_2 FALSE"
                                             (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "24"))
                                             (rule "ifthenelse_false" (formula "25") (term "0"))
                                             (rule "commute_and" (formula "25") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "25") (term "0"))
                                             (branch " x1_4 = start_1_0 & x0_4 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "2"))
                                                (rule "concrete_and_3" (formula "26"))
                                                (rule "applyEqRigid" (formula "26") (term "1,1,1") (ifseqformula "1"))
                                                (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "11"))
                                                (rule "concrete_and_3" (formula "26"))
                                                (rule "inEqSimp_geqRight" (formula "26"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " x1_4 = start_1_0 & x0_4 = _inAtPre_2 FALSE"
                                                (rule "eqClose" (formula "26"))
                                                (rule "closeTrue" (formula "26"))
                                             )
                                          )
                                       )
                                       (branch " CUT: _inAtPre_2[-1 + start_1_0] = null FALSE"
                                          (rule "concrete_or_2" (formula "7"))
                                          (rule "update_close" (formula "25") (ifseqformula "3"))
                                          (rule "eq_and" (formula "25"))
                                          (rule "allRight" (formula "25") (inst "sk=x1_5"))
                                          (rule "allRight" (formula "25") (inst "sk=x0_5"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                                          (rule "ifthenelse_split" (formula "25") (term "1"))
                                          (branch "   x1_5 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_5
& x0_5 = _inAtPre_2 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "concrete_and_3" (formula "28") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "3"))
                                             (rule "concrete_and_3" (formula "28") (term "0,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "28") (term "0"))
                                             (rule "eqClose" (formula "28"))
                                             (rule "closeTrue" (formula "28"))
                                          )
                                          (branch "   x1_5 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_5
& x0_5 = _inAtPre_2 FALSE"
                                             (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "25"))
                                             (rule "ifthenelse_false" (formula "26") (term "0"))
                                             (rule "commute_and" (formula "26") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "26") (term "0"))
                                             (branch " x1_5 = start_1_0 & x0_5 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "2"))
                                                (rule "concrete_and_3" (formula "27"))
                                                (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "27") (term "1,1,1") (ifseqformula "1"))
                                                (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "11"))
                                                (rule "concrete_and_3" (formula "27"))
                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " x1_5 = start_1_0 & x0_5 = _inAtPre_2 FALSE"
                                                (rule "eqClose" (formula "27"))
                                                (rule "closeTrue" (formula "27"))
                                             )
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "cut_direct" (formula "7") (term "0"))
                                       (branch " CUT: _inAtPre_2[-1 + start_1_0] = null TRUE"
                                          (rule "concrete_or_1" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "replace_known_left" (formula "24") (term "1,0,1,1") (ifseqformula "7"))
                                          (rule "concrete_or_3" (formula "24") (term "0,1,1"))
                                          (rule "concrete_and_1" (formula "24") (term "1,1"))
                                          (rule "applyEq" (formula "24") (term "6,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "24") (term "1,0,1,1,0,1,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0,1,0,1,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "24") (term "1,0,1,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "24") (term "1,0,1,0,1,0") (ifseqformula "7"))
                                          (rule "andRight" (formula "24"))
                                          (branch " Case 1"
                                             (rule "andRight" (formula "24"))
                                             (branch " Case 1"
                                                (rule "allRight" (formula "24") (inst "sk=i_8"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "25"))
                                                (rule "orRight" (formula "26"))
                                                (rule "eqSymm" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "24"))
                                                (rule "inEqSimp_geqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "27"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,2,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "28") (term "0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "28") (term "0,2,0") (ifseqformula "3"))
                                                (rule "ifthenelse_true" (formula "28") (term "2,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch " start_1_0 = i_8 TRUE"
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "applyEq" (formula "8") (term "2") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "0"))
                                                   (rule "qeq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "27") (ifseqformula "10"))
                                                )
                                                (branch " start_1_0 = i_8 FALSE"
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "28"))
                                                   (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0"))
                                                   (rule "qeq_literals" (formula "28") (term "0"))
                                                   (rule "concrete_and_2" (formula "28"))
                                                   (rule "false_right" (formula "28"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "allLeft" (formula "8") (inst "t=i_8"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "29"))
                                                   (rule "concrete_or_4" (formula "8"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "8") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "8") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "8") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "8") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "8") (term "1"))
                                                   (rule "concrete_or_4" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "8") (term "0"))
                                                   (rule "concrete_or_2" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "8"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "allRight" (formula "24") (inst "sk=i_9"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "eqSymm" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,2,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "26") (term "0,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "26") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "26") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "26") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "26") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch " _inAtPre_2.length >= 1 + i_9 TRUE"
                                                   (rule "allLeft" (formula "9") (inst "t=i_9"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "28"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "9") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "9") (term "1"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch " _inAtPre_2.length >= 1 + i_9 FALSE"
                                                   (rule "eqClose" (formula "27"))
                                                   (rule "closeTrue" (formula "27"))
                                                )
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "orRight" (formula "24"))
                                             (rule "allRight" (formula "25") (inst "sk=i_10"))
                                             (rule "orRight" (formula "25"))
                                             (rule "orRight" (formula "26"))
                                             (rule "orRight" (formula "25"))
                                             (rule "inEqSimp_geqRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,2,0,0") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "27") (term "0,2,0,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,2,0") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "28") (term "0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,2,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,2,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,2,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,2,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,2,0,0"))
                                             (rule "replace_known_left" (formula "27") (term "0,2,0,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "27") (term "2,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,2,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "28") (term "2,0"))
                                             (rule "inReachableStateRewrite" (formula "26") (ifseqformula "16"))
                                             (builtin "Update Simplification" (formula "26"))
                                             (rule "eq_imp" (formula "26") (term "0,0,0,1"))
                                             (rule "orRight" (formula "26"))
                                             (rule "elim_forall12" (formula "27") (term "0,1,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,0,1,1,0,1,0,1,0"))
                                             (rule "eqClose" (formula "27") (term "1,0,1,1,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,0,0,1,0,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,1,1,0,1,0,1,0"))
                                             (rule "concrete_and_3" (formula "27") (term "0,1,1,1,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0,0,2,0,0,0,1,0,1,0,1,0") (ifseqformula "11"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,2,1,1,1,0,1,0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0,0,2,1,1,1,0,1,0") (ifseqformula "11"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,2,1,1,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "replace_known_left" (formula "27") (term "1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "11"))
                                             (rule "concrete_and_3" (formula "27") (term "0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,2,0,0,0,1,0,1,0,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "concrete_or_1" (formula "27") (term "0,0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "concrete_and_1" (formula "27") (term "0,2,0,0,0,1,0,1,0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,2,1,1,1,0,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,2,1,1,1,0,1,0"))
                                             (rule "concrete_or_1" (formula "27") (term "0,0,2,1,1,1,0,1,0"))
                                             (rule "concrete_and_1" (formula "27") (term "0,2,1,1,1,0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "concrete_or_1" (formula "27") (term "0,0,2,0,1,1,0,1,0,1,0"))
                                             (rule "concrete_and_1" (formula "27") (term "0,2,0,1,1,0,1,0,1,0"))
                                             (rule "elim_forall12" (formula "27") (term "0,1,0,1"))
                                             (rule "elim_forall8" (formula "27") (term "1,0"))
                                             (rule "eqClose" (formula "27") (term "0,0,0,0,1,0,1,0"))
                                             (rule "eqClose" (formula "27") (term "0,0,1,1,0,1,0"))
                                             (rule "eqClose" (formula "27") (term "0,1,1,1,0"))
                                             (rule "ifthenelse_true" (formula "27") (term "0,0,0,1,0,1,0"))
                                             (rule "ifthenelse_true" (formula "27") (term "0,1,1,0,1,0"))
                                             (rule "ifthenelse_true" (formula "27") (term "1,1,1,0"))
                                             (rule "eqClose" (formula "27") (term "1,1,0,1,0"))
                                             (rule "concrete_or_3" (formula "27") (term "1,0,1,0"))
                                             (rule "concrete_impl_4" (formula "27") (term "0,1,0"))
                                             (rule "concrete_and_1" (formula "27") (term "1,0"))
                                             (rule "elim_forall8" (formula "27") (term "1,0,1"))
                                             (rule "eqClose" (formula "27") (term "0,0,0,0,0,1,0,1,0,1"))
                                             (rule "eqClose" (formula "27") (term "0,0,0,1,1,0,1,0,1"))
                                             (rule "eqClose" (formula "27") (term "0,0,1,1,1,0,1"))
                                             (rule "concrete_and_1" (formula "27") (term "0,0,0,0,1,0,1,0,1"))
                                             (rule "concrete_and_1" (formula "27") (term "0,0,1,1,0,1,0,1"))
                                             (rule "concrete_and_1" (formula "27") (term "0,1,1,1,0,1"))
                                             (rule "eqClose" (formula "27") (term "1,0,2,0,1,1,0,1,0,1"))
                                             (rule "eqClose" (formula "27") (term "1,0,2,0,0,0,1,0,1,0,1"))
                                             (rule "eqClose" (formula "27") (term "1,0,2,1,1,1,0,1"))
                                             (rule "concrete_and_3" (formula "27") (term "0,2,0,1,1,0,1,0,1"))
                                             (rule "concrete_and_3" (formula "27") (term "0,2,0,0,0,1,0,1,0,1"))
                                             (rule "concrete_and_3" (formula "27") (term "0,2,1,1,1,0,1"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,1,0,1") (ifseqformula "20"))
                                             (rule "concrete_impl_1" (formula "27") (term "0,1,0,1"))
                                             (rule "array_store_static_analyse" (formula "27") (term "1,1,0,1") (ifseqformula "25"))
                                             (rule "concrete_and_3" (formula "27") (term "1,0,1"))
                                             (rule "array_store_static_analyse" (formula "27") (term "1,0") (ifseqformula "25"))
                                             (rule "concrete_and_3" (formula "27") (term "0"))
                                             (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1"))
                                             (rule "all_unused" (formula "27") (term "0"))
                                             (rule "concrete_and_1" (formula "27"))
                                             (rule "allRight" (formula "27") (inst "sk=i_22"))
                                             (rule "orRight" (formula "27"))
                                             (rule "orRight" (formula "27"))
                                             (rule "orRight" (formula "29"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,1,0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,2,0,0") (ifseqformula "2"))
                                             (rule "concrete_and_1" (formula "29") (term "0,2,0,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,2,0") (ifseqformula "2"))
                                             (rule "concrete_and_1" (formula "30") (term "0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,2,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,2,0,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "29") (term "2,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,2,0"))
                                             (rule "replace_known_left" (formula "30") (term "0,2,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "30") (term "2,0"))
                                             (rule "ifthenelse_split" (formula "31") (term "0,0"))
                                             (branch " i_10 = start_1_0 TRUE"
                                                (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "33") (term "0"))
                                                (rule "eqClose" (formula "33"))
                                                (rule "closeTrue" (formula "33"))
                                             )
                                             (branch " i_10 = start_1_0 FALSE"
                                                (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "31"))
                                                (rule "ifthenelse_false" (formula "33") (term "0"))
                                                (rule "ifthenelse_split" (formula "29") (term "0,0"))
                                                (branch " i_22 = start_1_0 TRUE"
                                                   (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "31") (term "0"))
                                                   (rule "eqClose" (formula "31"))
                                                   (rule "closeTrue" (formula "31"))
                                                )
                                                (branch " i_22 = start_1_0 FALSE"
                                                   (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "29"))
                                                   (rule "ifthenelse_false" (formula "31") (term "0"))
                                                   (rule "allLeft" (formula "12") (inst "t=i_22"))
                                                   (rule "replace_known_left" (formula "12") (term "0,0,0,0,1") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "12") (term "0,0,0,1"))
                                                   (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "32"))
                                                   (rule "concrete_or_4" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
                                                   (rule "replace_known_left" (formula "12") (term "0,0,0,1") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "12") (term "0,0,1"))
                                                   (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "31"))
                                                   (rule "concrete_or_4" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "12") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "12") (term "1"))
                                                   (rule "concrete_or_4" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0"))
                                                   (rule "leq_literals" (formula "12"))
                                                   (rule "closeFalse" (formula "12"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " CUT: _inAtPre_2[-1 + start_1_0] = null FALSE"
                                          (rule "concrete_or_2" (formula "7"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,1,1") (ifseqformula "7"))
                                          (rule "concrete_or_1" (formula "25") (term "0,1,1"))
                                          (rule "concrete_and_1" (formula "25") (term "1,1"))
                                          (rule "andRight" (formula "25"))
                                          (branch " Case 1"
                                             (rule "andRight" (formula "25"))
                                             (branch " Case 1"
                                                (rule "allRight" (formula "25") (inst "sk=i_11"))
                                                (rule "orRight" (formula "25"))
                                                (rule "orRight" (formula "25"))
                                                (rule "orRight" (formula "26"))
                                                (rule "orRight" (formula "27"))
                                                (rule "eqSymm" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "25"))
                                                (rule "inEqSimp_geqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "28"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,2,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "29") (term "0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "3"))
                                                (rule "ifthenelse_true" (formula "29") (term "2,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "ifthenelse_split" (formula "29") (term "0"))
                                                (branch " start_1_0 = i_11 TRUE"
                                                   (rule "applyEqRigid" (formula "30") (term "1,1,0") (ifseqformula "1"))
                                                   (rule "eqClose" (formula "30"))
                                                   (rule "closeTrue" (formula "30"))
                                                )
                                                (branch " start_1_0 = i_11 FALSE"
                                                   (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "29"))
                                                   (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0"))
                                                   (rule "concrete_and_2" (formula "29"))
                                                   (rule "false_right" (formula "29"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "allLeft" (formula "8") (inst "t=i_11"))
                                                   (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "30"))
                                                   (rule "concrete_or_4" (formula "8"))
                                                   (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "concrete_and_2" (formula "8") (term "1,0,0"))
                                                   (rule "concrete_or_4" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "8") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "8") (term "1"))
                                                   (rule "concrete_or_4" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "8") (term "0"))
                                                   (rule "concrete_or_2" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "allRight" (formula "25") (inst "sk=i_12"))
                                                (rule "orRight" (formula "25"))
                                                (rule "orRight" (formula "25"))
                                                (rule "eqSymm" (formula "27") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,2,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "27") (term "0,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "27") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch " _inAtPre_2.length >= 1 + i_12 TRUE"
                                                   (rule "allLeft" (formula "9") (inst "t=i_12"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "29"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "9") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "9") (term "1"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "closeFalse" (formula "9"))
                                                )
                                                (branch " _inAtPre_2.length >= 1 + i_12 FALSE"
                                                   (rule "eqClose" (formula "28"))
                                                   (rule "closeTrue" (formula "28"))
                                                )
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "orRight" (formula "25"))
                                             (rule "allRight" (formula "26") (inst "sk=i_13"))
                                             (rule "orRight" (formula "26"))
                                             (rule "orRight" (formula "26"))
                                             (rule "orRight" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,2,0") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "29") (term "0,2,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,2,0,0") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "28") (term "0,2,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "29") (term "2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,2,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0,0"))
                                             (rule "replace_known_left" (formula "28") (term "0,2,0,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "28") (term "2,0,0"))
                                             (rule "ifthenelse_split" (formula "29") (term "0"))
                                             (branch " i_13 = start_1_0 TRUE"
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "29") (term "0,0"))
                                                (rule "close" (formula "29") (ifseqformula "10"))
                                             )
                                             (branch " i_13 = start_1_0 FALSE"
                                                (rule "replace_known_right" (formula "28") (term "0,0,0") (ifseqformula "29"))
                                                (rule "ifthenelse_false" (formula "28") (term "0,0"))
                                                (rule "allLeft" (formula "10") (inst "t=i_13"))
                                                (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "31"))
                                                (rule "concrete_or_4" (formula "10") (term "0"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0,0,1") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "10") (term "0,0,0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0,1") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "29"))
                                                (rule "concrete_or_4" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,1"))
                                                (rule "leq_literals" (formula "10") (term "0,1"))
                                                (rule "concrete_and_2" (formula "10") (term "1"))
                                                (rule "concrete_or_4" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0"))
                                                (rule "add_literals" (formula "10") (term "0"))
                                                (rule "leq_literals" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " start_1_0 >= 2 + _atAtPre_0 FALSE"
                                    (rule "replace_known_right" (formula "23") (term "0,0,1,0,1,1,1") (ifseqformula "22"))
                                    (rule "ifthenelse_false" (formula "23") (term "0,1,0,1,1,1"))
                                    (rule "replace_known_right" (formula "23") (term "0,0,0,0,0,1,1,1") (ifseqformula "22"))
                                    (rule "ifthenelse_false" (formula "23") (term "0,0,0,0,1,1,1"))
                                    (rule "replace_known_right" (formula "23") (term "0,6,0,1,1") (ifseqformula "22"))
                                    (rule "ifthenelse_false" (formula "23") (term "6,0,1,1"))
                                    (rule "inEqSimp_geqRight" (formula "22"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "24") (term "1,1,0,0,0,0,0,1") (ifseqformula "3"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "1,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,1,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "24") (term "1,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "23") (term "4,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "5") (term "1,1,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "2") (ifseqformula "2"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                    (rule "add_literals" (formula "8") (term "0,1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "22") (term "1,1,0,0,1,0,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "5,0,1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "5") (term "1,1,1,0,0,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,1,0,0,0"))
                                    (rule "applyEq" (formula "22") (term "1,1,5,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,5,0"))
                                    (rule "add_literals" (formula "22") (term "0,1,5,0"))
                                    (rule "add_zero_left" (formula "22") (term "1,5,0"))
                                    (rule "applyEq" (formula "22") (term "1,1,6,0,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,6,0,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,6,0,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,6,0,1,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,1,1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "22") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,0,0,0,0,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,0,0,0,0,1,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,0,0,0,0,1,1,1"))
                                    (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,1,0,0,0,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "22") (term "0,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0,1,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,1,0,1,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,1,0,1,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,1,0,1,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0,1,0,1,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,1,0,1,0,1"))
                                    (rule "ifthenelse_false" (formula "22") (term "1,0,1,0,1,0,1"))
                                    (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "ifthenelse_false" (formula "22") (term "1,0,0,0,1,0,1,1,1,1"))
                                    (rule "applyEq" (formula "22") (term "0,0,1,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,1,1,0,1,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,1,1,0,1,1,1,1"))
                                    (rule "ifthenelse_false" (formula "22") (term "1,0,1,1,0,1,1,1,1"))
                                    (rule "applyEq" (formula "22") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,1,0,0,0,1"))
                                    (rule "ifthenelse_false" (formula "22") (term "1,0,1,0,0,0,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,1,0,0,0,1,0,1,1,1,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,0,0,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,1,0,0,0,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,1,0,1,0,0,0,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,1,1,0,1,1,1,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,1,1,0,1,1,1,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,1,0,1,1,0,1,1,1,1"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0,1,0,1,0,1") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,1,0,1,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,1,0,1,0,1"))
                                    (rule "add_zero_left" (formula "22") (term "1,1,0,1,0,1,0,1"))
                                    (rule "inEqSimp_invertInEq0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "times_zero_2" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_1" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_or_subsumption1" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "3") (term "1,0,0,0,0"))
                                    (rule "concrete_or_4" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "20") (term "0,0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0,1,0,1"))
                                    (rule "add_zero_left" (formula "20") (term "1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1,0,0,1,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,1,0,0,1,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,1,0,0,1,0,1"))
                                    (rule "leq_literals" (formula "20") (term "1,0,0,1,0,1"))
                                    (rule "concrete_or_3" (formula "20") (term "0,0,1,0,1"))
                                    (rule "concrete_or_1" (formula "20") (term "0,1,0,1"))
                                    (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0,0"))
                                    (rule "eqClose" (formula "4") (term "0,0,0,0"))
                                    (rule "ifthenelse_true_for" (formula "4") (term "0,0,0"))
                                    (rule "commute_or" (formula "4") (term "0,0"))
                                    (rule "commute_or_2" (formula "4") (term "0"))
                                    (rule "elim_forall6" (formula "4"))
                                    (rule "false_to_not_true" (formula "4") (term "1"))
                                    (rule "typeEqDerived2" (formula "4") (term "0,0,1") (ifseqformula "1"))
                                    (rule "boolean_equal" (formula "4") (term "0,1"))
                                    (rule "concrete_not_1" (formula "4") (term "1"))
                                    (rule "concrete_or_4" (formula "4"))
                                    (rule "castDelInt" (formula "4") (term "0,0"))
                                    (rule "castDelInt" (formula "4") (term "1,1,1"))
                                    (rule "castDelInt" (formula "4") (term "1,0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "4") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                    (rule "concrete_and_2" (formula "4") (term "0"))
                                    (rule "concrete_or_2" (formula "4"))
                                    (rule "all_unused" (formula "20") (term "1,0,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,1"))
                                    (rule "inReachableStateRewrite" (formula "20") (term "0,1,1") (ifseqformula "11"))
                                    (builtin "Update Simplification" (formula "20"))
                                    (rule "eq_imp" (formula "20") (term "0,0,0,1,0,1,1"))
                                    (rule "elim_forall12" (formula "20") (term "0,1,0,1,1,0,1,1"))
                                    (rule "elim_forall12" (formula "20") (term "0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_pullOutFactor1" (formula "20") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "times_zero_1" (formula "20") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "leq_literals" (formula "20") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "applyEq" (formula "20") (term "1,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "20") (term "1,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "20") (term "1,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "6"))
                                    (rule "concrete_and_1" (formula "20") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "6"))
                                    (rule "concrete_and_1" (formula "20") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "6"))
                                    (rule "concrete_and_1" (formula "20") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                    (rule "elim_forall8" (formula "20") (term "1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,1,1,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                    (rule "concrete_and_3" (formula "20") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "15"))
                                    (rule "concrete_impl_1" (formula "20") (term "0,1,0,1,1,0,1,1"))
                                    (rule "elim_forall8" (formula "20") (term "1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                    (rule "eqClose" (formula "20") (term "0,1,1,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "20") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "20") (term "0,1,1,0,1,0,1,0,1,1"))
                                    (rule "ifthenelse_true" (formula "20") (term "1,1,1,0,1,0,1,1"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,1,0,1,0,1,1") (ifseqformula "15"))
                                    (rule "concrete_impl_1" (formula "20") (term "0,1,0,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "20") (term "1,1,0,1,0,1,1") (ifseqformula "19"))
                                    (rule "concrete_and_3" (formula "20") (term "1,0,1,0,1,1"))
                                    (rule "array_store_static_analyse" (formula "20") (term "1,1,0,1,1,0,1,1") (ifseqformula "19"))
                                    (rule "concrete_and_3" (formula "20") (term "1,0,1,1,0,1,1"))
                                    (rule "nnf_imp2or" (formula "20") (term "0,1,1,0,1,1"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,1,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,1,0,1,1"))
                                    (rule "all_unused" (formula "20") (term "0,0,1,0,1,1"))
                                    (rule "concrete_and_1" (formula "20") (term "0,1,0,1,1"))
                                    (rule "eq_or_2" (formula "20") (term "1,1"))
                                    (rule "andRight" (formula "20"))
                                    (branch " Case 1"
                                       (rule "update_close" (formula "20") (ifseqformula "2"))
                                       (rule "eq_and" (formula "20"))
                                       (rule "allRight" (formula "20") (inst "sk=x1_0"))
                                       (rule "allRight" (formula "20") (inst "sk=x0_0"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "20") (term "1"))
                                       (branch "   x1_0 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_0
& x0_0 = _inAtPre_2 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "2"))
                                          (rule "concrete_and_3" (formula "23") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "3"))
                                          (rule "concrete_and_3" (formula "23") (term "0,0"))
                                          (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "1"))
                                          (rule "ifthenelse_true" (formula "23") (term "0"))
                                          (rule "eqClose" (formula "23"))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                       (branch "   x1_0 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_0
& x0_0 = _inAtPre_2 FALSE"
                                          (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "20"))
                                          (rule "ifthenelse_false" (formula "21") (term "0"))
                                          (rule "commute_and" (formula "21") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "21") (term "0"))
                                          (branch " x1_0 = 1 + _atAtPre_0 & x0_0 = _inAtPre_2 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "23"))
                                             (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                             (rule "concrete_and_3" (formula "22"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                                             (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "0,0"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                             (rule "concrete_and_1" (formula "22"))
                                             (rule "inEqSimp_geqRight" (formula "22"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "leq_literals" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                          (branch " x1_0 = 1 + _atAtPre_0 & x0_0 = _inAtPre_2 FALSE"
                                             (rule "eqClose" (formula "22"))
                                             (rule "closeTrue" (formula "22"))
                                          )
                                       )
                                    )
                                    (branch " Case 2"
                                       (rule "andRight" (formula "20"))
                                       (branch " Case 1"
                                          (rule "allRight" (formula "20") (inst "sk=i_4"))
                                          (rule "orRight" (formula "20"))
                                          (rule "orRight" (formula "20"))
                                          (rule "orRight" (formula "21"))
                                          (rule "orRight" (formula "22"))
                                          (rule "inEqSimp_leqRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_geqRight" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "22"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0,2,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "mul_literals" (formula "3") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,2,0") (ifseqformula "3"))
                                          (rule "concrete_and_1" (formula "23") (term "0,2,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,2,0"))
                                          (rule "replace_known_left" (formula "23") (term "0,2,0") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "23") (term "2,0"))
                                          (rule "ifthenelse_split" (formula "23") (term "0"))
                                          (branch " i_4 = 1 + _atAtPre_0 TRUE"
                                             (rule "eqSymm" (formula "24"))
                                             (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,0"))
                                             (rule "add_zero_left" (formula "24") (term "1,0"))
                                             (rule "eqClose" (formula "24"))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                          (branch " i_4 = 1 + _atAtPre_0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "23"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                             (rule "add_literals" (formula "3") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "3"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                             (rule "concrete_and_2" (formula "23"))
                                             (rule "false_right" (formula "23"))
                                             (rule "allLeft" (formula "6") (inst "t=i_4"))
                                             (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "24"))
                                             (rule "concrete_or_4" (formula "6"))
                                             (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "6") (term "0,0,1"))
                                             (rule "leq_literals" (formula "6") (term "0,1"))
                                             (rule "concrete_and_2" (formula "6") (term "1"))
                                             (rule "concrete_or_4" (formula "6"))
                                             (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "6") (term "0,0,1"))
                                             (rule "leq_literals" (formula "6") (term "0,1"))
                                             (rule "concrete_and_2" (formula "6") (term "1"))
                                             (rule "concrete_or_4" (formula "6"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "orRight" (formula "20"))
                                          (rule "update_close" (formula "20") (ifseqformula "11"))
                                          (rule "eq_and" (formula "20"))
                                          (rule "allRight" (formula "20") (inst "sk=x1_1"))
                                          (rule "allRight" (formula "20") (inst "sk=x0_1"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,2,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,2,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,2,0"))
                                          (rule "commute_and" (formula "20") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "20") (term "0"))
                                          (branch " x1_1 = 1 + _atAtPre_0 & x0_1 = _inAtPre_2 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                                             (rule "andRight" (formula "24"))
                                             (branch " Case 1"
                                                (rule "orRight" (formula "24"))
                                                (rule "only_created_object_are_referenced_by_arrays_2" (formula "24") (ifseqformula "17") (ifseqformula "13"))
                                                (rule "notRight" (formula "24"))
                                                (rule "close" (formula "25") (ifseqformula "1"))
                                             )
                                             (branch " Case 2"
                                                (rule "allRight" (formula "24") (inst "sk=i_14"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "26"))
                                                (rule "inEqSimp_geqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,2,0,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "26") (term "0,2,0,0"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,2,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "27") (term "0,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,2,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,2,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,2,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,2,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,2,0,0"))
                                                (rule "replace_known_left" (formula "26") (term "0,2,0,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "26") (term "2,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,2,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "27") (term "0,2,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "27") (term "2,0"))
                                                (rule "ifthenelse_split" (formula "26") (term "0,0"))
                                                (branch " i_14 = 1 + _atAtPre_0 TRUE"
                                                   (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "28") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "only_created_object_are_referenced_by_arrays_2" (formula "25") (ifseqformula "18") (ifseqformula "14"))
                                                   (rule "notRight" (formula "25"))
                                                   (rule "close" (formula "26") (ifseqformula "1"))
                                                )
                                                (branch " i_14 = 1 + _atAtPre_0 FALSE"
                                                   (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "26"))
                                                   (rule "ifthenelse_false" (formula "28") (term "0"))
                                                   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "26"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                   (rule "add_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0"))
                                                   (rule "concrete_and_2" (formula "26"))
                                                   (rule "false_right" (formula "26"))
                                                   (rule "allLeft" (formula "9") (inst "t=1 + _atAtPre_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,0,0,0,1"))
                                                   (rule "concrete_and_1" (formula "9") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "9") (term "0,0"))
                                                   (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "8"))
                                                   (rule "applyEq" (formula "9") (term "1,0,0,1") (ifseqformula "8"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1"))
                                                   (rule "replace_known_left" (formula "9") (term "0,0,0,1") (ifseqformula "11"))
                                                   (rule "ifthenelse_true" (formula "9") (term "0,0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "9") (term "0"))
                                                   (rule "allLeft" (formula "10") (inst "t=i_14"))
                                                   (rule "replace_known_right" (formula "10") (term "1,0") (ifseqformula "29"))
                                                   (rule "concrete_or_4" (formula "10") (term "0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1"))
                                                   (rule "replace_known_left" (formula "10") (term "1,0,0,0,1") (ifseqformula "2"))
                                                   (rule "concrete_and_3" (formula "10") (term "0,0,0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                   (rule "concrete_and_2" (formula "10") (term "1,0"))
                                                   (rule "concrete_or_4" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (term "0,0,0,1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0,0,1"))
                                                   (rule "concrete_or_1" (formula "10") (term "0,0,0,1"))
                                                   (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "28"))
                                                   (rule "concrete_or_4" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0"))
                                                   (rule "add_literals" (formula "10") (term "0"))
                                                   (rule "leq_literals" (formula "10"))
                                                   (rule "closeFalse" (formula "10"))
                                                )
                                             )
                                          )
                                          (branch " x1_1 = 1 + _atAtPre_0 & x0_1 = _inAtPre_2 FALSE"
                                             (rule "ifthenelse_split" (formula "21") (term "0"))
                                             (branch "   x1_1 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_1
& x0_1 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "3"))
                                                (rule "concrete_and_3" (formula "23"))
                                                (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "3"))
                                                (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "23"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "add_literals" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                (rule "concrete_and_2" (formula "23"))
                                                (rule "false_right" (formula "23"))
                                                (rule "andRight" (formula "25"))
                                                (branch " Case 1"
                                                   (rule "orRight" (formula "25"))
                                                   (rule "only_created_object_are_referenced_by_arrays_2" (formula "25") (ifseqformula "18") (ifseqformula "14"))
                                                   (rule "notRight" (formula "25"))
                                                   (rule "close" (formula "26") (ifseqformula "1"))
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "25") (inst "sk=i_15"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,2,0,0") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "27") (term "0,2,0,0"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0,2,0") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "28") (term "0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,2,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,2,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,2,0,0"))
                                                   (rule "replace_known_left" (formula "27") (term "0,2,0,0") (ifseqformula "2"))
                                                   (rule "ifthenelse_true" (formula "27") (term "2,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0"))
                                                   (rule "replace_known_left" (formula "28") (term "0,2,0") (ifseqformula "2"))
                                                   (rule "ifthenelse_true" (formula "28") (term "2,0"))
                                                   (rule "allLeft" (formula "10") (inst "t=1 + _atAtPre_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                   (rule "concrete_or_2" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                                                   (rule "times_zero_1" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "leq_literals" (formula "10") (term "0,0,0,0,1"))
                                                   (rule "concrete_and_1" (formula "10") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                                   (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "9"))
                                                   (rule "applyEq" (formula "10") (term "1,0,0,1") (ifseqformula "9"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                                                   (rule "replace_known_left" (formula "10") (term "0,0,0,1") (ifseqformula "12"))
                                                   (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "10") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "10") (term "0"))
                                                   (rule "ifthenelse_split" (formula "28") (term "0,0"))
                                                   (branch " i_15 = 1 + _atAtPre_0 TRUE"
                                                      (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "1"))
                                                      (rule "ifthenelse_true" (formula "30") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "only_created_object_are_referenced_by_arrays_2" (formula "27") (ifseqformula "20") (ifseqformula "16"))
                                                      (rule "notRight" (formula "27"))
                                                      (rule "close" (formula "28") (ifseqformula "1"))
                                                   )
                                                   (branch " i_15 = 1 + _atAtPre_0 FALSE"
                                                      (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "28"))
                                                      (rule "ifthenelse_false" (formula "30") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "28"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                      (rule "add_literals" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0"))
                                                      (rule "concrete_and_2" (formula "28"))
                                                      (rule "false_right" (formula "28"))
                                                      (rule "cut_direct" (formula "10") (term "0"))
                                                      (branch " CUT: _inAtPre_2[1 + _atAtPre_0] = null TRUE"
                                                         (rule "concrete_or_1" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                                         (rule "allLeft" (formula "11") (inst "t=i_15"))
                                                         (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "30"))
                                                         (rule "concrete_or_4" (formula "11") (term "0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1"))
                                                         (rule "replace_known_left" (formula "11") (term "1,0,0,0,1") (ifseqformula "2"))
                                                         (rule "concrete_and_3" (formula "11") (term "0,0,0,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0,0,0,1"))
                                                         (rule "concrete_or_1" (formula "11") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "29"))
                                                         (rule "concrete_or_4" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "11") (term "0"))
                                                         (rule "concrete_or_2" (formula "11"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "11"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " CUT: _inAtPre_2[1 + _atAtPre_0] = null FALSE"
                                                         (rule "concrete_or_2" (formula "10"))
                                                         (rule "allLeft" (formula "11") (inst "t=i_15"))
                                                         (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "31"))
                                                         (rule "concrete_or_4" (formula "11") (term "0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1"))
                                                         (rule "replace_known_left" (formula "11") (term "1,0,0,0,1") (ifseqformula "2"))
                                                         (rule "concrete_and_3" (formula "11") (term "0,0,0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "11") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "11") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0,0,0,1"))
                                                         (rule "concrete_or_1" (formula "11") (term "0,0,0,1"))
                                                         (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                         (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "30"))
                                                         (rule "concrete_or_4" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_literals" (formula "11") (term "0"))
                                                         (rule "leq_literals" (formula "11"))
                                                         (rule "closeFalse" (formula "11"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "   x1_1 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_1
& x0_1 = _inAtPre_2 FALSE"
                                                (rule "eqClose" (formula "22"))
                                                (rule "closeTrue" (formula "22"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " Null Reference (var = null)"
                                 (builtin "Update Simplification" (formula "23"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close" (formula "22") (ifseqformula "1"))
                              )
                              (branch " Index Out of Bounds (var != null, but j_8 Out of Bounds!)"
                                 (builtin "Update Simplification" (formula "23"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (rule "concrete_and_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch " Array Store Exception (incompatible dynamic element type of var and v_Record)"
                                 (builtin "Update Simplification" (formula "23"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "array_store_static_analyse" (formula "20") (ifseqformula "22"))
                                 (rule "closeTrue" (formula "20"))
                              )
                           )
                           (branch " Null Reference (var_1 = null)"
                              (builtin "Update Simplification" (formula "23"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "close" (formula "22") (ifseqformula "1"))
                           )
                           (branch " Index Out of Bounds (var_1 != null, but j_10 Out of Bounds!)"
                              (builtin "Update Simplification" (formula "23"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "castDelInt" (formula "1") (term "1,0"))
                              (rule "castDelInt" (formula "1") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "times_zero_2" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "applyEqRigid" (formula "24") (term "0,0,0,0,1,1,0,20") (ifseqformula "7"))
                              (rule "applyEq" (formula "24") (term "4") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "24") (term "6") (ifseqformula "7"))
                              (rule "applyEqRigid" (formula "24") (term "5") (ifseqformula "7"))
                              (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "7"))
                              (rule "add_zero_right" (formula "9") (term "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,1,0,0,0") (ifseqformula "6"))
                              (rule "add_zero_right" (formula "4") (term "1,1,0,0,0"))
                              (rule "applyEq" (formula "3") (term "1,1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "2") (term "2") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "17") (term "0"))
                              (rule "concrete_and_2" (formula "17"))
                              (rule "closeFalse" (formula "17"))
                           )
                        )
                     )
                     (branch " Null Reference (_in = null)"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "22") (ifseqformula "1"))
                     )
                  )
                  (branch " if b_11 false"
                     (rule "false_to_not_true" (formula "1") (term "19"))
                     (builtin "Update Simplification" (formula "23"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_equal" (formula "1") (term "0"))
                     (rule "concrete_not_1" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " start_1_0 >= 1 + _atAtPre_0 FALSE"
                  (rule "inEqSimp_geqRight" (formula "21"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                  (rule "applyEq" (formula "25") (term "4") (ifseqformula "4"))
                  (rule "applyEq" (formula "6") (term "1,1,0,0,0") (ifseqformula "4"))
                  (rule "eq_or_2" (formula "6") (term "0,0,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "2") (term "2") (ifseqformula "3"))
                  (rule "applyEq" (formula "6") (term "1,1,1,0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "5") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,0"))
                  (rule "times_zero_1" (formula "4") (term "0"))
                  (rule "leq_literals" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_or_tautInEq0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,1,1,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "1,1,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "5") (term "1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "5") (term "0,1,0,0,0"))
                  (rule "leq_literals" (formula "5") (term "1,0,0,0"))
                  (rule "concrete_or_3" (formula "5") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "5") (term "0,0"))
                  (rule "concrete_or_1" (formula "5") (term "0"))
                  (rule "all_unused" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "allLeft" (formula "9") (inst "t=_inAtPre_2"))
                  (rule "applyEq" (formula "2") (term "1,1,1,7") (ifseqformula "9"))
                  (builtin "Update Simplification" (formula "2"))
                  (rule "all_unused" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "ifUnfold" (formula "20") (term "18") (inst "#boolv=b"))
                  (rule "variableDeclaration" (formula "20") (term "18") (newnames "b_14"))
                  (rule "emptyModality" (formula "1") (term "5"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "boolean_not_equal_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch " Use Case"
               (rule "false_to_not_true" (formula "11") (term "0,0,1,5,13"))
               (rule "inInt" (formula "11") (term "1,0,0,1,1,1,0,0,0,5,13"))
               (rule "inInt" (formula "11") (term "1,0,0,0,1,1,0,0,0,5,13"))
               (rule "concrete_and_3" (formula "11") (term "0,0,1,1,1,0,0,0,5,13"))
               (rule "concrete_and_3" (formula "11") (term "0,0,0,1,1,0,0,0,5,13"))
               (builtin "Update Simplification" (formula "11"))
               (rule "impRight" (formula "11"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "3"))
               (rule "variableDeclarationAssign" (formula "17") (term "13"))
               (rule "variableDeclaration" (formula "17") (term "13") (newnames "b_7"))
               (rule "castDelInt" (formula "5") (term "1,1,0"))
               (rule "castDelInt" (formula "5") (term "0,0,0"))
               (rule "castDelInt" (formula "3") (term "1,1,1,1,0,0"))
               (rule "castDelInt" (formula "4") (term "1,0,1,1,0,0,1,0"))
               (rule "castDelInt" (formula "3") (term "1,0,1,1,1,0"))
               (rule "castDelInt" (formula "3") (term "1,0,1,1,0,0,1,0"))
               (rule "castDelInt" (formula "4") (term "0,0,0,0,1,0"))
               (rule "castDelInt" (formula "3") (term "1,0,0,0,0,0,1,0"))
               (rule "castDelInt" (formula "17") (term "1,0,0,0,5"))
               (rule "castDelInt" (formula "17") (term "1,0,1,1,5"))
               (rule "castDelInt" (formula "5") (term "1,1,1,0"))
               (rule "castDelInt" (formula "5") (term "1,0,0,0"))
               (rule "castDelInt" (formula "4") (term "1,1,0,0,1,0"))
               (rule "castDelInt" (formula "3") (term "1,1,1,0"))
               (rule "castDelInt" (formula "3") (term "1,1,0,0,1,0"))
               (rule "castDelInt" (formula "4") (term "1,0,0,0,0,1,0"))
               (rule "castDelInt" (formula "3") (term "0,0,0,0,1,0"))
               (rule "castDelInt" (formula "17") (term "0,0,5"))
               (rule "castDelInt" (formula "17") (term "1,1,5"))
               (rule "translateJavaSubInt" (formula "5") (term "1,1,0"))
               (rule "translateJavaAddInt" (formula "5") (term "0,0,0"))
               (rule "translateJavaSubInt" (formula "4") (term "1,1,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "3") (term "1,1,1,0"))
               (rule "translateJavaSubInt" (formula "3") (term "1,1,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "4") (term "0,0,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "3") (term "0,0,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "17") (term "0,0,5"))
               (rule "translateJavaSubInt" (formula "17") (term "1,1,5"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1,0"))
               (rule "mul_literals" (formula "5") (term "1,1,1,0"))
               (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "17") (term "1,1,5"))
               (rule "mul_literals" (formula "17") (term "1,1,1,5"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3") (term "0,1,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "4") (term "0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3") (term "0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3") (term "1,1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,1,1,1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,1,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "17") (term "0,0,5"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "17") (term "1,1,5"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,5"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "nnf_imp2or" (formula "4") (term "0"))
               (rule "nnf_imp2or" (formula "3") (term "0"))
               (rule "nnf_notAnd" (formula "4") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "3") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "3") (term "1,0,0"))
               (rule "inEqSimp_notLeq" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0"))
               (rule "nnf_notAnd" (formula "3") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "3") (term "0,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "3") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "3") (term "1,0,0,1,1,1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,1,1,1,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,1,1,1,0,0"))
               (rule "inReachableStateExpand" (formula "5"))
               (builtin "Update Simplification" (formula "5"))
               (rule "eq_imp" (formula "5") (term "0,0,1"))
               (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "7"))
               (rule "concrete_impl_1" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "elim_forall12" (formula "6") (term "0,1,0"))
               (rule "elim_forall8" (formula "6") (term "1,0"))
               (rule "eqClose" (formula "6") (term "1,0,0,0,0,1,0,1,0"))
               (rule "eqClose" (formula "6") (term "1,0,0,1,1,0,1,0"))
               (rule "eqClose" (formula "6") (term "1,0,1,1,1,0"))
               (rule "concrete_and_3" (formula "6") (term "0,0,0,0,1,0,1,0"))
               (rule "concrete_and_3" (formula "6") (term "0,0,1,1,0,1,0"))
               (rule "concrete_and_3" (formula "6") (term "0,1,1,1,0"))
               (rule "replace_known_left" (formula "6") (term "0,0,1,0") (ifseqformula "12"))
               (rule "concrete_impl_1" (formula "6") (term "0,1,0"))
               (rule "array_store_static_analyse" (formula "6") (term "1,1,0") (ifseqformula "17"))
               (rule "concrete_and_3" (formula "6") (term "1,0"))
               (rule "nnf_imp2or" (formula "6") (term "0"))
               (rule "nnf_notAnd" (formula "6") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
               (rule "commute_or" (formula "3") (term "1,1,0,0"))
               (rule "commute_or" (formula "6") (term "1,0"))
               (rule "commute_or" (formula "3") (term "1,0,0"))
               (rule "ifthenelse_to_or_left" (formula "4") (term "1,0"))
               (rule "eqClose" (formula "4") (term "1,1,1,0"))
               (rule "concrete_or_3" (formula "4") (term "1,1,0"))
               (rule "concrete_and_3" (formula "4") (term "1,0"))
               (rule "nnf_notAnd" (formula "4") (term "0,1,0"))
               (rule "inEqSimp_notLeq" (formula "4") (term "1,0,1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,1,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,1,0,1,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "4") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "4") (term "0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0"))
               (rule "ifthenelse_to_or_left" (formula "3") (term "1,0"))
               (rule "eqSymm" (formula "3") (term "1,1,1,0"))
               (rule "nnf_notAnd" (formula "3") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1,0"))
               (rule "greater_than_comparison_new" (formula "18") (term "13"))
               (builtin "Update Simplification" (formula "18"))
               (rule "assignment_instance_field_of_this" (formula "18") (term "12,1"))
               (builtin "Update Simplification" (formula "18"))
               (rule "assignment_instance_field_of_this" (formula "18") (term "12,2"))
               (builtin "Update Simplification" (formula "18"))
               (rule "methodCallEmpty" (formula "18") (term "13,2"))
               (rule "methodCallEmpty" (formula "18") (term "13,1"))
               (rule "inEqSimp_gtToGeq" (formula "18") (term "0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
               (rule "all_unused" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "shift_paren_or" (formula "5") (term "0"))
               (rule "shift_paren_or" (formula "3") (term "0,0"))
               (rule "commute_or" (formula "3") (term "1,1,0"))
               (rule "shift_paren_or" (formula "4") (term "0"))
               (rule "commute_or" (formula "3") (term "0,0,0"))
               (rule "shift_paren_or" (formula "4") (term "0,0"))
               (rule "commute_or_2" (formula "4") (term "0,0,0"))
               (rule "eq_or" (formula "4") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "3") (term "1,1,0"))
               (rule "commute_or" (formula "3") (term "0,1,1,0"))
               (rule "cnf_rightDist" (formula "3") (term "0"))
               (rule "distr_forallAnd" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "4") (term "0"))
               (rule "shift_paren_or" (formula "3") (term "0"))
               (rule "shift_paren_or" (formula "3") (term "0,0"))
               (rule "commute_or_2" (formula "3") (term "0,0,0"))
               (rule "eq_or_2" (formula "3") (term "0,0"))
               (rule "commute_or_2" (formula "3") (term "0,0,0"))
               (rule "eq_or_2" (formula "3") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "4") (term "0"))
               (rule "distr_forallAnd" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or_2" (formula "5") (term "0"))
               (rule "shift_paren_or" (formula "4") (term "0"))
               (rule "commute_or_2" (formula "4") (term "0,0"))
               (rule "commute_or_2" (formula "4") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "4") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0"))
               (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "4") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "4") (term "1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "4") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "4") (term "1,0,0,0,0"))
               (rule "concrete_or_3" (formula "4") (term "0,0,0,0"))
               (rule "concrete_or_1" (formula "4") (term "0,0,0"))
               (rule "concrete_or_1" (formula "4") (term "0,0"))
               (rule "concrete_or_1" (formula "4") (term "0"))
               (rule "shift_paren_or" (formula "5") (term "0,0"))
               (rule "commute_or" (formula "5") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
               (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
               (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
               (rule "leq_literals" (formula "5") (term "1,0,0"))
               (rule "concrete_or_3" (formula "5") (term "0,0"))
               (rule "concrete_or_1" (formula "5") (term "0"))
               (rule "all_unused" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "ifthenelse_to_or_left" (formula "5") (term "1,0,0"))
               (rule "nnf_notAnd" (formula "5") (term "0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0,0"))
               (rule "commute_or" (formula "5") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "5") (term "0"))
               (rule "cnf_rightDist" (formula "5") (term "1,1,0"))
               (rule "commute_or" (formula "5") (term "0,1,1,0"))
               (rule "cnf_rightDist" (formula "5") (term "0"))
               (rule "distr_forallAnd" (formula "5"))
               (rule "andLeft" (formula "5"))
               (rule "commute_or_2" (formula "5") (term "0"))
               (rule "commute_or" (formula "6") (term "0"))
               (rule "shift_paren_or" (formula "5") (term "0,0"))
               (rule "eq_or" (formula "5") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "6") (term "0"))
               (rule "distr_forallAnd" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "commute_or_2" (formula "6") (term "0"))
               (rule "shift_paren_or" (formula "7") (term "0"))
               (rule "commute_or_2" (formula "7") (term "0,0"))
               (rule "shift_paren_or" (formula "6") (term "0,0"))
               (rule "commute_or_2" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq0" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "1,1,0,0,0,0"))
               (rule "add_literals" (formula "6") (term "0,1,1,0,0,0,0"))
               (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0,0,0"))
               (rule "add_literals" (formula "6") (term "1,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "6") (term "0,1,0,0,0,0"))
               (rule "leq_literals" (formula "6") (term "1,0,0,0,0"))
               (rule "concrete_or_3" (formula "6") (term "0,0,0,0"))
               (rule "concrete_or_1" (formula "6") (term "0,0,0"))
               (rule "concrete_or_1" (formula "6") (term "0,0"))
               (rule "concrete_or_1" (formula "6") (term "0"))
               (rule "shift_paren_or" (formula "7") (term "0,0,0"))
               (rule "commute_or" (formula "7") (term "0,0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "7") (term "1,0,1,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "0,1,0,0,0"))
               (rule "leq_literals" (formula "7") (term "1,0,0,0"))
               (rule "concrete_or_3" (formula "7") (term "0,0,0"))
               (rule "concrete_or_1" (formula "7") (term "0,0"))
               (rule "concrete_or_1" (formula "7") (term "0"))
               (rule "all_unused" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "ifthenelse_split_for" (formula "17"))
               (branch " start_1_1 >= 1 + at TRUE"
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_1" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "emptyModality" (formula "17") (term "13"))
                  (builtin "Update Simplification" (formula "17"))
                  (rule "boolean_equal" (formula "17") (term "0,0"))
                  (rule "concrete_not_1" (formula "17") (term "0"))
                  (rule "concrete_impl_2" (formula "17"))
                  (rule "closeTrue" (formula "17"))
               )
               (branch " start_1_1 >= 1 + at FALSE"
                  (rule "inEqSimp_geqRight" (formula "17"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                  (rule "applyEq" (formula "5") (term "1,1,0,0,0") (ifseqformula "2"))
                  (rule "eq_or_2" (formula "5") (term "0,0,0"))
                  (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "1,1,1,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_or_tautInEq0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1,1,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,1,1,0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "1,1,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "3") (term "1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "3") (term "0,1,0,0,0"))
                  (rule "leq_literals" (formula "3") (term "1,0,0,0"))
                  (rule "concrete_or_3" (formula "3") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "3") (term "0,0"))
                  (rule "concrete_or_1" (formula "3") (term "0"))
                  (rule "all_unused" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "emptyModality" (formula "14") (term "13"))
                  (builtin "Update Simplification" (formula "14"))
                  (rule "boolean_not_equal_2" (formula "14") (term "0,0"))
                  (rule "concrete_not_2" (formula "14") (term "0"))
                  (rule "concrete_impl_1" (formula "14"))
                  (rule "assignment_to_reference_array_component_no_rtsj" (formula "14") (term "12"))
                  (branch " Normal Execution (_in != null)"
                     (builtin "Update Simplification" (formula "15"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "methodCallEmpty" (formula "16") (term "12"))
                     (rule "tryEmpty" (formula "16") (term "12"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "array_store_static_analyse" (formula "1") (ifseqformula "14"))
                     (rule "true_left" (formula "1"))
                     (rule "emptyModality" (formula "14") (term "12"))
                     (builtin "Update Simplification" (formula "14"))
                     (rule "eqClose" (formula "14") (term "1"))
                     (rule "concrete_and_3" (formula "14"))
                     (rule "eqSymm" (formula "14") (term "0"))
                     (rule "eqSymm" (formula "14") (term "1,0,1"))
                     (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "7"))
                     (rule "concrete_and_1" (formula "14"))
                     (rule "allRight" (formula "14") (inst "sk=i_2"))
                     (rule "orRight" (formula "14"))
                     (rule "orRight" (formula "14"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,2,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "replace_known_left" (formula "16") (term "0,0,2,0") (ifseqformula "1"))
                     (rule "concrete_and_1" (formula "16") (term "0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_contradEq7" (formula "16") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "16") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "16") (term "0,0"))
                     (rule "ifthenelse_false" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                     (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                     (rule "ifthenelse_true" (formula "16") (term "0"))
                     (rule "allLeft" (formula "4") (inst "t=i_2"))
                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "17"))
                     (rule "concrete_or_4" (formula "4"))
                     (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "4") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "4") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "4") (term "1,0"))
                     (rule "concrete_or_4" (formula "4") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "leq_literals" (formula "4") (term "0,1"))
                     (rule "concrete_and_2" (formula "4") (term "1"))
                     (rule "concrete_or_4" (formula "4"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                     (rule "concrete_and_2" (formula "13"))
                     (rule "closeFalse" (formula "13"))
                  )
                  (branch " Null Reference (_in = null)"
                     (builtin "Update Simplification" (formula "15"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "close" (formula "14") (ifseqformula "1"))
                  )
                  (branch " Index Out of Bounds (_in != null, but _at Out of Bounds!)"
                     (builtin "Update Simplification" (formula "15"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (rule "concrete_and_2" (formula "10"))
                     (rule "closeFalse" (formula "10"))
                  )
                  (branch " Array Store Exception (incompatible dynamic element type of _in and _rec)"
                     (builtin "Update Simplification" (formula "15"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "array_store_static_analyse" (formula "12") (ifseqformula "14"))
                     (rule "closeTrue" (formula "12"))
                  )
               )
            )
         )
         (branch " Null Reference (_in = null)"
            (builtin "Update Simplification" (formula "1"))
            (rule "close" (formula "11") (ifseqformula "1"))
         )
      )
   )
   (branch " Null Reference (_in = null)"
      (builtin "Update Simplification" (formula "1"))
      (rule "close" (formula "10") (ifseqformula "1"))
   )
)
(branch " CUT: rec = null FALSE"
   (rule "concrete_or_4" (formula "4"))
   (rule "all_pull_out3" (formula "2") (term "0"))
   (rule "all_pull_out3" (formula "2") (term "0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0"))
   (rule "shift_paren_or" (formula "2") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "2") (term "0,0,0,0,0,0"))
   (rule "methodBodyExpand" (formula "11") (term "8"))
   (builtin "Update Simplification" (formula "11"))
   (rule "ifUnfold" (formula "11") (term "12") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "11") (term "12") (newnames "b_3"))
   (rule "equality_comparison_new" (formula "11") (term "12"))
   (builtin "Update Simplification" (formula "11"))
   (rule "assignment_instance_field_of_this" (formula "11") (term "12,2"))
   (builtin "Update Simplification" (formula "11"))
   (rule "assignment_instance_field_of_this" (formula "11") (term "12,1"))
   (builtin "Update Simplification" (formula "11"))
   (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "10"))
   (rule "concrete_not_2" (formula "11") (term "0"))
   (rule "ifthenelse_true_for" (formula "11"))
   (rule "if" (formula "11") (term "13"))
   (builtin "Update Simplification" (formula "11"))
   (rule "boolean_not_equal_2" (formula "11") (term "0"))
   (rule "ifthenelse_false_for" (formula "11"))
   (rule "ifUnfold" (formula "11") (term "12") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "11") (term "12") (newnames "b_4"))
   (rule "evaluate_lazy_or" (formula "11") (term "12"))
   (rule "ifElseUnfold" (formula "11") (term "12") (inst "#boolv=b_5"))
   (rule "variableDeclaration" (formula "11") (term "12") (newnames "b_5"))
   (rule "less_than_comparison_new" (formula "11") (term "12"))
   (builtin "Update Simplification" (formula "11"))
   (rule "assignment" (formula "11") (term "12,1"))
   (builtin "Update Simplification" (formula "11"))
   (rule "assignment_instance_field_of_this" (formula "11") (term "12,2"))
   (builtin "Update Simplification" (formula "11"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
   (rule "mul_literals" (formula "11") (term "1,0"))
   (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "6"))
   (rule "qeq_literals" (formula "11") (term "0,0"))
   (rule "concrete_and_2" (formula "11") (term "0"))
   (rule "ifthenelse_false_for" (formula "11"))
   (rule "ifElseSplit" (formula "11"))
   (branch " if b_5 true"
      (builtin "Update Simplification" (formula "12"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch " if b_5 false"
      (rule "false_to_not_true" (formula "1") (term "13"))
      (builtin "Update Simplification" (formula "12"))
      (builtin "Update Simplification" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "0"))
      (rule "concrete_not_2" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "elim_double_block_2" (formula "11") (term "12"))
      (rule "compound_greater_equal_than_comparison_2" (formula "11") (term "12") (inst "#v1=j_1") (inst "#v0=j"))
      (rule "variableDeclarationAssign" (formula "11") (term "12"))
      (rule "variableDeclaration" (formula "11") (term "12") (newnames "j_2"))
      (rule "assignment_instance_field_of_this" (formula "11") (term "12"))
      (builtin "Update Simplification" (formula "11"))
      (rule "variableDeclarationAssign" (formula "11") (term "13"))
      (rule "variableDeclaration" (formula "11") (term "13") (newnames "j_3"))
      (rule "assignment_read_attribute" (formula "11") (term "13"))
      (branch " Normal Execution (_in != null)"
         (builtin "Update Simplification" (formula "12"))
         (builtin "Update Simplification" (formula "11"))
         (rule "greater_equal_than_comparison_new" (formula "11") (term "14"))
         (builtin "Update Simplification" (formula "11"))
         (rule "assignment_instance_field_of_this" (formula "11") (term "12,1"))
         (builtin "Update Simplification" (formula "11"))
         (rule "blockEmpty" (formula "11") (term "13,1"))
         (rule "assignment_instance_field_of_this" (formula "11") (term "12,2"))
         (builtin "Update Simplification" (formula "11"))
         (rule "blockEmpty" (formula "11") (term "13,2"))
         (rule "inEqSimp_commuteGeq" (formula "11") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
         (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0"))
         (rule "leq_literals" (formula "11") (term "0,0"))
         (rule "concrete_and_2" (formula "11") (term "0"))
         (rule "ifthenelse_false_for" (formula "11"))
         (rule "array_length_non_negative_3" (formula "7") (term "0") (ifseqformula "1") (ifseqformula "5") (ifseqformula "10"))
         (rule "ifSplit" (formula "12"))
         (branch " if b_4 true"
            (builtin "Update Simplification" (formula "13"))
            (builtin "Update Simplification" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch " if b_4 false"
            (rule "false_to_not_true" (formula "1") (term "13"))
            (builtin "Update Simplification" (formula "13"))
            (builtin "Update Simplification" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "0"))
            (rule "concrete_not_2" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "12") (term "12"))
            (rule "variableDeclaration" (formula "12") (term "12") (newnames "start"))
            (rule "compound_subtraction_1" (formula "12") (term "12") (inst "#v=j"))
            (rule "variableDeclarationAssign" (formula "12") (term "12"))
            (rule "variableDeclaration" (formula "12") (term "12") (newnames "j_6"))
            (rule "assignment_read_attribute" (formula "12") (term "12"))
            (branch " Normal Execution (_in != null)"
               (builtin "Update Simplification" (formula "13"))
               (builtin "Update Simplification" (formula "12"))
               (rule "assignmentSubtractionInt" (formula "12") (term "13"))
               (builtin "Update Simplification" (formula "12"))
               (rule "translateJavaSubInt" (formula "12") (term "4"))
               (rule "polySimp_elimSub" (formula "12") (term "4"))
               (rule "mul_literals" (formula "12") (term "1,4"))
               (rule "polySimp_addComm0" (formula "12") (term "4"))
               (rule "whileInvDiamondDec2" (formula "12") (newnames "start_0,get_2,start_2,get_3,anon_1,j_7") (inst "variant=start") (inst "inv=  start >= _at
& (  start <  _in.length
   & (  \\forall jint i; 
          (     i >  start
              & (  i <  _in.length
                 & (i >  _at & i >  (jint)(0)))
              & inInt(i)
           ->   _in[i]
              = getAtPre_2(_inAtPre_1,
                           (jint)(javaSubInt(i,
                                             (jint)(1)))))
      & \\forall jint i; 
          (   i >  _at & i <= start & inInt(i)
           -> _in[i] = getAtPre_2(_inAtPre_1, i))))
& inReachableState") (inst "#v2=j") (inst "#v1=b") (inst "#modifies={start,\\for int i; \\if (     (jint)(javaAddInt(_at, (jint)(1)))
                   <= i
                 &    i
                   <= (jint)(javaSubInt(_in.length,
                                        (jint)(1)))) _in[i]}"))
               (branch " Invariant Initially Valid"
                  (builtin "Update Simplification" (formula "12"))
                  (rule "eqClose" (formula "12") (term "1,0,1,1,1,0,0"))
                  (rule "inInt" (formula "12") (term "1,0,0,1,1,1,0,0"))
                  (rule "inInt" (formula "12") (term "1,0,0,0,1,1,0,0"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,1,1,1,0,0"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,0,1,1,0,0"))
                  (rule "concrete_impl_4" (formula "12") (term "0,1,1,1,0,0"))
                  (rule "castDelInt" (formula "12") (term "1,0,1,1,1,0,0,1,1,0,0"))
                  (rule "castDelInt" (formula "12") (term "0,0,0,0"))
                  (rule "castDelInt" (formula "12") (term "0,1"))
                  (rule "castDelInt" (formula "12") (term "0,0,1,0,0"))
                  (rule "castDelInt" (formula "12") (term "1,1,1,1,0,0,0,1,1,0,0"))
                  (rule "castDelInt" (formula "12") (term "1,0,0,0,0,1,1,0,0"))
                  (rule "castDelInt" (formula "12") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,1,1,0,0,1,1,0,0"))
                  (rule "eqSymm" (formula "12") (term "1,0,0,1,1,0,0"))
                  (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "1"))
                  (rule "concrete_and_3" (formula "12") (term "0"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "12") (term "0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor2" (formula "12") (term "0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "1,0,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "12") (term "0,1,0"))
                  (rule "concrete_and_1" (formula "12") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1"))
                  (rule "mul_literals" (formula "12") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "8"))
                  (rule "concrete_and_1" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,0,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,1,1,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,1,1,1,0,0,0,0"))
                  (rule "all_unused" (formula "12") (term "1,0"))
                  (rule "concrete_and_3" (formula "12") (term "0"))
                  (rule "cut_direct" (formula "12") (term "1"))
                  (branch " CUT: in.length >= 1 TRUE"
                     (rule "concrete_and_3" (formula "13"))
                     (rule "allRight" (formula "13") (inst "sk=i_1"))
                     (rule "orRight" (formula "13"))
                     (rule "orRight" (formula "13"))
                     (rule "orRight" (formula "14"))
                     (rule "orRight" (formula "15"))
                     (rule "inEqSimp_leqRight" (formula "13"))
                     (rule "inEqSimp_geqRight" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "16"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "add_zero_left" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (rule "concrete_or_1" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "4"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch " CUT: in.length >= 1 FALSE"
                     (rule "concrete_and_4" (formula "13"))
                     (rule "false_right" (formula "13"))
                     (rule "inEqSimp_geqRight" (formula "12"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "times_zero_2" (formula "9") (term "1,0"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                     (rule "concrete_and_2" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
               (branch " Body Preserves Invariant and Decreases Variant"
                  (builtin "Update Simplification" (formula "12"))
                  (rule "inInt" (formula "12") (term "1,0,0,0,1,1,0,1,0,0,0,1"))
                  (rule "inInt" (formula "12") (term "1,0,0,1,1,1,0,1,0,0,0,1"))
                  (rule "inInt" (formula "12") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18,1,1,1"))
                  (rule "inInt" (formula "12") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,18,1,1,1"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,0,1,1,0,1,0,0,0,1"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,1,1,1,0,1,0,0,0,1"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,1,1,1,0,1,0,0,1,1,0,18,1,1,1"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,0,1,1,0,1,0,0,1,1,0,18,1,1,1"))
                  (rule "impRight" (formula "12"))
                  (rule "impRight" (formula "13"))
                  (rule "andLeft" (formula "2"))
                  (rule "impRight" (formula "15"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "5"))
                  (rule "variableDeclarationAssign" (formula "1") (term "6"))
                  (rule "variableDeclarationAssign" (formula "24") (term "18"))
                  (rule "variableDeclaration" (formula "1") (term "6") (newnames "b_8"))
                  (rule "variableDeclaration" (formula "24") (term "18") (newnames "exc_2"))
                  (rule "assignment_instance_field_of_this" (formula "24") (term "18"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "variableDeclaration" (formula "24") (term "19") (newnames "thrownExc_1"))
                  (rule "blockThrow" (formula "24") (term "1,0,0,19"))
                  (rule "methodCallThrow" (formula "24") (term "1,0,0,19"))
                  (builtin "Update Simplification" (formula "24"))
                  (rule "castDelInt" (formula "9") (term "1"))
                  (rule "castDelInt" (formula "2") (term "1,0,1,1,7"))
                  (rule "castDelInt" (formula "2") (term "1,0,0,0,7"))
                  (rule "castDelInt" (formula "2") (term "1,0,0,0,3"))
                  (rule "castDelInt" (formula "2") (term "1,0,1,1,3"))
                  (rule "castDelInt" (formula "7") (term "1,1,0"))
                  (rule "castDelInt" (formula "7") (term "0,0,0"))
                  (rule "castDelInt" (formula "5") (term "1,1,1,1,0,0"))
                  (rule "castDelInt" (formula "6") (term "1,0,1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "6") (term "0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,0,1,1,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,0,1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,0,0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "1") (term "1,1,2"))
                  (rule "castDelInt" (formula "1") (term "0,0,2"))
                  (rule "castDelInt" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "24") (term "1,0,1,1,6"))
                  (rule "castDelInt" (formula "24") (term "1,0,0,0,6"))
                  (rule "castDelInt" (formula "24") (term "1,1,1,0,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "24") (term "1,0,1,1,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "24") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "2") (term "1,1,7"))
                  (rule "castDelInt" (formula "2") (term "0,0,7"))
                  (rule "castDelInt" (formula "2") (term "0,0,3"))
                  (rule "castDelInt" (formula "2") (term "1,1,3"))
                  (rule "castDelInt" (formula "7") (term "1,1,1,0"))
                  (rule "castDelInt" (formula "7") (term "1,0,0,0"))
                  (rule "castDelInt" (formula "6") (term "1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "6") (term "1,0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,1,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "5") (term "0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "1") (term "1,1,1,2"))
                  (rule "castDelInt" (formula "1") (term "1,0,0,2"))
                  (rule "castDelInt" (formula "24") (term "0,0,1,0,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "24") (term "1,1,6"))
                  (rule "castDelInt" (formula "24") (term "0,0,6"))
                  (rule "castDelInt" (formula "24") (term "1,1,1,1,0,0,0,1,1,0,18"))
                  (rule "castDelInt" (formula "24") (term "1,1,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "eqSymm" (formula "12") (term "0"))
                  (rule "eqSymm" (formula "24") (term "1,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "translateJavaSubInt" (formula "2") (term "1,1,7"))
                  (rule "translateJavaAddInt" (formula "2") (term "0,0,7"))
                  (rule "translateJavaAddInt" (formula "2") (term "0,0,3"))
                  (rule "translateJavaSubInt" (formula "2") (term "1,1,3"))
                  (rule "translateJavaSubInt" (formula "7") (term "1,1,0"))
                  (rule "translateJavaAddInt" (formula "7") (term "0,0,0"))
                  (rule "translateJavaSubInt" (formula "6") (term "1,1,0,0,1,0"))
                  (rule "translateJavaAddInt" (formula "6") (term "0,0,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "5") (term "1,1,1,0"))
                  (rule "translateJavaSubInt" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "translateJavaAddInt" (formula "5") (term "0,0,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "1") (term "1,1,2"))
                  (rule "translateJavaAddInt" (formula "1") (term "0,0,2"))
                  (rule "translateJavaAddInt" (formula "24") (term "0,0,1,0,0,0,1,1,0,18"))
                  (rule "translateJavaSubInt" (formula "24") (term "1,1,6"))
                  (rule "translateJavaAddInt" (formula "24") (term "0,0,6"))
                  (rule "translateJavaSubInt" (formula "24") (term "1,1,1,0,0,0,1,1,0,18"))
                  (rule "translateJavaSubInt" (formula "24") (term "1,1,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "eqSymm" (formula "24") (term "1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_ltToLeq" (formula "4"))
                  (rule "inEqSimp_gtToGeq" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "5") (term "0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_gtToGeq" (formula "24") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_gtToGeq" (formula "24") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_gtToGeq" (formula "24") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0,18"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,7"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,7"))
                  (rule "polySimp_elimSub" (formula "2") (term "1,1,3"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,3"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,1,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "6") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "5") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "1") (term "1,1,2"))
                  (rule "mul_literals" (formula "1") (term "1,1,1,2"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,1,6"))
                  (rule "mul_literals" (formula "24") (term "1,1,1,6"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "1,1,1,1,0,0,0,1,1,0,18"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_gtToGeq" (formula "24") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "24") (term "0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0,18"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,7"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,3"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0,0,1,1,0,18"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,6"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,7"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1,3"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,2"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,1,6"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,1,1,0,0,0,1,1,0,18"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,7"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,3"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,2"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,1,0,0,0,1,1,0,18"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,6"))
                  (rule "applyEq" (formula "1") (term "1,1,0,2") (ifseqformula "10"))
                  (rule "applyEq" (formula "24") (term "1,1,0,6") (ifseqformula "10"))
                  (rule "applyEq" (formula "6") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "24") (term "0,1,1,1,6") (ifseqformula "11"))
                  (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "6") (term "0,1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "5") (term "1,1,0,0,0,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "5") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "1") (term "0,5") (ifseqformula "11"))
                  (rule "applyEq" (formula "7") (term "1") (ifseqformula "11"))
                  (rule "applyEq" (formula "1") (term "3") (ifseqformula "11"))
                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "2") (term "1,1,0,3") (ifseqformula "10"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                  (rule "applyEq" (formula "24") (term "7") (ifseqformula "11"))
                  (rule "applyEq" (formula "2") (term "0,6") (ifseqformula "11"))
                  (rule "applyEq" (formula "1") (term "0,1,1,1,2") (ifseqformula "11"))
                  (rule "applyEq" (formula "6") (term "0,1,1,1,0,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "10"))
                  (rule "applyEq" (formula "24") (term "1") (ifseqformula "11"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "10"))
                  (rule "applyEq" (formula "24") (term "17") (ifseqformula "11"))
                  (rule "applyEq" (formula "7") (term "0,3") (ifseqformula "11"))
                  (rule "applyEq" (formula "5") (term "0,1,1,1,0,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "7") (term "0,1,1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "2") (term "4") (ifseqformula "11"))
                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "10"))
                  (rule "applyEq" (formula "2") (term "0,1,1,1,3") (ifseqformula "11"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "11"))
                  (rule "applyEq" (formula "24") (term "10") (ifseqformula "11"))
                  (rule "applyEq" (formula "24") (term "0,9") (ifseqformula "11"))
                  (rule "applyEq" (formula "5") (term "0,1,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "6") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "5") (term "0,1,0,0,0,1,1,0,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "6") (term "0,1,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "5") (term "0,2,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "6") (term "0,2,0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "5") (term "0,1,0,1,0") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,0,18"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "6") (term "0"))
                  (rule "nnf_imp2or" (formula "5") (term "0"))
                  (rule "nnf_notAnd" (formula "6") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,1,1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "1,0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,1,1,1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "23") (term "0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "nnf_imp2or" (formula "23") (term "0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,1,1,0,1,0,0,1,1,0,18"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "greater_than_comparison_new" (formula "1") (term "6"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "assignment_instance_field_of_this" (formula "1") (term "4,2"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "assignment_instance_field_of_this" (formula "1") (term "4,1"))
                  (builtin "Update Simplification" (formula "1"))
                  (rule "methodCallEmpty" (formula "1") (term "5,1"))
                  (rule "methodCallEmpty" (formula "1") (term "5,2"))
                  (rule "inEqSimp_gtToGeq" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                  (rule "nnf_notAnd" (formula "23") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inReachableStateExpand" (formula "7"))
                  (builtin "Update Simplification" (formula "7"))
                  (rule "eq_imp" (formula "7") (term "0,0,1"))
                  (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "12"))
                  (rule "concrete_impl_1" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "elim_forall12" (formula "8") (term "0,1,0"))
                  (rule "elim_forall8" (formula "8") (term "1,0"))
                  (rule "eqClose" (formula "8") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "eqClose" (formula "8") (term "1,0,0,1,1,0,1,0"))
                  (rule "eqClose" (formula "8") (term "1,0,1,1,1,0"))
                  (rule "concrete_and_3" (formula "8") (term "0,0,0,0,1,0,1,0"))
                  (rule "concrete_and_3" (formula "8") (term "0,0,1,1,0,1,0"))
                  (rule "concrete_and_3" (formula "8") (term "0,1,1,1,0"))
                  (rule "replace_known_left" (formula "8") (term "0,0,1,0") (ifseqformula "17"))
                  (rule "concrete_impl_1" (formula "8") (term "0,1,0"))
                  (rule "array_store_static_analyse" (formula "8") (term "1,1,0") (ifseqformula "23"))
                  (rule "concrete_and_3" (formula "8") (term "1,0"))
                  (rule "nnf_imp2or" (formula "8") (term "0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "24") (term "0,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_zero_left" (formula "24") (term "0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_literals" (formula "24") (term "0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "add_zero_left" (formula "24") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,18"))
                  (rule "commute_or" (formula "5") (term "1,1,0,0"))
                  (rule "ifthenelse_to_or_left" (formula "6") (term "1,0"))
                  (rule "eqClose" (formula "6") (term "1,1,1,0"))
                  (rule "concrete_or_3" (formula "6") (term "1,1,0"))
                  (rule "concrete_and_3" (formula "6") (term "1,0"))
                  (rule "nnf_notAnd" (formula "6") (term "0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,0"))
                  (rule "ifthenelse_to_or_left" (formula "5") (term "1,0"))
                  (rule "eqSymm" (formula "5") (term "1,1,1,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "commute_or" (formula "8") (term "1,0"))
                  (rule "commute_or" (formula "5") (term "1,0,0"))
                  (rule "all_unused" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "commute_or" (formula "5") (term "1,1,0"))
                  (rule "tryCatchThrow" (formula "23") (term "1,0,0,18"))
                  (rule "shift_paren_or" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "7") (term "0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0"))
                  (rule "commute_or" (formula "5") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "6") (term "0,0"))
                  (rule "commute_or_2" (formula "6") (term "0,0,0"))
                  (rule "eq_or" (formula "6") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "5") (term "1,1,0"))
                  (rule "commute_or" (formula "5") (term "0,1,1,0"))
                  (rule "cnf_rightDist" (formula "5") (term "0"))
                  (rule "distr_forallAnd" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "commute_or" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "5") (term "0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0"))
                  (rule "commute_or_2" (formula "5") (term "0,0,0"))
                  (rule "eq_or_2" (formula "5") (term "0,0"))
                  (rule "commute_or_2" (formula "5") (term "0,0,0"))
                  (rule "eq_or_2" (formula "5") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "6") (term "0"))
                  (rule "distr_forallAnd" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "shift_paren_or" (formula "6") (term "0"))
                  (rule "commute_or_2" (formula "6") (term "0,0"))
                  (rule "commute_or_2" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "1,1,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "leq_literals" (formula "6") (term "1,0,0,0,0"))
                  (rule "concrete_or_3" (formula "6") (term "0,0,0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "7") (term "0,0"))
                  (rule "commute_or" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "7") (term "1,0,0"))
                  (rule "concrete_or_3" (formula "7") (term "0,0"))
                  (rule "concrete_or_1" (formula "7") (term "0"))
                  (rule "all_unused" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "ifthenelse_to_or_left" (formula "7") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,0"))
                  (rule "commute_or" (formula "7") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "cnf_rightDist" (formula "7") (term "1,1,0"))
                  (rule "commute_or" (formula "7") (term "0,1,1,0"))
                  (rule "cnf_rightDist" (formula "7") (term "0"))
                  (rule "distr_forallAnd" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "commute_or" (formula "8") (term "0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "shift_paren_or" (formula "7") (term "0,0"))
                  (rule "eq_or" (formula "7") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0"))
                  (rule "distr_forallAnd" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "shift_paren_or" (formula "9") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0,0"))
                  (rule "shift_paren_or" (formula "8") (term "0,0"))
                  (rule "commute_or_2" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "leq_literals" (formula "8") (term "1,0,0,0,0"))
                  (rule "concrete_or_3" (formula "8") (term "0,0,0,0"))
                  (rule "concrete_or_1" (formula "8") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "8") (term "0,0"))
                  (rule "concrete_or_1" (formula "8") (term "0"))
                  (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                  (rule "commute_or" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "9") (term "1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "0,1,0,0,0"))
                  (rule "leq_literals" (formula "9") (term "1,0,0,0"))
                  (rule "concrete_or_3" (formula "9") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "9") (term "0,0"))
                  (rule "concrete_or_1" (formula "9") (term "0"))
                  (rule "ifthenelse_split_for" (formula "1"))
                  (branch " start_0 >= 1 + _atAtPre_0 TRUE"
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "all_unused" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "allLeft" (formula "11") (inst "t=_inAtPre_2"))
                     (rule "applyEq" (formula "3") (term "1,1,1,7") (ifseqformula "11"))
                     (builtin "Update Simplification" (formula "3"))
                     (rule "ifUnfold" (formula "24") (term "18") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "24") (term "18") (newnames "b_15"))
                     (rule "emptyModality" (formula "2") (term "5"))
                     (builtin "Update Simplification" (formula "2"))
                     (rule "boolean_equal" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "greater_than_comparison_new" (formula "23") (term "18"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "18,1"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "assignment_instance_field_of_this" (formula "23") (term "18,2"))
                     (builtin "Update Simplification" (formula "23"))
                     (rule "inEqSimp_gtToGeq" (formula "23") (term "0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                     (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "1"))
                     (rule "ifthenelse_true_for" (formula "23"))
                     (rule "array_length_non_negative_3" (formula "19") (term "0") (ifseqformula "12") (ifseqformula "16") (ifseqformula "22"))
                     (rule "ifElseUnfold" (formula "23") (term "1,0,0,19") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "23") (term "1,0,0,19") (newnames "b_16"))
                     (rule "ifSplit" (formula "23"))
                     (branch " if b_15 true"
                        (builtin "Update Simplification" (formula "24"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_equal" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "eval_order_array_access3" (formula "23") (term "18") (inst "#v1=v_Record") (inst "#v2=j") (inst "#v0=var"))
                        (rule "variableDeclarationAssign" (formula "23") (term "18"))
                        (rule "variableDeclaration" (formula "23") (term "18") (newnames "var_2"))
                        (rule "assignment_instance_field_of_this" (formula "23") (term "18"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "variableDeclarationAssign" (formula "23") (term "19"))
                        (rule "variableDeclaration" (formula "23") (term "19") (newnames "j_12"))
                        (rule "assignment_instance_field_of_this" (formula "23") (term "19"))
                        (builtin "Update Simplification" (formula "23"))
                        (rule "ifUnfold" (formula "23") (term "20") (inst "#boolv=b"))
                        (rule "variableDeclaration" (formula "23") (term "20") (newnames "b_18"))
                        (rule "compound_assignment_5" (formula "23") (term "20"))
                        (rule "ifElseUnfold" (formula "23") (term "20") (inst "#boolv=b_19"))
                        (rule "variableDeclaration" (formula "23") (term "20") (newnames "b_19"))
                        (rule "compound_less_equal_than_comparison_1" (formula "23") (term "20") (inst "#v0=j_13"))
                        (rule "variableDeclarationAssign" (formula "23") (term "20"))
                        (rule "variableDeclaration" (formula "23") (term "20") (newnames "j_13"))
                        (rule "assignment_read_attribute" (formula "23") (term "20"))
                        (branch " Normal Execution (_in != null)"
                           (builtin "Update Simplification" (formula "24"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "less_equal_than_comparison_new" (formula "23") (term "21"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "assignment_instance_field_of_this" (formula "23") (term "20,2"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "assignment_instance_field_of_this" (formula "23") (term "20,1"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (rule "concrete_and_2" (formula "23") (term "0"))
                           (rule "ifthenelse_false_for" (formula "23"))
                           (rule "ifElse" (formula "23") (term "21"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "boolean_not_equal_2" (formula "23") (term "0"))
                           (rule "ifthenelse_false_for" (formula "23"))
                           (rule "less_than_comparison_new" (formula "23") (term "20"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "assignment_instance_field_of_this" (formula "23") (term "20,1"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "blockEmpty" (formula "23") (term "21,1"))
                           (rule "assignment_instance_field_of_this" (formula "23") (term "20,2"))
                           (builtin "Update Simplification" (formula "23"))
                           (rule "blockEmpty" (formula "23") (term "21,2"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                           (rule "mul_literals" (formula "23") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "23") (term "0,0"))
                           (rule "concrete_and_2" (formula "23") (term "0"))
                           (rule "ifthenelse_false_for" (formula "23"))
                           (rule "ifSplit" (formula "23"))
                           (branch " if b_18 true"
                              (builtin "Update Simplification" (formula "24"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_not_equal_2" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch " if b_18 false"
                              (rule "false_to_not_true" (formula "1") (term "21"))
                              (builtin "Update Simplification" (formula "24"))
                              (builtin "Update Simplification" (formula "1"))
                              (rule "boolean_not_equal_2" (formula "1") (term "0"))
                              (rule "concrete_not_2" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "23") (term "20"))
                              (rule "variableDeclaration" (formula "23") (term "20") (newnames "v_Record_1"))
                              (rule "eval_order_array_access5" (formula "23") (term "20") (inst "#v1=j_13") (inst "#ar1=var_3"))
                              (rule "variableDeclarationAssign" (formula "23") (term "20"))
                              (rule "variableDeclaration" (formula "23") (term "20") (newnames "var_3"))
                              (rule "assignment_instance_field_of_this" (formula "23") (term "20"))
                              (builtin "Update Simplification" (formula "23"))
                              (rule "variableDeclarationAssign" (formula "23") (term "21"))
                              (rule "variableDeclaration" (formula "23") (term "21") (newnames "j_14"))
                              (rule "assignmentSubtractionInt" (formula "23") (term "21"))
                              (builtin "Update Simplification" (formula "23"))
                              (rule "translateJavaSubInt" (formula "23") (term "5"))
                              (rule "polySimp_elimSub" (formula "23") (term "5"))
                              (rule "mul_literals" (formula "23") (term "1,5"))
                              (rule "polySimp_addComm0" (formula "23") (term "5"))
                              (rule "assignment_array2" (formula "23") (term "22"))
                              (branch " Normal Execution (var_3 != null)"
                                 (builtin "Update Simplification" (formula "24"))
                                 (builtin "Update Simplification" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "castDelInt" (formula "25") (term "0,0,0,7"))
                                 (rule "castDelInt" (formula "25") (term "0,1,0,7"))
                                 (rule "castDelInt" (formula "24") (term "0"))
                                 (rule "castDelInt" (formula "23") (term "1"))
                                 (rule "castDelInt" (formula "25") (term "1,1,7"))
                                 (rule "castDelInt" (formula "25") (term "1,2,7"))
                                 (rule "inEqSimp_ltRight" (formula "24"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "24"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,7"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,7"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,7"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,7"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,7"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,7"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,7"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,1,0,7"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0,7"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,7"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,7"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,7"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,7"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,7"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,7"))
                                 (rule "replace_known_left" (formula "25") (term "1,0,7") (ifseqformula "1"))
                                 (rule "concrete_and_3" (formula "25") (term "0,7"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,7"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,7"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,7"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_1" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_1" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "assignment_to_reference_array_component_no_rtsj" (formula "23") (term "21"))
                                 (branch " Normal Execution (var_2 != null)"
                                    (builtin "Update Simplification" (formula "24"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "array_store_static_analyse" (formula "1") (ifseqformula "23"))
                                    (rule "true_left" (formula "1"))
                                    (rule "postdecrement" (formula "23") (term "21"))
                                    (rule "compound_subtraction_1" (formula "23") (term "21") (inst "#v=j"))
                                    (rule "variableDeclarationAssign" (formula "23") (term "21"))
                                    (rule "variableDeclaration" (formula "23") (term "21") (newnames "j_15"))
                                    (rule "widening_identity_cast_5" (formula "23") (term "21"))
                                    (rule "assignment" (formula "23") (term "21"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "assignmentSubtractionInt" (formula "23") (term "22"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "tryEmpty" (formula "23") (term "21"))
                                    (rule "methodCallEmpty" (formula "23") (term "21"))
                                    (rule "translateJavaSubInt" (formula "23") (term "5"))
                                    (rule "polySimp_elimSub" (formula "23") (term "5"))
                                    (rule "mul_literals" (formula "23") (term "1,5"))
                                    (rule "polySimp_addComm0" (formula "23") (term "5"))
                                    (rule "emptyModality" (formula "23") (term "21"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "boolean_not_equal_2" (formula "23") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "23") (term "0,0,1"))
                                    (rule "concrete_impl_2" (formula "23") (term "0"))
                                    (rule "concrete_not_2" (formula "23") (term "0,1"))
                                    (rule "concrete_and_1" (formula "23"))
                                    (rule "concrete_impl_1" (formula "23"))
                                    (rule "castDelInt" (formula "23") (term "1,0,0,0,0,1,1,0,1,0,0"))
                                    (rule "castDelInt" (formula "23") (term "1,1,0,1,0,1,0,0"))
                                    (rule "castDelInt" (formula "23") (term "0,0,0,1,0,0"))
                                    (rule "castDelInt" (formula "23") (term "0,1"))
                                    (rule "castDelInt" (formula "23") (term "0,1,0"))
                                    (rule "castDelInt" (formula "23") (term "1,1,1,0,0,1,1,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "23") (term "1,0,1,1,1,0,1,0,0"))
                                    (rule "eqSymm" (formula "23") (term "1,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,1,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,1,1,0,0,1,1,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,1,0,0,1,1,1,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0"))
                                    (rule "concrete_and_3" (formula "23") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,1,0"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,10,0,0") (ifseqformula "10"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1"))
                                    (rule "mul_literals" (formula "23") (term "1,1"))
                                    (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "1"))
                                    (rule "concrete_and_3" (formula "23"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1") (ifseqformula "2"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,1"))
                                    (rule "concrete_or_1" (formula "23") (term "0,0,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1"))
                                    (rule "inReachableStateRewrite" (formula "23") (term "1,1") (ifseqformula "12"))
                                    (builtin "Update Simplification" (formula "23"))
                                    (rule "eq_imp" (formula "23") (term "0,0,0,1,1,1"))
                                    (rule "elim_forall12" (formula "23") (term "0,1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,1,1,1,0,1,0,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,1,1,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,1,1") (ifseqformula "2"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,1,1") (ifseqformula "4"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,1,1") (ifseqformula "4"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,0,1,1,0,1,0,1,0,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,1,1") (ifseqformula "4"))
                                    (rule "concrete_and_1" (formula "23") (term "0,2,1,1,1,0,1,0,1,1,1"))
                                    (rule "elim_forall12" (formula "23") (term "0,1,0,1,1,1,1"))
                                    (rule "elim_forall8" (formula "23") (term "1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,0,1,0,1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,1,1,0,1,0,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,1,1,1,0,1,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,0,0,1,0,1,0,1,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "0,1,1,0,1,0,1,1,1"))
                                    (rule "ifthenelse_true" (formula "23") (term "1,1,1,0,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,1") (ifseqformula "16"))
                                    (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,1,1"))
                                    (rule "elim_forall8" (formula "23") (term "1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,0,0,1,0,1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,0,1,1,0,1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "0,0,1,1,1,0,1,1,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,0,0,1,0,1,0,1,1,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,0,1,1,0,1,0,1,1,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1,1,1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,0,0,0,1,0,1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,0,1,1,0,1,0,1,1,1,1"))
                                    (rule "eqClose" (formula "23") (term "1,0,2,1,1,1,0,1,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,0,1,1,0,1,0,1,1,1,1"))
                                    (rule "concrete_and_3" (formula "23") (term "0,2,1,1,1,0,1,1,1,1"))
                                    (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,1,1") (ifseqformula "16"))
                                    (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,1,1,1"))
                                    (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,1,1,1") (ifseqformula "22"))
                                    (rule "concrete_and_3" (formula "23") (term "1,0,1,1,1,1"))
                                    (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,1,1") (ifseqformula "22"))
                                    (rule "concrete_and_3" (formula "23") (term "1,0,1,1,1"))
                                    (rule "nnf_imp2or" (formula "23") (term "0,1,1,1,1"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,1,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,1,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,1,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,1,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,1,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,1,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,1,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,1,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,1,1"))
                                    (rule "all_unused" (formula "23") (term "0,0,1,1,1"))
                                    (rule "concrete_and_1" (formula "23") (term "0,1,1,1"))
                                    (rule "ifthenelse_split" (formula "23") (term "5,0"))
                                    (branch " start_0 >= 2 + _atAtPre_0 TRUE"
                                       (rule "replace_known_left" (formula "24") (term "0,0,1,0,1,1,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "0,1,0,1,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0,0,0,1,1,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "0,0,0,0,1,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,6,0,1,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "6,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "1,0,0,0,1,0,1,1,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,1,0,1,0,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "1,0,1,0,1,0,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,1,1,0,1,1,1,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "1,0,1,1,0,1,1,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,1,0,1,0,0,0,1") (ifseqformula "1"))
                                       (rule "ifthenelse_true" (formula "24") (term "1,0,1,0,0,0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inReachableStateRewrite" (formula "23") (term "0,1,1") (ifseqformula "12"))
                                       (builtin "Update Simplification" (formula "23"))
                                       (rule "eq_imp" (formula "23") (term "0,0,0,1,0,1,1"))
                                       (rule "elim_forall12" (formula "23") (term "0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "23") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "23") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "23") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "23") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "23") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "23") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "elim_forall12" (formula "23") (term "0,1,0,1,1,0,1,1"))
                                       (rule "elim_forall8" (formula "23") (term "1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,1,1,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "23") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "23") (term "0,1,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "23") (term "1,1,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,0,1,1") (ifseqformula "16"))
                                       (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,0,1,1"))
                                       (rule "elim_forall8" (formula "23") (term "1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,1,1,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "23") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "23") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "replace_known_left" (formula "23") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "16"))
                                       (rule "concrete_impl_1" (formula "23") (term "0,1,0,1,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,1,0,1,1") (ifseqformula "22"))
                                       (rule "concrete_and_3" (formula "23") (term "1,0,1,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "23") (term "1,1,0,1,0,1,1") (ifseqformula "22"))
                                       (rule "concrete_and_3" (formula "23") (term "1,0,1,0,1,1"))
                                       (rule "nnf_imp2or" (formula "23") (term "0,1,1,0,1,1"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "all_unused" (formula "23") (term "0,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "23") (term "0,1,0,1,1"))
                                       (rule "eq_or_2" (formula "23") (term "1,1"))
                                       (rule "allLeft" (formula "6") (inst "t=(jint)(-1 + start_0)"))
                                       (rule "castDelInt" (formula "6") (term "0,0,0,0"))
                                       (rule "castDelInt" (formula "6") (term "0,1,0"))
                                       (rule "castDelInt" (formula "6") (term "1,1,1"))
                                       (rule "castDelInt" (formula "6") (term "1,0,1"))
                                       (rule "castDelInt" (formula "6") (term "0,1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "1,0,0"))
                                       (rule "concrete_or_4" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "6") (term "0,0"))
                                       (rule "concrete_or_2" (formula "6") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                       (rule "concrete_and_2" (formula "6") (term "0"))
                                       (rule "concrete_or_2" (formula "6"))
                                       (rule "applyEq" (formula "24") (term "6,0,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,1,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "5,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "0,0,0,0,1,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "1,0,1,1,0,1,1,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "1,0,1,0,0,0,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "1,0,0,0,1,0,1,1,1,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "24") (term "1,0,1,0,1,0,1") (ifseqformula "6"))
                                       (rule "inReachableStateRewrite" (formula "24") (term "0,1,1") (ifseqformula "13"))
                                       (builtin "Update Simplification" (formula "24"))
                                       (rule "eq_imp" (formula "24") (term "0,0,0,1,0,1,1"))
                                       (rule "elim_forall12" (formula "24") (term "0,1,0,1,1,0,1,1"))
                                       (rule "elim_forall12" (formula "24") (term "0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "24") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "24") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "24") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "24") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "24") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_or_1" (formula "24") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "elim_forall8" (formula "24") (term "1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,1,1,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "24") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "17"))
                                       (rule "concrete_impl_1" (formula "24") (term "0,1,0,1,1,0,1,1"))
                                       (rule "elim_forall8" (formula "24") (term "1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "24") (term "0,1,1,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "24") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "24") (term "0,1,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "24") (term "1,1,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,1,0,1,0,1,1") (ifseqformula "17"))
                                       (rule "concrete_impl_1" (formula "24") (term "0,1,0,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "24") (term "1,1,0,1,0,1,1") (ifseqformula "23"))
                                       (rule "concrete_and_3" (formula "24") (term "1,0,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "24") (term "1,1,0,1,1,0,1,1") (ifseqformula "23"))
                                       (rule "concrete_and_3" (formula "24") (term "1,0,1,1,0,1,1"))
                                       (rule "nnf_imp2or" (formula "24") (term "0,1,1,0,1,1"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "all_unused" (formula "24") (term "0,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "24") (term "0,1,0,1,1"))
                                       (rule "eq_or_2" (formula "24") (term "1,1"))
                                       (rule "allLeft" (formula "8") (inst "t=-1 + start_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,1"))
                                       (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "8") (term "1,0,0,1") (ifseqformula "6"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0,1") (ifseqformula "1"))
                                       (rule "concrete_and_1" (formula "8") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "concrete_and_2" (formula "8") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (term "0,0,0,1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,0,0,1"))
                                       (rule "concrete_or_1" (formula "8") (term "0,0,0,1"))
                                       (rule "ifthenelse_true" (formula "8") (term "0,0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "8") (term "0,0"))
                                       (rule "concrete_or_2" (formula "8") (term "0"))
                                       (rule "andRight" (formula "25"))
                                       (branch " Case 1"
                                          (rule "cut_direct" (formula "8") (term "0"))
                                          (branch " CUT: _inAtPre_2[-1 + start_0] = null TRUE"
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "applyEq" (formula "25") (term "5") (ifseqformula "8"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "8"))
                                             (rule "update_close" (formula "25") (ifseqformula "3"))
                                             (rule "eq_and" (formula "25"))
                                             (rule "allRight" (formula "25") (inst "sk=x1_6"))
                                             (rule "allRight" (formula "25") (inst "sk=x0_6"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "25") (term "1"))
                                             (branch "   x1_6 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_6
& x0_6 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "3"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0"))
                                                (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "28") (term "0"))
                                                (rule "eqClose" (formula "28"))
                                                (rule "closeTrue" (formula "28"))
                                             )
                                             (branch "   x1_6 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_6
& x0_6 = _inAtPre_2 FALSE"
                                                (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "25"))
                                                (rule "ifthenelse_false" (formula "26") (term "0"))
                                                (rule "commute_and" (formula "26") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "26") (term "0"))
                                                (branch " x1_6 = start_0 & x0_6 = _inAtPre_2 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "2"))
                                                   (rule "concrete_and_3" (formula "27"))
                                                   (rule "applyEqRigid" (formula "27") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "27") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "6"))
                                                   (rule "concrete_and_3" (formula "27"))
                                                   (rule "inEqSimp_geqRight" (formula "27"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch " x1_6 = start_0 & x0_6 = _inAtPre_2 FALSE"
                                                   (rule "eqClose" (formula "27"))
                                                   (rule "closeTrue" (formula "27"))
                                                )
                                             )
                                          )
                                          (branch " CUT: _inAtPre_2[-1 + start_0] = null FALSE"
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "update_close" (formula "26") (ifseqformula "3"))
                                             (rule "eq_and" (formula "26"))
                                             (rule "allRight" (formula "26") (inst "sk=x1_7"))
                                             (rule "allRight" (formula "26") (inst "sk=x0_7"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
                                             (rule "ifthenelse_split" (formula "26") (term "1"))
                                             (branch "   x1_7 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_7
& x0_7 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "replace_known_left" (formula "29") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "concrete_and_3" (formula "29") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "29") (term "1,0,0") (ifseqformula "3"))
                                                (rule "concrete_and_3" (formula "29") (term "0,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "29") (term "0"))
                                                (rule "eqClose" (formula "29"))
                                                (rule "closeTrue" (formula "29"))
                                             )
                                             (branch "   x1_7 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_7
& x0_7 = _inAtPre_2 FALSE"
                                                (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "26"))
                                                (rule "ifthenelse_false" (formula "27") (term "0"))
                                                (rule "commute_and" (formula "27") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "27") (term "0"))
                                                (branch " x1_7 = start_0 & x0_7 = _inAtPre_2 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "2"))
                                                   (rule "concrete_and_3" (formula "28"))
                                                   (rule "applyEq" (formula "28") (term "1,1,1") (ifseqformula "1"))
                                                   (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "6"))
                                                   (rule "concrete_and_3" (formula "28"))
                                                   (rule "inEqSimp_geqRight" (formula "28"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "applyEqRigid" (formula "29") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch " x1_7 = start_0 & x0_7 = _inAtPre_2 FALSE"
                                                   (rule "eqClose" (formula "28"))
                                                   (rule "closeTrue" (formula "28"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "cut_direct" (formula "8") (term "0"))
                                          (branch " CUT: _inAtPre_2[-1 + start_0] = null TRUE"
                                             (rule "concrete_or_1" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,1,1") (ifseqformula "8"))
                                             (rule "concrete_or_3" (formula "25") (term "0,1,1"))
                                             (rule "concrete_and_1" (formula "25") (term "1,1"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "25") (term "6,0,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "25") (term "1,0,1,1,0,1,1") (ifseqformula "8"))
                                             (rule "applyEq" (formula "25") (term "1,0,1,0,1,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "25") (term "1,0,1,0,0,0") (ifseqformula "8"))
                                             (rule "applyEq" (formula "25") (term "1,0,0,0,1,0,1,1") (ifseqformula "8"))
                                             (rule "andRight" (formula "25"))
                                             (branch " Case 1"
                                                (rule "andRight" (formula "25"))
                                                (branch " Case 1"
                                                   (rule "allRight" (formula "25") (inst "sk=i_16"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "orRight" (formula "27"))
                                                   (rule "eqSymm" (formula "29") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "25"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "28"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0,2,0") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "29") (term "0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,1,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0"))
                                                   (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "3"))
                                                   (rule "ifthenelse_true" (formula "29") (term "2,0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                   (rule "mul_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "29") (term "0"))
                                                   (branch " start_0 = i_16 TRUE"
                                                      (rule "eqSymm" (formula "30"))
                                                      (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "28") (ifseqformula "11"))
                                                   )
                                                   (branch " start_0 = i_16 FALSE"
                                                      (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "29"))
                                                      (rule "inEqSimp_contradEq3" (formula "29") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0"))
                                                      (rule "qeq_literals" (formula "29") (term "0"))
                                                      (rule "concrete_and_2" (formula "29"))
                                                      (rule "false_right" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "9") (inst "t=i_16"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "30"))
                                                      (rule "concrete_or_4" (formula "9"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "concrete_and_2" (formula "9") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "9") (term "1"))
                                                      (rule "concrete_or_4" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "9") (term "1"))
                                                      (rule "concrete_or_4" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "25") (inst "sk=i_17"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "eqSymm" (formula "27") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,2,0") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "27") (term "0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq7" (formula "27") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "27") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "27") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0"))
                                                   (branch " _inAtPre_2.length >= 1 + i_17 TRUE"
                                                      (rule "allLeft" (formula "10") (inst "t=i_17"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "29"))
                                                      (rule "concrete_or_4" (formula "10"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "10") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "10") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "10") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "10") (term "1"))
                                                      (rule "concrete_or_4" (formula "10"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch " _inAtPre_2.length >= 1 + i_17 FALSE"
                                                      (rule "eqClose" (formula "28"))
                                                      (rule "closeTrue" (formula "28"))
                                                   )
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "orRight" (formula "25"))
                                                (rule "allRight" (formula "26") (inst "sk=i_18"))
                                                (rule "orRight" (formula "26"))
                                                (rule "orRight" (formula "27"))
                                                (rule "orRight" (formula "26"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,2,0,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "28") (term "0,2,0,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,2,0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "29") (term "0,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,2,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0,0"))
                                                (rule "replace_known_left" (formula "28") (term "0,2,0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "28") (term "2,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "29") (term "2,0"))
                                                (rule "inReachableStateRewrite" (formula "27") (ifseqformula "16"))
                                                (builtin "Update Simplification" (formula "27"))
                                                (rule "eq_imp" (formula "27") (term "0,0,0,1"))
                                                (rule "orRight" (formula "27"))
                                                (rule "elim_forall12" (formula "28") (term "0,1,0,1"))
                                                (rule "elim_forall12" (formula "28") (term "0,1,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,0,1,1,0,1,0,1,0"))
                                                (rule "eqClose" (formula "28") (term "1,0,1,1,1,0,1,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,0,0,1,0,1,0,1,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,1,1,0,1,0,1,0"))
                                                (rule "concrete_and_3" (formula "28") (term "0,1,1,1,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0,2,0,0,0,1,0,1,0,1,0") (ifseqformula "6"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,2,1,1,1,0,1,0"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0,2,1,1,1,0,1,0") (ifseqformula "6"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,2,1,1,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "6"))
                                                (rule "concrete_and_3" (formula "28") (term "0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (term "0,0,2,0,0,0,1,0,1,0,1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "concrete_or_1" (formula "28") (term "0,0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "concrete_and_1" (formula "28") (term "0,2,0,0,0,1,0,1,0,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (term "0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "concrete_or_1" (formula "28") (term "0,0,2,0,1,1,0,1,0,1,0"))
                                                (rule "concrete_and_1" (formula "28") (term "0,2,0,1,1,0,1,0,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (term "0,0,2,1,1,1,0,1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,2,1,1,1,0,1,0"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,0,2,1,1,1,0,1,0"))
                                                (rule "concrete_or_1" (formula "28") (term "0,0,2,1,1,1,0,1,0"))
                                                (rule "concrete_and_1" (formula "28") (term "0,2,1,1,1,0,1,0"))
                                                (rule "elim_forall8" (formula "28") (term "1,0,1"))
                                                (rule "eqClose" (formula "28") (term "0,0,0,0,0,1,0,1,0,1"))
                                                (rule "eqClose" (formula "28") (term "0,0,0,1,1,0,1,0,1"))
                                                (rule "eqClose" (formula "28") (term "0,0,1,1,1,0,1"))
                                                (rule "concrete_and_1" (formula "28") (term "0,0,0,0,1,0,1,0,1"))
                                                (rule "concrete_and_1" (formula "28") (term "0,0,1,1,0,1,0,1"))
                                                (rule "concrete_and_1" (formula "28") (term "0,1,1,1,0,1"))
                                                (rule "eqClose" (formula "28") (term "1,0,2,1,1,1,0,1"))
                                                (rule "eqClose" (formula "28") (term "1,0,2,0,1,1,0,1,0,1"))
                                                (rule "eqClose" (formula "28") (term "1,0,2,0,0,0,1,0,1,0,1"))
                                                (rule "concrete_and_3" (formula "28") (term "0,2,1,1,1,0,1"))
                                                (rule "concrete_and_3" (formula "28") (term "0,2,0,1,1,0,1,0,1"))
                                                (rule "concrete_and_3" (formula "28") (term "0,2,0,0,0,1,0,1,0,1"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,1,0,1") (ifseqformula "20"))
                                                (rule "concrete_impl_1" (formula "28") (term "0,1,0,1"))
                                                (rule "elim_forall8" (formula "28") (term "1,0"))
                                                (rule "eqClose" (formula "28") (term "0,0,0,0,1,0,1,0"))
                                                (rule "eqClose" (formula "28") (term "0,0,1,1,0,1,0"))
                                                (rule "eqClose" (formula "28") (term "0,1,1,1,0"))
                                                (rule "ifthenelse_true" (formula "28") (term "0,0,0,1,0,1,0"))
                                                (rule "ifthenelse_true" (formula "28") (term "0,1,1,0,1,0"))
                                                (rule "ifthenelse_true" (formula "28") (term "1,1,1,0"))
                                                (rule "eqClose" (formula "28") (term "1,1,0,1,0"))
                                                (rule "concrete_or_3" (formula "28") (term "1,0,1,0"))
                                                (rule "concrete_impl_4" (formula "28") (term "0,1,0"))
                                                (rule "concrete_and_1" (formula "28") (term "1,0"))
                                                (rule "array_store_static_analyse" (formula "28") (term "1,0") (ifseqformula "26"))
                                                (rule "concrete_and_3" (formula "28") (term "0"))
                                                (rule "array_store_static_analyse" (formula "28") (term "1,1,0,1") (ifseqformula "26"))
                                                (rule "concrete_and_3" (formula "28") (term "1,0,1"))
                                                (rule "nnf_imp2or" (formula "28") (term "0,1"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
                                                (rule "all_unused" (formula "28") (term "0"))
                                                (rule "concrete_and_1" (formula "28"))
                                                (rule "allRight" (formula "28") (inst "sk=i_23"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "30"))
                                                (rule "inEqSimp_geqRight" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1,0,2,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "31") (term "0,0,2,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "31") (term "0,2,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,0,2,0,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "30") (term "0,2,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "31") (term "0,2,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "31") (term "2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,2,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,2,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,2,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,2,0,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,2,0,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "30") (term "2,0,0"))
                                                (rule "ifthenelse_split" (formula "32") (term "0,0"))
                                                (branch " i_18 = start_0 TRUE"
                                                   (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "34") (term "0"))
                                                   (rule "eqClose" (formula "34"))
                                                   (rule "closeTrue" (formula "34"))
                                                )
                                                (branch " i_18 = start_0 FALSE"
                                                   (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "32"))
                                                   (rule "ifthenelse_false" (formula "34") (term "0"))
                                                   (rule "ifthenelse_split" (formula "31") (term "0"))
                                                   (branch " i_23 = start_0 TRUE"
                                                      (rule "eqClose" (formula "32"))
                                                      (rule "closeTrue" (formula "32"))
                                                   )
                                                   (branch " i_23 = start_0 FALSE"
                                                      (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "31"))
                                                      (rule "ifthenelse_false" (formula "30") (term "0,0"))
                                                      (rule "allLeft" (formula "13") (inst "t=i_18"))
                                                      (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "36"))
                                                      (rule "concrete_or_4" (formula "13") (term "0"))
                                                      (rule "replace_known_left" (formula "13") (term "0,0,0,0,1") (ifseqformula "4"))
                                                      (rule "concrete_and_1" (formula "13") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "13") (term "0,0,0,1") (ifseqformula "3"))
                                                      (rule "ifthenelse_true" (formula "13") (term "0,0,1"))
                                                      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "35"))
                                                      (rule "concrete_or_4" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "13") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "1"))
                                                      (rule "concrete_or_4" (formula "13"))
                                                      (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0"))
                                                      (rule "leq_literals" (formula "4"))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch " CUT: _inAtPre_2[-1 + start_0] = null FALSE"
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "replace_known_right" (formula "26") (term "1,0,1,1") (ifseqformula "22"))
                                             (rule "concrete_or_4" (formula "26") (term "0,1,1"))
                                             (rule "replace_known_left" (formula "26") (term "0,1,1") (ifseqformula "8"))
                                             (rule "concrete_and_1" (formula "26") (term "1,1"))
                                             (rule "andRight" (formula "26"))
                                             (branch " Case 1"
                                                (rule "andRight" (formula "26"))
                                                (branch " Case 1"
                                                   (rule "allRight" (formula "26") (inst "sk=i_19"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "orRight" (formula "27"))
                                                   (rule "orRight" (formula "28"))
                                                   (rule "eqSymm" (formula "30") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "inEqSimp_geqRight" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "29"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,2,0") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "30") (term "0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,2,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,2,0"))
                                                   (rule "replace_known_left" (formula "30") (term "0,2,0") (ifseqformula "3"))
                                                   (rule "ifthenelse_true" (formula "30") (term "2,0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_1" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1"))
                                                   (rule "ifthenelse_split" (formula "30") (term "0"))
                                                   (branch " start_0 = i_19 TRUE"
                                                      (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "eqClose" (formula "31"))
                                                      (rule "closeTrue" (formula "31"))
                                                   )
                                                   (branch " start_0 = i_19 FALSE"
                                                      (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "30"))
                                                      (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "3"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0"))
                                                      (rule "qeq_literals" (formula "30") (term "0"))
                                                      (rule "concrete_and_2" (formula "30"))
                                                      (rule "false_right" (formula "30"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (rule "concrete_or_1" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "9") (inst "t=i_19"))
                                                      (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "31"))
                                                      (rule "concrete_or_4" (formula "9"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0,0"))
                                                      (rule "concrete_and_2" (formula "9") (term "1,0,0"))
                                                      (rule "concrete_or_4" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "9") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "9") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "9") (term "1"))
                                                      (rule "concrete_or_4" (formula "9"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                      (rule "concrete_and_2" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "26") (inst "sk=i_20"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "orRight" (formula "26"))
                                                   (rule "eqSymm" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0,2,0") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "28") (term "0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "28") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                   (rule "ifthenelse_split" (formula "28") (term "0"))
                                                   (branch " _inAtPre_2.length >= 1 + i_20 TRUE"
                                                      (rule "allLeft" (formula "10") (inst "t=i_20"))
                                                      (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "30"))
                                                      (rule "concrete_or_4" (formula "10"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "10") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "10") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "10") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "10") (term "1"))
                                                      (rule "concrete_or_4" (formula "10"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "10"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch " _inAtPre_2.length >= 1 + i_20 FALSE"
                                                      (rule "eqClose" (formula "29"))
                                                      (rule "closeTrue" (formula "29"))
                                                   )
                                                )
                                             )
                                             (branch " Case 2"
                                                (rule "orRight" (formula "26"))
                                                (rule "allRight" (formula "27") (inst "sk=i_21"))
                                                (rule "orRight" (formula "27"))
                                                (rule "orRight" (formula "28"))
                                                (rule "orRight" (formula "27"))
                                                (rule "inEqSimp_geqRight" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1,0,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "30") (term "0,0,2,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "30") (term "0,2,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,2,0,0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "29") (term "0,2,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,2,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,2,0"))
                                                (rule "replace_known_left" (formula "30") (term "0,2,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "30") (term "2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,2,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0,0"))
                                                (rule "replace_known_left" (formula "29") (term "0,2,0,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "29") (term "2,0,0"))
                                                (rule "ifthenelse_split" (formula "30") (term "0"))
                                                (branch " i_21 = start_0 TRUE"
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "30") (term "0,0"))
                                                   (rule "close" (formula "30") (ifseqformula "11"))
                                                )
                                                (branch " i_21 = start_0 FALSE"
                                                   (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "30"))
                                                   (rule "ifthenelse_false" (formula "29") (term "0,0"))
                                                   (rule "allLeft" (formula "11") (inst "t=i_21"))
                                                   (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "32"))
                                                   (rule "concrete_or_4" (formula "11") (term "0"))
                                                   (rule "replace_known_left" (formula "11") (term "0,0,0,0,1") (ifseqformula "1"))
                                                   (rule "concrete_and_1" (formula "11") (term "0,0,0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                                                   (rule "replace_known_left" (formula "11") (term "0,0,0,1") (ifseqformula "2"))
                                                   (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                   (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "30"))
                                                   (rule "concrete_or_4" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "11") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "11") (term "1"))
                                                   (rule "concrete_or_4" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0"))
                                                   (rule "add_literals" (formula "11") (term "0"))
                                                   (rule "leq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " start_0 >= 2 + _atAtPre_0 FALSE"
                                       (rule "replace_known_right" (formula "24") (term "0,6,0,1,1") (ifseqformula "23"))
                                       (rule "ifthenelse_false" (formula "24") (term "6,0,1,1"))
                                       (rule "replace_known_right" (formula "24") (term "0,0,0,0,0,1,1,1") (ifseqformula "23"))
                                       (rule "ifthenelse_false" (formula "24") (term "0,0,0,0,1,1,1"))
                                       (rule "replace_known_right" (formula "24") (term "0,0,1,0,1,1,1") (ifseqformula "23"))
                                       (rule "ifthenelse_false" (formula "24") (term "0,1,0,1,1,1"))
                                       (rule "inEqSimp_geqRight" (formula "23"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "2") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "5,0,1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,1,0,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "8") (term "1,1,1,0,0,0") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "1,1,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,1,1,0,0,0"))
                                       (rule "applyEq" (formula "25") (term "4,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "25") (term "1,1,5,0") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "1,5,0"))
                                       (rule "add_literals" (formula "25") (term "0,1,5,0"))
                                       (rule "add_zero_left" (formula "25") (term "1,5,0"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0,0,0,1") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,1,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "25") (term "1,0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "25") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0,0,1,1,1"))
                                       (rule "add_literals" (formula "25") (term "0,1,0,0,0,0,1,1,1"))
                                       (rule "add_zero_left" (formula "25") (term "1,0,0,0,0,1,1,1"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                       (rule "add_literals" (formula "6") (term "0,1"))
                                       (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "7") (term "1,1,0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "24") (term "1,1,0,1,0,1,1,1") (ifseqformula "3"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,1,1"))
                                       (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,1,1"))
                                       (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,1,1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "23") (term "1,1,6,0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "1,6,0,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,1,6,0,1,1"))
                                       (rule "add_zero_left" (formula "23") (term "1,6,0,1,1"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,1,0,0,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "23") (term "1,0,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "23") (term "0,0,1,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,1,1,0,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,1,1,0,1,1,1,1"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,1,1,0,1,1,1,1"))
                                       (rule "ifthenelse_false" (formula "23") (term "1,0,1,1,0,1,1,1,1"))
                                       (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "ifthenelse_false" (formula "23") (term "1,0,0,0,1,0,1,1,1,1"))
                                       (rule "applyEq" (formula "23") (term "0,0,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0,1,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,1,0,1,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,1,0,1,0,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,1,0,1,0,1"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,1,0,1,0,1"))
                                       (rule "ifthenelse_false" (formula "23") (term "1,0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "23") (term "0,0,1,0,1,0,0,0,1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,1,0,0,0,1"))
                                       (rule "ifthenelse_false" (formula "23") (term "1,0,1,0,0,0,1"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,1,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,1,0,1,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,1,1,0,1,0,1,0,1"))
                                       (rule "add_zero_left" (formula "23") (term "1,1,0,1,0,1,0,1"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0,1,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,1,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,1,1,0,1,1,0,1,1,1,1"))
                                       (rule "add_zero_left" (formula "23") (term "1,1,0,1,1,0,1,1,1,1"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0,1,0,0,0,1") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,1,1,0,1,0,0,0,1"))
                                       (rule "add_zero_left" (formula "23") (term "1,1,0,1,0,0,0,1"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0,0,0,1,0,1,1,1,1") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "add_zero_left" (formula "23") (term "1,1,0,0,0,1,0,1,1,1,1"))
                                       (rule "inEqSimp_invertInEq0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "times_zero_2" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (rule "concrete_or_1" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "21") (term "0,0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,1,1,0,0,1,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "1,1,0,0,1,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,0,0,1,0,1"))
                                       (rule "add_literals" (formula "21") (term "1,0,1,0,0,1,0,1"))
                                       (rule "times_zero_1" (formula "21") (term "0,1,0,0,1,0,1"))
                                       (rule "leq_literals" (formula "21") (term "1,0,0,1,0,1"))
                                       (rule "concrete_or_3" (formula "21") (term "0,0,1,0,1"))
                                       (rule "concrete_or_1" (formula "21") (term "0,1,0,1"))
                                       (rule "inEqSimp_or_antiSymm0" (formula "5") (term "0,0,0"))
                                       (rule "eqClose" (formula "5") (term "0,0,0,0"))
                                       (rule "ifthenelse_true_for" (formula "5") (term "0,0,0"))
                                       (rule "inEqSimp_or_subsumption1" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "4") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "4") (term "0,0,0,0"))
                                       (rule "commute_or" (formula "5") (term "0,0"))
                                       (rule "commute_or_2" (formula "5") (term "0"))
                                       (rule "elim_forall6" (formula "5"))
                                       (rule "false_to_not_true" (formula "5") (term "1"))
                                       (rule "typeEqDerived2" (formula "5") (term "0,0,1") (ifseqformula "1"))
                                       (rule "boolean_equal" (formula "5") (term "0,1"))
                                       (rule "concrete_not_1" (formula "5") (term "1"))
                                       (rule "concrete_or_4" (formula "5"))
                                       (rule "castDelInt" (formula "5") (term "0,0"))
                                       (rule "castDelInt" (formula "5") (term "1,1,1"))
                                       (rule "castDelInt" (formula "5") (term "1,0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "5") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                       (rule "concrete_and_2" (formula "5") (term "0"))
                                       (rule "concrete_or_2" (formula "5"))
                                       (rule "all_unused" (formula "21") (term "1,0,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,1"))
                                       (rule "inReachableStateRewrite" (formula "21") (term "0,1,1") (ifseqformula "11"))
                                       (builtin "Update Simplification" (formula "21"))
                                       (rule "eq_imp" (formula "21") (term "0,0,0,1,0,1,1"))
                                       (rule "elim_forall12" (formula "21") (term "0,1,0,1,1,0,1,1"))
                                       (rule "elim_forall12" (formula "21") (term "0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "1,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "21") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "1,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "21") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "1,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "times_zero_1" (formula "21") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "leq_literals" (formula "21") (term "0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "applyEq" (formula "21") (term "1,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "21") (term "1,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "21") (term "1,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "5"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,2,0,0,0,1,0,1,0,1,0,1,0,1,1") (ifseqformula "3"))
                                       (rule "concrete_and_1" (formula "21") (term "0,2,0,0,0,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,2,0,1,1,0,1,0,1,0,1,0,1,1") (ifseqformula "3"))
                                       (rule "concrete_and_1" (formula "21") (term "0,2,0,1,1,0,1,0,1,0,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,2,1,1,1,0,1,0,1,0,1,1") (ifseqformula "3"))
                                       (rule "concrete_and_1" (formula "21") (term "0,2,1,1,1,0,1,0,1,0,1,1"))
                                       (rule "elim_forall8" (formula "21") (term "1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,0,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,1,1,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "1,0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,2,1,1,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,2,0,1,1,0,1,0,1,1,0,1,1"))
                                       (rule "concrete_and_3" (formula "21") (term "0,2,0,0,0,1,0,1,0,1,1,0,1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,1,0,1,1,0,1,1") (ifseqformula "15"))
                                       (rule "concrete_impl_1" (formula "21") (term "0,1,0,1,1,0,1,1"))
                                       (rule "elim_forall8" (formula "21") (term "1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,0,1,1,0,1,0,1,0,1,1"))
                                       (rule "eqClose" (formula "21") (term "0,1,1,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "21") (term "0,0,0,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "21") (term "0,1,1,0,1,0,1,0,1,1"))
                                       (rule "ifthenelse_true" (formula "21") (term "1,1,1,0,1,0,1,1"))
                                       (rule "replace_known_left" (formula "21") (term "0,0,1,0,1,0,1,1") (ifseqformula "15"))
                                       (rule "concrete_impl_1" (formula "21") (term "0,1,0,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "21") (term "1,1,0,1,0,1,1") (ifseqformula "20"))
                                       (rule "concrete_and_3" (formula "21") (term "1,0,1,0,1,1"))
                                       (rule "array_store_static_analyse" (formula "21") (term "1,1,0,1,1,0,1,1") (ifseqformula "20"))
                                       (rule "concrete_and_3" (formula "21") (term "1,0,1,1,0,1,1"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1,1,0,1,1"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0,1,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0,1,1"))
                                       (rule "all_unused" (formula "21") (term "0,0,1,0,1,1"))
                                       (rule "concrete_and_1" (formula "21") (term "0,1,0,1,1"))
                                       (rule "eq_or_2" (formula "21") (term "1,1"))
                                       (rule "andRight" (formula "21"))
                                       (branch " Case 1"
                                          (rule "update_close" (formula "21") (ifseqformula "2"))
                                          (rule "eq_and" (formula "21"))
                                          (rule "allRight" (formula "21") (inst "sk=x1_2"))
                                          (rule "allRight" (formula "21") (inst "sk=x0_2"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                          (rule "eqSymm" (formula "21"))
                                          (rule "ifthenelse_split" (formula "21") (term "1"))
                                          (branch "   x1_2 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_2
& x0_2 = _inAtPre_2 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "2"))
                                             (rule "concrete_and_3" (formula "24") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "3"))
                                             (rule "concrete_and_3" (formula "24") (term "0,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "1"))
                                             (rule "ifthenelse_true" (formula "24") (term "0"))
                                             (rule "eqClose" (formula "24"))
                                             (rule "closeTrue" (formula "24"))
                                          )
                                          (branch "   x1_2 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_2
& x0_2 = _inAtPre_2 FALSE"
                                             (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "21"))
                                             (rule "ifthenelse_false" (formula "22") (term "0"))
                                             (rule "commute_and" (formula "22") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "22") (term "0"))
                                             (branch " x1_2 = 1 + _atAtPre_0 & x0_2 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                                (rule "concrete_and_3" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                                                (rule "add_literals" (formula "23") (term "0,1,1"))
                                                (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "5"))
                                                (rule "concrete_and_3" (formula "23"))
                                                (rule "inEqSimp_geqRight" (formula "23"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch " x1_2 = 1 + _atAtPre_0 & x0_2 = _inAtPre_2 FALSE"
                                                (rule "eqClose" (formula "23"))
                                                (rule "closeTrue" (formula "23"))
                                             )
                                          )
                                       )
                                       (branch " Case 2"
                                          (rule "andRight" (formula "21"))
                                          (branch " Case 1"
                                             (rule "allRight" (formula "21") (inst "sk=i_5"))
                                             (rule "orRight" (formula "21"))
                                             (rule "orRight" (formula "21"))
                                             (rule "orRight" (formula "22"))
                                             (rule "orRight" (formula "23"))
                                             (rule "inEqSimp_leqRight" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_geqRight" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "23"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,2,0") (ifseqformula "3"))
                                             (rule "concrete_and_1" (formula "24") (term "0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,2,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,2,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "24") (term "2,0"))
                                             (rule "ifthenelse_split" (formula "24") (term "0"))
                                             (branch " i_5 = 1 + _atAtPre_0 TRUE"
                                                (rule "eqSymm" (formula "25"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "1,0"))
                                                (rule "eqClose" (formula "24"))
                                                (rule "closeTrue" (formula "24"))
                                             )
                                             (branch " i_5 = 1 + _atAtPre_0 FALSE"
                                                (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "24"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "3"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0"))
                                                (rule "leq_literals" (formula "24") (term "0"))
                                                (rule "concrete_and_2" (formula "24"))
                                                (rule "false_right" (formula "24"))
                                                (rule "allLeft" (formula "7") (inst "t=i_5"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "25"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                (rule "concrete_and_2" (formula "7") (term "0,0"))
                                                (rule "concrete_or_2" (formula "7") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                (rule "leq_literals" (formula "7") (term "0,1"))
                                                (rule "concrete_and_2" (formula "7") (term "1"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "3"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                          (branch " Case 2"
                                             (rule "orRight" (formula "21"))
                                             (rule "update_close" (formula "21") (ifseqformula "11"))
                                             (rule "eq_and" (formula "21"))
                                             (rule "allRight" (formula "21") (inst "sk=x1_3"))
                                             (rule "allRight" (formula "21") (inst "sk=x0_3"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,2,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,2,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,1,0,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,2,0"))
                                             (rule "commute_and" (formula "21") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "21") (term "0"))
                                             (branch " x1_3 = 1 + _atAtPre_0 & x0_3 = _inAtPre_2 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                (rule "andRight" (formula "25"))
                                                (branch " Case 1"
                                                   (rule "orRight" (formula "25"))
                                                   (rule "only_created_object_are_referenced_by_arrays_2" (formula "25") (ifseqformula "17") (ifseqformula "13"))
                                                   (rule "notRight" (formula "25"))
                                                   (rule "close" (formula "26") (ifseqformula "1"))
                                                )
                                                (branch " Case 2"
                                                   (rule "allRight" (formula "25") (inst "sk=i_6"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "25"))
                                                   (rule "orRight" (formula "27"))
                                                   (rule "inEqSimp_leqRight" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0,2,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,2,0,0") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "27") (term "0,2,0,0"))
                                                   (rule "replace_known_left" (formula "28") (term "0,0,2,0") (ifseqformula "2"))
                                                   (rule "concrete_and_1" (formula "28") (term "0,2,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,2,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,2,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,2,0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,2,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,2,0,0"))
                                                   (rule "replace_known_left" (formula "27") (term "0,2,0,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "27") (term "2,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,2,0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0"))
                                                   (rule "replace_known_left" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                                   (rule "ifthenelse_true" (formula "28") (term "2,0"))
                                                   (rule "ifthenelse_split" (formula "27") (term "0,0"))
                                                   (branch " i_6 = 1 + _atAtPre_0 TRUE"
                                                      (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                      (rule "ifthenelse_true" (formula "29") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "only_created_object_are_referenced_by_arrays_2" (formula "26") (ifseqformula "18") (ifseqformula "14"))
                                                      (rule "notRight" (formula "26"))
                                                      (rule "close" (formula "27") (ifseqformula "1"))
                                                   )
                                                   (branch " i_6 = 1 + _atAtPre_0 FALSE"
                                                      (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "27"))
                                                      (rule "ifthenelse_false" (formula "29") (term "0"))
                                                      (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "27"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                      (rule "concrete_and_2" (formula "27"))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "allLeft" (formula "10") (inst "t=1 + _atAtPre_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "10") (term "0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "10") (term "0,0,0,0,0,1"))
                                                      (rule "leq_literals" (formula "10") (term "0,0,0,0,1"))
                                                      (rule "concrete_and_1" (formula "10") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                                      (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "10") (term "1,0,0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "10") (term "0,0,0,1") (ifseqformula "7"))
                                                      (rule "ifthenelse_true" (formula "10") (term "0,0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "10") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "10") (term "0"))
                                                      (rule "allLeft" (formula "11") (inst "t=i_6"))
                                                      (rule "replace_known_right" (formula "11") (term "1,0") (ifseqformula "30"))
                                                      (rule "concrete_or_4" (formula "11") (term "0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "11") (term "1,0,0,0,1") (ifseqformula "1"))
                                                      (rule "concrete_and_3" (formula "11") (term "0,0,0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "11") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "11") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0,1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "concrete_or_1" (formula "11") (term "0,0,0,1"))
                                                      (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                      (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "29"))
                                                      (rule "concrete_or_4" (formula "11"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_literals" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch " x1_3 = 1 + _atAtPre_0 & x0_3 = _inAtPre_2 FALSE"
                                                (rule "ifthenelse_split" (formula "22") (term "0"))
                                                (branch "   x1_3 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_3
& x0_3 = _inAtPre_2 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                                                   (rule "concrete_and_3" (formula "24"))
                                                   (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "3"))
                                                   (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "24"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                   (rule "add_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0"))
                                                   (rule "concrete_and_2" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "andRight" (formula "26"))
                                                   (branch " Case 1"
                                                      (rule "orRight" (formula "26"))
                                                      (rule "only_created_object_are_referenced_by_arrays_2" (formula "26") (ifseqformula "18") (ifseqformula "14"))
                                                      (rule "notRight" (formula "26"))
                                                      (rule "close" (formula "27") (ifseqformula "1"))
                                                   )
                                                   (branch " Case 2"
                                                      (rule "allRight" (formula "26") (inst "sk=i_7"))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "orRight" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,2,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,1,0,2,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,0,2,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "29") (term "0,0,2,0") (ifseqformula "1"))
                                                      (rule "concrete_and_1" (formula "29") (term "0,2,0"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,2,0,0") (ifseqformula "1"))
                                                      (rule "concrete_and_1" (formula "28") (term "0,2,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,2,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,2,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,2,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,2,0"))
                                                      (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "2"))
                                                      (rule "ifthenelse_true" (formula "29") (term "2,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,2,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,2,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,2,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,2,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,2,0,0"))
                                                      (rule "replace_known_left" (formula "28") (term "0,2,0,0") (ifseqformula "2"))
                                                      (rule "ifthenelse_true" (formula "28") (term "2,0,0"))
                                                      (rule "allLeft" (formula "11") (inst "t=1 + _atAtPre_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                                                      (rule "times_zero_1" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "leq_literals" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "concrete_and_1" (formula "11") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                      (rule "concrete_or_2" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                                                      (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "11") (term "1,0,0,1") (ifseqformula "10"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "11") (term "0,0,0,1") (ifseqformula "8"))
                                                      (rule "ifthenelse_true" (formula "11") (term "0,0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "11") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "11") (term "0"))
                                                      (rule "ifthenelse_split" (formula "30") (term "0"))
                                                      (branch " i_7 = 1 + _atAtPre_0 TRUE"
                                                         (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "ifthenelse_true" (formula "30") (term "0,0"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                         (rule "add_literals" (formula "2") (term "0,1"))
                                                         (rule "only_created_object_are_referenced_by_arrays_2" (formula "28") (ifseqformula "20") (ifseqformula "16"))
                                                         (rule "notRight" (formula "28"))
                                                         (rule "close" (formula "29") (ifseqformula "1"))
                                                      )
                                                      (branch " i_7 = 1 + _atAtPre_0 FALSE"
                                                         (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "30"))
                                                         (rule "ifthenelse_false" (formula "29") (term "0,0"))
                                                         (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "30"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                         (rule "add_literals" (formula "1") (term "0,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                         (rule "concrete_and_2" (formula "30"))
                                                         (rule "false_right" (formula "30"))
                                                         (rule "cut_direct" (formula "11") (term "0"))
                                                         (branch " CUT: _inAtPre_2[1 + _atAtPre_0] = null TRUE"
                                                            (rule "concrete_or_1" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                            (rule "allLeft" (formula "12") (inst "t=i_7"))
                                                            (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "31"))
                                                            (rule "concrete_or_4" (formula "12") (term "0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1"))
                                                            (rule "replace_known_left" (formula "12") (term "1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "concrete_and_3" (formula "12") (term "0,0,0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "12") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "12") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (term "0,0,0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "qeq_literals" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "concrete_or_1" (formula "12") (term "0,0,0,1"))
                                                            (rule "ifthenelse_true" (formula "12") (term "0,0,1"))
                                                            (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "30"))
                                                            (rule "concrete_or_4" (formula "12"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "12"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0"))
                                                            (rule "add_literals" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch " CUT: _inAtPre_2[1 + _atAtPre_0] = null FALSE"
                                                            (rule "concrete_or_2" (formula "11"))
                                                            (rule "allLeft" (formula "12") (inst "t=i_7"))
                                                            (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "32"))
                                                            (rule "concrete_or_4" (formula "12") (term "0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1"))
                                                            (rule "replace_known_left" (formula "12") (term "1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "concrete_and_3" (formula "12") (term "0,0,0,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "12") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "12") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (term "0,0,0,1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "qeq_literals" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "concrete_or_1" (formula "12") (term "0,0,0,1"))
                                                            (rule "ifthenelse_true" (formula "12") (term "0,0,1"))
                                                            (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "31"))
                                                            (rule "concrete_or_4" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_literals" (formula "12") (term "0"))
                                                            (rule "leq_literals" (formula "12"))
                                                            (rule "closeFalse" (formula "12"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "   x1_3 >= 1 + _atAtPre_0
& _inAtPre_2.length >= 1 + x1_3
& x0_3 = _inAtPre_2 FALSE"
                                                   (rule "eqClose" (formula "23"))
                                                   (rule "closeTrue" (formula "23"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " Null Reference (var_2 = null)"
                                    (builtin "Update Simplification" (formula "24"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                                 (branch " Index Out of Bounds (var_2 != null, but j_12 Out of Bounds!)"
                                    (builtin "Update Simplification" (formula "24"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (rule "concrete_and_2" (formula "1") (term "0"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch " Array Store Exception (incompatible dynamic element type of var_2 and v_Record_1)"
                                    (builtin "Update Simplification" (formula "24"))
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_1" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "array_store_static_analyse" (formula "20") (ifseqformula "23"))
                                    (rule "closeTrue" (formula "20"))
                                 )
                              )
                              (branch " Null Reference (var_3 = null)"
                                 (builtin "Update Simplification" (formula "24"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "close" (formula "23") (ifseqformula "1"))
                              )
                              (branch " Index Out of Bounds (var_3 != null, but j_14 Out of Bounds!)"
                                 (builtin "Update Simplification" (formula "24"))
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "castDelInt" (formula "1") (term "0,1"))
                                 (rule "castDelInt" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,1"))
                                 (rule "add_zero_left" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (rule "concrete_and_2" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "times_zero_2" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "3") (term "2") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "25") (term "6") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "8"))
                                 (rule "add_zero_right" (formula "4") (term "1"))
                                 (rule "applyEqRigid" (formula "24") (term "0,0,0,0,1,1,0,20") (ifseqformula "8"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "23") (term "5") (ifseqformula "7"))
                                 (rule "applyEq" (formula "23") (term "4") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "5") (term "1,1,1,0,0,0") (ifseqformula "7"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,1,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (rule "concrete_and_2" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                           )
                        )
                        (branch " Null Reference (_in = null)"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "close" (formula "23") (ifseqformula "1"))
                        )
                     )
                     (branch " if b_15 false"
                        (rule "false_to_not_true" (formula "1") (term "19"))
                        (builtin "Update Simplification" (formula "24"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "boolean_equal" (formula "1") (term "0"))
                        (rule "concrete_not_1" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch " start_0 >= 1 + _atAtPre_0 FALSE"
                     (rule "inEqSimp_geqRight" (formula "21"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "4") (ifseqformula "4"))
                     (rule "applyEq" (formula "7") (term "1,1,0,0,0") (ifseqformula "4"))
                     (rule "eq_or_2" (formula "7") (term "0,0,0"))
                     (rule "applyEq" (formula "3") (term "2") (ifseqformula "4"))
                     (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "23") (term "5") (ifseqformula "3"))
                     (rule "applyEq" (formula "6") (term "1,1,1,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,0"))
                     (rule "times_zero_1" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_or_tautInEq0" (formula "5") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,1,1,0,0,0"))
                     (rule "add_zero_left" (formula "5") (term "1,1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "5") (term "1,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "5") (term "0,1,0,0,0"))
                     (rule "leq_literals" (formula "5") (term "1,0,0,0"))
                     (rule "concrete_or_3" (formula "5") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "5") (term "0,0"))
                     (rule "concrete_or_1" (formula "5") (term "0"))
                     (rule "all_unused" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "allLeft" (formula "9") (inst "t=_inAtPre_2"))
                     (rule "applyEq" (formula "2") (term "1,1,1,7") (ifseqformula "9"))
                     (builtin "Update Simplification" (formula "2"))
                     (rule "all_unused" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "ifUnfold" (formula "21") (term "18") (inst "#boolv=b"))
                     (rule "variableDeclaration" (formula "21") (term "18") (newnames "b_17"))
                     (rule "emptyModality" (formula "1") (term "5"))
                     (builtin "Update Simplification" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " Use Case"
                  (rule "false_to_not_true" (formula "12") (term "0,0,1,5,13"))
                  (rule "inInt" (formula "12") (term "1,0,0,0,1,1,0,0,0,5,13"))
                  (rule "inInt" (formula "12") (term "1,0,0,1,1,1,0,0,0,5,13"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,0,1,1,0,0,0,5,13"))
                  (rule "concrete_and_3" (formula "12") (term "0,0,1,1,1,0,0,0,5,13"))
                  (builtin "Update Simplification" (formula "12"))
                  (rule "impRight" (formula "12"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "3"))
                  (rule "variableDeclarationAssign" (formula "18") (term "13"))
                  (rule "variableDeclaration" (formula "18") (term "13") (newnames "b_9"))
                  (rule "castDelInt" (formula "5") (term "1,1,0"))
                  (rule "castDelInt" (formula "5") (term "0,0,0"))
                  (rule "castDelInt" (formula "3") (term "1,1,1,1,0,0"))
                  (rule "castDelInt" (formula "4") (term "1,0,1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "4") (term "0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "3") (term "1,0,1,1,1,0"))
                  (rule "castDelInt" (formula "3") (term "1,0,1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "3") (term "1,0,0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "18") (term "0,0,5"))
                  (rule "castDelInt" (formula "18") (term "1,0,1,1,5"))
                  (rule "castDelInt" (formula "5") (term "1,1,1,0"))
                  (rule "castDelInt" (formula "5") (term "1,0,0,0"))
                  (rule "castDelInt" (formula "4") (term "1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "4") (term "1,0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "3") (term "1,1,1,0"))
                  (rule "castDelInt" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "castDelInt" (formula "3") (term "0,0,0,0,1,0"))
                  (rule "castDelInt" (formula "18") (term "1,0,0,5"))
                  (rule "castDelInt" (formula "18") (term "1,1,5"))
                  (rule "translateJavaSubInt" (formula "5") (term "1,1,0"))
                  (rule "translateJavaAddInt" (formula "5") (term "0,0,0"))
                  (rule "translateJavaSubInt" (formula "4") (term "1,1,0,0,1,0"))
                  (rule "translateJavaAddInt" (formula "4") (term "0,0,0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "3") (term "1,1,1,0"))
                  (rule "translateJavaSubInt" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "translateJavaAddInt" (formula "3") (term "0,0,0,0,1,0"))
                  (rule "translateJavaAddInt" (formula "18") (term "0,0,5"))
                  (rule "translateJavaSubInt" (formula "18") (term "1,1,5"))
                  (rule "polySimp_elimSub" (formula "5") (term "1,1,0"))
                  (rule "mul_literals" (formula "5") (term "1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,5"))
                  (rule "mul_literals" (formula "18") (term "1,1,1,5"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "inEqSimp_gtToGeq" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3") (term "0,1,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "3") (term "1,1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,0,5"))
                  (rule "polySimp_addComm0" (formula "5") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,1,5"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,5"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "nnf_imp2or" (formula "4") (term "0"))
                  (rule "nnf_imp2or" (formula "3") (term "0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,1,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "3") (term "1,0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,1,1,1,0,0"))
                  (rule "add_zero_left" (formula "3") (term "0,1,1,1,0,0"))
                  (rule "inReachableStateExpand" (formula "5"))
                  (builtin "Update Simplification" (formula "5"))
                  (rule "eq_imp" (formula "5") (term "0,0,1"))
                  (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "7"))
                  (rule "concrete_impl_1" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "elim_forall12" (formula "6") (term "0,1,0"))
                  (rule "elim_forall8" (formula "6") (term "1,0"))
                  (rule "eqClose" (formula "6") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "eqClose" (formula "6") (term "1,0,0,1,1,0,1,0"))
                  (rule "eqClose" (formula "6") (term "1,0,1,1,1,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,0,0,0,1,0,1,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,0,1,1,0,1,0"))
                  (rule "concrete_and_3" (formula "6") (term "0,1,1,1,0"))
                  (rule "replace_known_left" (formula "6") (term "0,0,1,0") (ifseqformula "12"))
                  (rule "concrete_impl_1" (formula "6") (term "0,1,0"))
                  (rule "array_store_static_analyse" (formula "6") (term "1,1,0") (ifseqformula "18"))
                  (rule "concrete_and_3" (formula "6") (term "1,0"))
                  (rule "nnf_imp2or" (formula "6") (term "0"))
                  (rule "nnf_notAnd" (formula "6") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                  (rule "commute_or" (formula "3") (term "1,0,0"))
                  (rule "commute_or" (formula "6") (term "1,0"))
                  (rule "commute_or" (formula "3") (term "0,1,0,0"))
                  (rule "ifthenelse_to_or_left" (formula "4") (term "1,0"))
                  (rule "eqClose" (formula "4") (term "1,1,1,0"))
                  (rule "concrete_or_3" (formula "4") (term "1,1,0"))
                  (rule "concrete_and_3" (formula "4") (term "1,0"))
                  (rule "nnf_notAnd" (formula "4") (term "0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "4") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "4") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,0"))
                  (rule "ifthenelse_to_or_left" (formula "3") (term "1,0"))
                  (rule "eqSymm" (formula "3") (term "1,1,1,0"))
                  (rule "nnf_notAnd" (formula "3") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,1,0"))
                  (rule "greater_than_comparison_new" (formula "19") (term "13"))
                  (builtin "Update Simplification" (formula "19"))
                  (rule "assignment_instance_field_of_this" (formula "19") (term "12,2"))
                  (builtin "Update Simplification" (formula "19"))
                  (rule "assignment_instance_field_of_this" (formula "19") (term "12,1"))
                  (builtin "Update Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "13,1"))
                  (rule "methodCallEmpty" (formula "19") (term "13,2"))
                  (rule "inEqSimp_gtToGeq" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                  (rule "all_unused" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "shift_paren_or" (formula "5") (term "0"))
                  (rule "shift_paren_or" (formula "3") (term "0,0"))
                  (rule "commute_or" (formula "3") (term "1,1,0"))
                  (rule "shift_paren_or" (formula "4") (term "0"))
                  (rule "commute_or" (formula "3") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "4") (term "0,0"))
                  (rule "commute_or_2" (formula "4") (term "0,0,0"))
                  (rule "eq_or" (formula "4") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "3") (term "1,1,0"))
                  (rule "commute_or" (formula "3") (term "0,1,1,0"))
                  (rule "cnf_rightDist" (formula "3") (term "0"))
                  (rule "distr_forallAnd" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "4") (term "0"))
                  (rule "shift_paren_or" (formula "3") (term "0"))
                  (rule "shift_paren_or" (formula "3") (term "0,0"))
                  (rule "commute_or_2" (formula "3") (term "0,0,0"))
                  (rule "eq_or_2" (formula "3") (term "0,0"))
                  (rule "commute_or_2" (formula "3") (term "0,0,0"))
                  (rule "eq_or_2" (formula "3") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "4") (term "0"))
                  (rule "distr_forallAnd" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or_2" (formula "5") (term "0"))
                  (rule "shift_paren_or" (formula "4") (term "0"))
                  (rule "commute_or_2" (formula "4") (term "0,0"))
                  (rule "commute_or_2" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1,1,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "0,1,0,0,0,0"))
                  (rule "leq_literals" (formula "4") (term "1,0,0,0,0"))
                  (rule "concrete_or_3" (formula "4") (term "0,0,0,0"))
                  (rule "concrete_or_1" (formula "4") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "4") (term "0,0"))
                  (rule "concrete_or_1" (formula "4") (term "0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0"))
                  (rule "commute_or" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "5") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
                  (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "5") (term "1,0,0"))
                  (rule "concrete_or_3" (formula "5") (term "0,0"))
                  (rule "concrete_or_1" (formula "5") (term "0"))
                  (rule "all_unused" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "ifthenelse_to_or_left" (formula "5") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "5") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,0,0"))
                  (rule "commute_or" (formula "5") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "5") (term "0"))
                  (rule "cnf_rightDist" (formula "5") (term "1,1,0"))
                  (rule "commute_or" (formula "5") (term "0,1,1,0"))
                  (rule "cnf_rightDist" (formula "5") (term "0"))
                  (rule "distr_forallAnd" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "commute_or_2" (formula "5") (term "0"))
                  (rule "commute_or" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "5") (term "0,0"))
                  (rule "eq_or" (formula "5") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "6") (term "0"))
                  (rule "distr_forallAnd" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "commute_or_2" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "7") (term "0"))
                  (rule "commute_or_2" (formula "7") (term "0,0"))
                  (rule "shift_paren_or" (formula "6") (term "0,0"))
                  (rule "commute_or_2" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "1,1,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,1,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "6") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "0,1,0,0,0,0"))
                  (rule "leq_literals" (formula "6") (term "1,0,0,0,0"))
                  (rule "concrete_or_3" (formula "6") (term "0,0,0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0,0"))
                  (rule "concrete_or_1" (formula "6") (term "0"))
                  (rule "shift_paren_or" (formula "7") (term "0,0,0"))
                  (rule "commute_or" (formula "7") (term "0,0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "7") (term "1,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "0,1,0,0,0"))
                  (rule "leq_literals" (formula "7") (term "1,0,0,0"))
                  (rule "concrete_or_3" (formula "7") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "7") (term "0,0"))
                  (rule "concrete_or_1" (formula "7") (term "0"))
                  (rule "all_unused" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "ifthenelse_split_for" (formula "18"))
                  (branch " start_2 >= 1 + at TRUE"
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "emptyModality" (formula "18") (term "13"))
                     (builtin "Update Simplification" (formula "18"))
                     (rule "boolean_equal" (formula "18") (term "0,0"))
                     (rule "concrete_not_1" (formula "18") (term "0"))
                     (rule "concrete_impl_2" (formula "18"))
                     (rule "closeTrue" (formula "18"))
                  )
                  (branch " start_2 >= 1 + at FALSE"
                     (rule "inEqSimp_geqRight" (formula "18"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,0"))
                     (rule "times_zero_1" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "3") (term "1,1,0,0,0") (ifseqformula "2"))
                     (rule "eq_or_2" (formula "3") (term "0,0,0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "1,1,1,0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_or_tautInEq0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,1,1,0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "1,1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "3") (term "1,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "0,1,0,0,0"))
                     (rule "leq_literals" (formula "3") (term "1,0,0,0"))
                     (rule "concrete_or_3" (formula "3") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "3") (term "0,0"))
                     (rule "concrete_or_1" (formula "3") (term "0"))
                     (rule "all_unused" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "emptyModality" (formula "15") (term "13"))
                     (builtin "Update Simplification" (formula "15"))
                     (rule "boolean_not_equal_2" (formula "15") (term "0,0"))
                     (rule "concrete_not_2" (formula "15") (term "0"))
                     (rule "concrete_impl_1" (formula "15"))
                     (rule "assignment_to_reference_array_component_no_rtsj" (formula "15") (term "12"))
                     (branch " Normal Execution (_in != null)"
                        (builtin "Update Simplification" (formula "16"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "methodCallEmpty" (formula "17") (term "12"))
                        (rule "tryEmpty" (formula "17") (term "12"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "array_store_static_analyse" (formula "1") (ifseqformula "15"))
                        (rule "true_left" (formula "1"))
                        (rule "emptyModality" (formula "15") (term "12"))
                        (builtin "Update Simplification" (formula "15"))
                        (rule "eqClose" (formula "15") (term "0,0"))
                        (rule "eqClose" (formula "15") (term "1"))
                        (rule "concrete_and_1" (formula "15") (term "0"))
                        (rule "concrete_and_3" (formula "15"))
                        (rule "allRight" (formula "15") (inst "sk=i_3"))
                        (rule "orRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "eqSymm" (formula "17"))
                        (rule "inEqSimp_leqRight" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,2,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,1,0,2,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "replace_known_left" (formula "17") (term "0,0,2,0") (ifseqformula "2"))
                        (rule "concrete_and_1" (formula "17") (term "0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "17") (term "0,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "17") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "17") (term "0,0"))
                        (rule "ifthenelse_false" (formula "17") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "1"))
                        (rule "ifthenelse_true" (formula "17") (term "0"))
                        (rule "allLeft" (formula "4") (inst "t=i_3"))
                        (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "18"))
                        (rule "concrete_or_4" (formula "4"))
                        (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "4") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "4") (term "1,0"))
                        (rule "concrete_or_4" (formula "4") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "4") (term "0,0,1"))
                        (rule "leq_literals" (formula "4") (term "0,1"))
                        (rule "concrete_and_2" (formula "4") (term "1"))
                        (rule "concrete_or_4" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                        (rule "concrete_and_2" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                     (branch " Null Reference (_in = null)"
                        (builtin "Update Simplification" (formula "16"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "close" (formula "15") (ifseqformula "1"))
                     )
                     (branch " Index Out of Bounds (_in != null, but _at Out of Bounds!)"
                        (builtin "Update Simplification" (formula "16"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (rule "concrete_and_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0"))
                        (rule "add_literals" (formula "12") (term "0"))
                        (rule "leq_literals" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                     (branch " Array Store Exception (incompatible dynamic element type of _in and _rec)"
                        (builtin "Update Simplification" (formula "16"))
                        (builtin "Update Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "array_store_static_analyse" (formula "12") (ifseqformula "15"))
                        (rule "closeTrue" (formula "12"))
                     )
                  )
               )
            )
            (branch " Null Reference (_in = null)"
               (builtin "Update Simplification" (formula "1"))
               (rule "close" (formula "12") (ifseqformula "1"))
            )
         )
      )
      (branch " Null Reference (_in = null)"
         (builtin "Update Simplification" (formula "1"))
         (rule "close" (formula "11") (ifseqformula "1"))
      )
   )
)
)

}
